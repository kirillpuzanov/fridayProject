{"version":3,"sources":["main/m1-ui/components/header/Header.module.css","main/m1-ui/components/signIn/SingInForm.module.css","main/m1-ui/components/registration/Registration.module.css","main/m1-ui/components/setNewPassword/SetNewPassword.module.css","main/m1-ui/components/notFound/pnf.module.css","main/m1-ui/common/myComponent/myInput/MyInput.module.css","main/m1-ui/common/myComponent/myBtn/MyBtn.module.css","main/m1-ui/common/myComponent/myInput/MyInputTest.module.css","main/m1-ui/common/myComponent/myBtnTest/MyBtnTest.module.css","main/m1-ui/components/notFound/PNF.tsx","main/m1-ui/common/myComponent/myInput/MyInput.tsx","main/m1-ui/common/myComponent/myBtn/MyBtn.tsx","main/m1-ui/components/setNewPassword/SetNewPassword.tsx","main/m1-ui/components/registration/Registration.tsx","main/m3-dal/api.ts","main/m3-dal/authAPI.ts","main/m2-bll/profile-reducer.ts","main/m2-bll/auth-reducer.ts","main/m1-ui/components/registration/RegistrationContainer.tsx","main/m1-ui/common/myComponent/myInput/MyInputTest.tsx","main/m1-ui/common/myComponent/myBtnTest/MyBtnTest.tsx","main/m1-ui/components/signIn/SignInForm.tsx","main/m1-ui/components/signIn/SingIn.tsx","main/m1-ui/assets/img/ava_default.jpg","main/m1-ui/components/profile/ProfileInfo.tsx","main/m1-ui/components/profile/Profile.tsx","main/m1-ui/components/profile/ProfileContainer.tsx","main/m1-ui/components/recoveryPassword/RecoveryPassword.tsx","main/m1-ui/components/recoveryPassword/RecoveryPasswordContainer.tsx","main/m1-ui/components/routes/Routes.tsx","main/m1-ui/components/header/Header.tsx","main/m1-ui/assets/preloader/loader.svg","main/m1-ui/common/Preloader/Preloader.tsx","main/m2-bll/app-reducer.ts","main/m1-ui/App.tsx","reportWebVitals.ts","main/m2-bll/store.ts","index.tsx"],"names":["module","exports","PNF","className","style","pnf","pnf_error","pnf_descr","MyInput","props","error","styles","inputBase","red","onBlur","type","value","onChange","onKeyPress","placeholder","name","MyBtn","redBtn","btn","onClick","disabled","SetNewPassword","formSubmit","errors","password","repeatPass","errorPassword","errorRepeatPass","disBtn","useDispatch","newPass","newPass_title","newPass_descr","reg_form__error","Registration","email","errorServer","errorEmail","reg","reg_title","reg_form","instance","axios","create","baseURL","withCredentials","authAPI","post","then","res","data","r","delete","recoveryPassObj","initialState","profile","profileActions","AuthInitialState","isAuth","loading","registerSuccess","recoveryPassSuccess","setNewPassSuccess","authActions","SingInTC","dispatch","a","response","message","console","log","RegistrationContainer","useSelector","state","auth","formik","useFormik","initialValues","validate","values","test","length","onSubmit","addedUser","to","SIGN_IN_PATH","PROFILE_PATH","handleChange","handleSubmit","MyInputTest","disable","e","charCode","MyBtnTest","SignInForm","disableErrorField","hasPasswordFieldError","hasEmailFieldError","st","title","emailValue","formikEmailError","has_error","formikConfirmError","passValue","formikPassError","click","footer","REGISTRATION_PATH","header_nav__link","RECOVERY_PASSWORD_PATH","SignIn","rememberMe","confirm","formikHelpers","action","setFieldError","JSON","stringify","wrapper","ProfileInfo","src","avatar","ava_default","alt","isAdmin","publicCardPacksCount","Profile","onLogOut","ProfileContainer","RecoveryPassword","recPass","recPass_title","recPass_description","recPass_form","RecoveryPasswordContainer","RecoveryPassObj","from","recoveryPassTC","SET_NEW_PASSWORD_PATH","PAGE_NOT_FOUND_PATH","Routes","exact","path","component","Header","header","header_nav","activeClassName","width","height","display","margin","Preloader","preloader","isInitializing","initializeError","appActions","initialiseError","App","app","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d22de81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ih8R\",\"header_nav\":\"Header_header_nav__3OrmJ\",\"header_nav__link\":\"Header_header_nav__link__1ifim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SingInForm_wrapper__3zhj5\",\"click\":\"SingInForm_click__3WO8j\",\"has_error\":\"SingInForm_has_error__3eIZw\",\"title\":\"SingInForm_title__uV39D\",\"footer\":\"SingInForm_footer__2ARSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg\":\"Registration_reg__2MTkG\",\"reg_title\":\"Registration_reg_title__243Ch\",\"reg_form\":\"Registration_reg_form__3LWhs\",\"reg_form__error\":\"Registration_reg_form__error__1LPSu\",\"mdc-snackbar\":\"Registration_mdc-snackbar__2OJ2U\",\"mdc-snackbar__dismiss\":\"Registration_mdc-snackbar__dismiss__1jfGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SetNewPassword_error__3tktq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pnf\":\"pnf_pnf__2KgTX\",\"pnf_error\":\"pnf_pnf_error__28Eus\",\"pnf_descr\":\"pnf_pnf_descr__2rEup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__2TMXn\",\"red\":\"MyInput_red__1pG1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__3_vFN\",\"redBtn\":\"MyBtn_redBtn__1XT6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInputTest_inputBase__274cT\",\"red\":\"MyInputTest_red__33Qh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtnTest_btn__2P_lN\",\"redBtn\":\"MyBtnTest_redBtn__3cebc\"};","import React from 'react';\r\nimport style from './pnf.module.css'\r\n\r\n\r\n\r\nexport const PNF:React.FC = ()=> {\r\n\r\n    return <section className={style.pnf}>\r\n        <div className={style.pnf_error}> 404 </div>\r\n        <p className={style.pnf_descr}>Sorry, Page not Found...</p>\r\n    </section>\r\n}","import React from 'react';\r\nimport styles from './MyInput.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value?: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: (e: React.FocusEvent<any>) => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onKeyPress={props.onKeyPress}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport style from './SetNewPassword.module.css'\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport {SetNewPassErrorType} from './SetNewPasswordContainer';\r\n\r\ntype NewPassType = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: SetNewPassErrorType\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n}\r\n\r\nexport const SetNewPassword: React.FC<NewPassType> = (props) => {\r\n    const {onChange, formSubmit, errors, password, repeatPass} = props;\r\n    const {password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = !!errorPassword || !!errorRepeatPass;\r\n    const dispatch = useDispatch()\r\n\r\n    return <section>\r\n        <main className={style.newPass}>\r\n            <form>\r\n                <h2 className={style.newPass_title}> Смена пароля </h2>\r\n                <div>\r\n                    <p className={style.newPass_descr}> Введите ваш новый пароль.. </p>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword\r\n                        ? <div className={style.reg_form__error}>{errors.password}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <p>Повторите ваш новый пароль..</p>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass\r\n                        ? <div className={style.reg_form__error}>{errors.repeatPass}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <MyBtn name='Send' onClick={formSubmit}\r\n                           error={disBtn} disabled={disBtn} type={'submit'}/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </section>\r\n}","import React from 'react';\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport style from './Registration.module.css';\r\nimport {FormikErrorType} from './RegistrationContainer';\r\nimport {Snackbar} from '@material/react-snackbar';\r\nimport  '@material/react-snackbar/dist/snackbar.css';\r\n\r\ntype RegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n    errors: FormikErrorType\r\n    formSubmit: () => void\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationType> = (props) => {\r\n\r\n    const {email, password, repeatPass, error:errorServer, errors, onChange, formSubmit} = props;\r\n    const {email: errorEmail, password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = errorEmail || errorPassword || errorRepeatPass;\r\n\r\n\r\n\r\n    return <section>\r\n        <main className={style.reg}>\r\n            <div className={style.reg_title}> Registration form</div>\r\n            <form className={style.reg_form}>\r\n                <div>\r\n                    <span>Enter your email:</span>\r\n                    <MyInput error={!!errorEmail} type='email'\r\n                             value={email} onChange={onChange}\r\n                             placeholder='email...' name='email'/>\r\n                    {errorEmail ?\r\n                        <div className={style.reg_form__error}>{errorEmail}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Enter your password:</span>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword ?\r\n                        <div className={style.reg_form__error}>{errors.password}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Repeat your password:</span>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass ?\r\n                        <div className={style.reg_form__error}>{errors.repeatPass}</div> : null}\r\n                </div>\r\n                {errorServer ? <p className={style.reg_form__error}> {errorServer} </p> : ''}\r\n                <div>\r\n                    <MyBtn error={!!disBtn} disabled={!!disBtn} name={'Register'} onClick={formSubmit}/>\r\n                </div>\r\n                {/*{error && <Snackbar message={error} timeoutMs={4000}/>}*/}\r\n            </form>\r\n        </main>\r\n    </section>\r\n}\r\n\r\n\r\n// type RegistrationType = {\r\n//     email: string\r\n//     password: string\r\n//     repeatPass: string\r\n//     error: string\r\n//     errors: FormikErrorType\r\n//     loading: boolean\r\n//     formSubmit: () => void\r\n//     onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n//     // errorEmail: boolean | string | undefined\r\n//     // errorPassword: boolean | string | undefined\r\n//     // errorRepeatPass: boolean | string | undefined\r\n//     // setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setRepeatPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n// }\r\n\r\n\r\n//old method\r\n// export const Registration: React.FC<RegistrationType> = (props) => {\r\n//     const {email, password, repeatPass, error,errors, loading,onChange, /*setEmail, setPassword, setRepeatPassword,*/ formSubmit} = props;\r\n//\r\n//     if (loading) return <Preloader/>\r\n//\r\n//     return <section>\r\n//         <main className={style.reg}>\r\n//             <div className={style.reg_title}> Registration form</div>\r\n//             <form className={style.reg_form}>\r\n//                 <div>\r\n//                     <span>Enter your email:</span>\r\n//                     <MyInput error={!!error} type='email'\r\n//                              value={email} onChange={onChange}\r\n//                              placeholder='email...' name='email'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Enter your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={password} onChange={onChange}\r\n//                              placeholder='min 8 symbols..' name='password'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Repeat your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={repeatPass} onChange={onChange}\r\n//                              placeholder='min 8 symbols...' name='repeatPassword'/>\r\n//                 </div>\r\n//                 {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n//                 <div>\r\n//                     <MyBtn disabled={loading} name={'Login'} onClick={formSubmit}/>\r\n//                 </div>\r\n//             </form>\r\n//         </main>\r\n//     </section>\r\n// }","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    //локально:\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    // gh-pages:\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n","import {instance} from './api';\r\nimport {RecoveryPassObjType} from '../m1-ui/components/recoveryPassword/RecoveryPasswordContainer';\r\n\r\n\r\nexport const authAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseReg>('auth/register', {email, password})\r\n            .then(res => res.data)\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ProfileType>('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return instance.post<ProfileType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    recoveryPass(recoveryPassObj:RecoveryPassObjType ){\r\n        return instance.post<LogoutResType>('auth/forgot', recoveryPassObj)\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype ResponseReg = {\r\n    addedUser: ProfileType\r\n    error: string\r\n}\r\ntype LogoutResType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    token: string\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {ProfileType} from '../m3-dal/authAPI';\r\n\r\n\r\nconst initialState = {\r\n    profile: {} as ProfileType,\r\n}\r\nexport const profileReducer = (state: initialStateType = initialState, action: ProfileActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE': return { ...state, profile: {...action.profile}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//actions\r\nexport const profileActions = {\r\n    setProfileAC: (profile: ProfileType) => ({type: 'profile/SET-PROFILE', profile} as const),\r\n}\r\n//thunks\r\n\r\ntype initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<ProfileActionsType>\r\nexport type ProfileActionsType = InferActionsTypes<typeof profileActions>\r\n\r\n","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI, LoginParamsType} from '../m3-dal/authAPI';\r\nimport {profileActions, ProfileActionsType} from './profile-reducer';\r\nimport {RecoveryPassObjType} from '../m1-ui/components/recoveryPassword/RecoveryPasswordContainer';\r\n\r\nexport const AuthInitialState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    error: '',\r\n    registerSuccess: false,\r\n    recoveryPassSuccess: false,\r\n    setNewPassSuccess:false,\r\n};\r\nexport const authReducer = (state: AuthInitialStateType = AuthInitialState, action: authActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case 'singIn/SET-IS-AUTH':\r\n            return {...state, isAuth: action.isAuth}\r\n        case '/SERVER-ERROR/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case '/REG/SET-REGISTER-SUCCESS':\r\n            return {...state, registerSuccess: true}\r\n        case '/REG/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n        case '/REC/SET-RECOVERY-PASS-SUCCESS':\r\n            return {...state, recoveryPassSuccess: true}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action's\r\nexport const authActions = {\r\n    setIsAuthAC: (isAuth: boolean) => ({type: 'singIn/SET-IS-AUTH', isAuth} as const),\r\n    setRegisterSuccess: () => ({type: '/REG/SET-REGISTER-SUCCESS'} as const),\r\n    setRecoveryPassSuccess: () => ({type: '/REC/SET-RECOVERY-PASS-SUCCESS'} as const),\r\n    setLoading: (loading: boolean) => ({type: '/REG/SET-LOADING', loading} as const),\r\n    setError: (error: string) => ({type: '/SERVER-ERROR/SET-ERROR', error} as const),\r\n};\r\n\r\n//thunk's\r\nexport const SingInTC = (data: LoginParamsType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.login(data);\r\n            dispatch(authActions.setIsAuthAC(true));\r\n            dispatch(profileActions.setProfileAC(response.data))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ',more details on the console');\r\n            dispatch(authActions.setIsAuthAC(false));\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    };\r\nexport const registerTC = (email: string, password: string): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(authActions.setLoading(true))\r\n        try {\r\n            let response = await authAPI.register(email, password)\r\n            if (response.addedUser) dispatch(authActions.setRegisterSuccess())\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n        dispatch(authActions.setLoading(false))\r\n    };\r\n\r\nexport const logoutTC = (): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.logout()\r\n            dispatch(authActions.setIsAuthAC(false))\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n    };\r\nexport const recoveryPassTC = (RecoveryPassObj: RecoveryPassObjType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.recoveryPass(RecoveryPassObj)\r\n            dispatch(authActions.setRecoveryPassSuccess())\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n    };\r\n\r\n//type's\r\nexport type AuthInitialStateType = typeof AuthInitialState;\r\ntype ThunkType = BaseThunkType<authActionsType>;\r\nexport type authActionsType = InferActionsTypes<typeof authActions>\r\n    | ProfileActionsType;\r\n\r\n","import React from 'react';\r\nimport {Registration} from './Registration';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../routes/Routes';\r\nimport {useFormik} from 'formik';\r\nimport {AuthInitialStateType, registerTC} from '../../../m2-bll/auth-reducer';\r\n\r\nexport const RegistrationContainer = () => {\r\n    const { error, registerSuccess} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(registerTC(values.email, values.password))\r\n        },\r\n    })\r\n\r\n    if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return (\r\n        <Registration\r\n            email={formik.values.email}\r\n            password={formik.values.password}\r\n            repeatPass={formik.values.repeatPass}\r\n            error={error}\r\n            errors={formik.errors}\r\n            onChange={formik.handleChange}\r\n            formSubmit={formik.handleSubmit}\r\n        />\r\n    )\r\n}\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPass?: string\r\n}\r\n\r\n//old method\r\n\r\n// export type eInput = React.ChangeEvent<HTMLInputElement>\r\n//\r\n// export const RegistrationContainer: React.FC = () => {\r\n//\r\n//     const [email, setEmailVal] = useState<string>('')\r\n//     const [password, setPasswordVal] = useState('')\r\n//     const [repeatPass, setRepeatPassVal] = useState('')\r\n//\r\n//      const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n//     const dispatch = useDispatch()\r\n//\r\n//     const setEmail = useCallback((e: eInput) => {\r\n//         setEmailVal(e.currentTarget.value)\r\n//     }, [setEmailVal])\r\n//     const setPassword = useCallback((e: eInput) => {\r\n//         setPasswordVal(e.currentTarget.value)\r\n//     }, [setPasswordVal])\r\n//     const setRepeatPassword = useCallback((e: eInput) => {\r\n//         setRepeatPassVal(e.currentTarget.value)\r\n//     }, [setRepeatPassVal])\r\n//\r\n//     const formSubmit = useCallback(() => {\r\n//         if (!email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)) {\r\n//             dispatch(signInActions.setError('Uncorrected email'))\r\n//         } else if (password.length < 8) {\r\n//             dispatch(signInActions.setError('Password must be more than 8 characters...'))\r\n//         } else if (password !== repeatPass) {\r\n//             dispatch(signInActions.setError('Invalid second password'))\r\n//         } else if (email && password && repeatPass) {\r\n//             dispatch(registerTC(email, password))\r\n//         }\r\n//     }, [password, repeatPass, email, dispatch])\r\n//\r\n//     if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n//     return <section>\r\n//         <Registration\r\n//             email={email}\r\n//             password={password}\r\n//             repeatPass={repeatPass}\r\n//             error={error}\r\n//             loading={loading}\r\n//             setEmail={setEmail}\r\n//             setPassword={setPassword}\r\n//             setRepeatPassword={setRepeatPassword}\r\n//             formSubmit={formSubmit}\r\n//         />\r\n//     </section>\r\n// }","import React, {KeyboardEvent} from 'react';\r\nimport styles from './MyInputTest.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: () => void\r\n    name?: string\r\n    disable?: boolean\r\n}\r\n\r\nexport function MyInputTest(props: myInputType) {\r\n\r\n    const onPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (props.onKeyPress && e.charCode === 13) {\r\n            props.onKeyPress();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                disabled={props.disable}\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n                onKeyPress={onPressEnter}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyBtnTest.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtnTest(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport st from './SingInForm.module.css';\r\nimport {MyInputTest} from '../../common/myComponent/myInput/MyInputTest';\r\nimport {MyBtnTest} from '../../common/myComponent/myBtnTest/MyBtnTest';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RECOVERY_PASSWORD_PATH, REGISTRATION_PATH} from '../routes/Routes';\r\nimport style from '../header/Header.module.css';\r\n\r\ntype PropsType = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    emailValue: string\r\n    hasEmailFieldError: boolean\r\n    formikEmailError: string | undefined\r\n    passValue: string\r\n    hasPasswordFieldError: boolean\r\n    formikPassError: string | undefined\r\n    onClick: () => void\r\n    formikConfirmError: string | undefined\r\n\r\n}\r\n\r\n\r\nexport const SignInForm: React.FC<PropsType> = (props) => {\r\n    const disableErrorField = props.hasPasswordFieldError || props.hasEmailFieldError;\r\n    return <div>\r\n        <div className={st.title}>{props.title}</div>\r\n        <MyInputTest type='email'\r\n                     onChange={props.onChange}\r\n                     value={props.emailValue}\r\n                     placeholder={'email'}\r\n                     name={'email'}\r\n                     error={props.hasEmailFieldError}\r\n        /> {props.formikEmailError ?\r\n        <div className={st.has_error}>{props.formikEmailError}</div> : null}\r\n        {props.formikConfirmError ? <div className={st.has_error}>{props.formikConfirmError}</div> : null}\r\n        <MyInputTest type='password'\r\n                     onChange={props.onChange}\r\n                     value={props.passValue}\r\n                     placeholder={'password'}\r\n                     error={props.hasPasswordFieldError} name={'password'}\r\n        />\r\n        {props.formikPassError ?\r\n            <div className={st.has_error}>{props.formikPassError}</div> : null}\r\n\r\n        <div className={st.click}>\r\n            <div>\r\n                <input type='checkbox' onChange={props.onChange}/>RememberMe\r\n            </div>\r\n            {!disableErrorField ? <MyBtnTest name='Login'\r\n                                             type=\"submit\"\r\n                                             onClick={props.onClick}\r\n                                             disabled={disableErrorField}\r\n                                             error={disableErrorField}\r\n            /> : null}\r\n            {/*<MyBtnTest name='Login'*/}\r\n            {/*           type=\"submit\"*/}\r\n            {/*           onClick={props.onClick}*/}\r\n            {/*           disabled={disableErrorField}*/}\r\n            {/*           error={disableErrorField}*/}\r\n            {/*/>*/}\r\n        </div>\r\n        <div className={st.footer}>\r\n            <nav>\r\n                SingUp\r\n                <NavLink to={REGISTRATION_PATH} className={style.header_nav__link}>SingUp</NavLink>\r\n            </nav>\r\n            <nav>\r\n                Forgot?\r\n                <NavLink to={RECOVERY_PASSWORD_PATH} className={style.header_nav__link}>Forgot?</NavLink>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n    </div>;\r\n};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport st from './SingInForm.module.css';\r\nimport {SignInForm} from './SignInForm';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../routes/Routes';\r\nimport {SingInTC} from '../../../m2-bll/auth-reducer';\r\n\r\n\r\nexport const SignIn: React.FC<any> = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            confirm: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 8 characters';\r\n            }\r\n            if (values.confirm) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values, formikHelpers) => {\r\n            const action = await dispatch(SingInTC(values));\r\n            formikHelpers.setFieldError('confirm', 'Incorrect email or password');\r\n            console.log(JSON.stringify(action) + 'novoe');\r\n\r\n\r\n        },\r\n    });\r\n    const hasEmailFieldError = !!formik.errors.email;\r\n    const hasPasswordFieldError = !!formik.errors.password;\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n\r\n    return <div className={st.wrapper}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <SignInForm\r\n                title={'LOGIN FORM'}\r\n                onChange={formik.handleChange}\r\n                onClick={formik.handleSubmit}\r\n                emailValue={formik.values.email}\r\n                formikConfirmError={formik.errors.confirm}\r\n                formikEmailError={formik.errors.email}\r\n                formikPassError={formik.errors.password}\r\n                passValue={formik.values.password}\r\n                hasEmailFieldError={hasEmailFieldError}\r\n                hasPasswordFieldError={hasPasswordFieldError}\r\n            />\r\n        </form>\r\n\r\n    </div>;\r\n};\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    confirm?: string\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ava_default.17ad3620.jpg\";","import {ProfileType} from '../../../m3-dal/authAPI';\r\nimport ava_default from '../../assets/img/ava_default.jpg';\r\nimport React from 'react';\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n}\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n    const {profile} = props;\r\n    return (\r\n        <div>\r\n            <div><img src={profile.avatar ? profile.avatar : ava_default} alt=\"\"/></div>\r\n            <div>Name : {profile.name}</div>\r\n            <div>Email : {profile.email}</div>\r\n            <div>IsAdmin : {profile.isAdmin}</div>\r\n            <div>Public Card Packs Count : {profile.publicCardPacksCount}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {ProfileType} from '../../../m3-dal/authAPI';\r\nimport style from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\n\r\ntype ProfType = {\r\n    profile: ProfileType\r\n    onLogOut: ()=> void\r\n}\r\n\r\nexport const Profile: React.FC<ProfType> = (props) => {\r\n    const {profile,onLogOut} = props;\r\n    return <section>\r\n        <div className={style.profile}>\r\n            <ProfileInfo profile={profile}/>\r\n            <MyBtn name={'LogOut'} onClick={onLogOut}/>\r\n        </div>\r\n    </section>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../routes/Routes';\r\nimport {Profile} from './Profile';\r\nimport {ProfileType} from '../../../m3-dal/authAPI';\r\nimport {logoutTC} from '../../../m2-bll/auth-reducer';\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profile.profile);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOut = () => dispatch(logoutTC())\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>\r\n    return <section>\r\n        <Profile\r\n            profile={profile}\r\n            onLogOut={onLogOut}\r\n        />\r\n    </section>\r\n}","import React from 'react';\r\nimport style from './RecoveryPass.module.css'\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {Snackbar} from '@material/react-snackbar';\r\n\r\ntype RecPasstype = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n    email: string\r\n    error: string\r\n}\r\n\r\nexport const RecoveryPassword: React.FC<RecPasstype> = (props) => {\r\n\r\n    const {onChange, formSubmit, errors, email, error:errorServer} = props;\r\n    const {email: errorEmail} = errors;\r\n    return <section>\r\n        <div className={style.recPass}>\r\n            <h2 className={style.recPass_title}> RecoveryPassword </h2>\r\n            <p className={style.recPass_description}>\r\n                Для восстановления пароля введите ваш email,\r\n                на него придет письмо с дальнейшими инструкциями.\r\n            </p>\r\n            <form className={style.recPass_form}>\r\n                <MyInput type='email' onChange={onChange} name={'email'}\r\n                         value={email} placeholder='your email...' error={!!errorEmail}/>\r\n                {errorEmail ?\r\n                    <div>{errorEmail}</div> : null}\r\n\r\n\r\n                <MyBtn name='Send' onClick={formSubmit}\r\n                       error={!!errorEmail} disabled={!!errorEmail} type={'submit'}/>\r\n                {errorServer ? <p className={style.reg_form__error}> {errorServer} </p> : ''}\r\n                {/*{error && <Snackbar message={error} timeoutMs={4000}/>}*/}\r\n            </form>\r\n        </div>\r\n\r\n\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {AuthInitialStateType, recoveryPassTC} from '../../../m2-bll/auth-reducer';\r\nimport {useFormik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SET_NEW_PASSWORD_PATH} from '../routes/Routes';\r\nimport {RecoveryPassword} from './RecoveryPassword';\r\n\r\n\r\nexport const RecoveryPasswordContainer: React.FC = () => {\r\n\r\n    const {error, recoveryPassSuccess} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: RecoveryPassErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            const RecoveryPassObj: RecoveryPassObjType = {\r\n                email: values.email,\r\n                from: 'kirillpuzanov@mail.ru',\r\n                message: `<div style=\"background-color: lime; padding: 15px\">\r\n                        password recovery link: \r\n\t                    <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n\t                    </div>`\r\n            }\r\n            dispatch(recoveryPassTC(RecoveryPassObj))\r\n            console.log(RecoveryPassObj)\r\n        },\r\n    })\r\n\r\n    if (recoveryPassSuccess) return <Redirect to={SET_NEW_PASSWORD_PATH}/>\r\n\r\n    return <section>\r\n        <div>\r\n            <RecoveryPassword\r\n                email={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                errors={formik.errors}\r\n                error={error}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\nexport type RecoveryPassErrorType = {\r\n    email?: string\r\n\r\n}\r\nexport type RecoveryPassObjType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {PNF} from '../notFound/PNF';\r\nimport {SetNewPassword} from '../setNewPassword/SetNewPassword';\r\nimport {RegistrationContainer} from '../registration/RegistrationContainer';\r\nimport {SignIn} from '../signIn/SingIn';\r\nimport {ProfileContainer} from '../profile/ProfileContainer';\r\nimport {RecoveryPasswordContainer} from '../recoveryPassword/RecoveryPasswordContainer';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/';\r\nexport const REGISTRATION_PATH = '/registration';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\nexport const RECOVERY_PASSWORD_PATH = '/recoveryPass';\r\nexport const SET_NEW_PASSWORD_PATH = '/new-pass';\r\nexport const TEST_COMPONENT_PATH = '/testComponent';\r\n\r\n\r\nexport const Routes: React.FC<any> = () => {\r\n\r\n    return <>\r\n        <Switch>\r\n            <Route exact path={SIGN_IN_PATH} component={SignIn}/>\r\n            <Route path={REGISTRATION_PATH} component={RegistrationContainer}/>\r\n            <Route path={PROFILE_PATH} component={ProfileContainer}/>\r\n            <Route path={RECOVERY_PASSWORD_PATH} component={RecoveryPasswordContainer}/>\r\n            <Route path={SET_NEW_PASSWORD_PATH} component={SetNewPassword}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} component={PNF}/>\r\n            <Redirect from={'*'} to={PAGE_NOT_FOUND_PATH}/>\r\n        </Switch>\r\n\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    PAGE_NOT_FOUND_PATH,\r\n    PROFILE_PATH, RECOVERY_PASSWORD_PATH,\r\n    REGISTRATION_PATH, SET_NEW_PASSWORD_PATH,\r\n    SIGN_IN_PATH,\r\n    TEST_COMPONENT_PATH\r\n} from '../routes/Routes';\r\nimport style from './Header.module.css'\r\n\r\nexport type HeaderType = {}\r\n\r\nexport const Header = (props: HeaderType) => {\r\n\r\n    return <section className={style.header}>\r\n        <nav className={style.header_nav}>\r\n            <NavLink to={SIGN_IN_PATH} exact activeClassName={style.header_nav__link}>Sign In</NavLink>\r\n            <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>\r\n            <NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>\r\n            <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>\r\n            <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>\r\n            <NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>\r\n        </nav>\r\n    </section>\r\n}","export default __webpack_public_path__ + \"static/media/loader.37f92040.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/preloader/loader.svg\";\r\n\r\nconst style = {\r\n    width: '60px',\r\n    height:'60px',\r\n    display:'block',\r\n    margin: '0 auto'\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\" style={style}/>\r\n    )\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI} from '../m3-dal/authAPI';\r\nimport {profileActions, ProfileActionsType} from './profile-reducer';\r\nimport {authActions, authActionsType} from './auth-reducer';\r\n\r\n\r\nconst initialState = {\r\n    isInitializing: false,\r\n    initializeError: '',\r\n}\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case '/APP/SET-INITIALIZED':\r\n            return {...state, isInitializing: action.isInitializing}\r\n        case '/INITIALIZE/SET-ERROR':\r\n            return {...state, initializeError: action.initialiseError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const appActions = {\r\n    setInitializing: (isInitializing: boolean) => ({type: '/APP/SET-INITIALIZED', isInitializing} as const),\r\n    setInitializeError: (initialiseError: string) => ({type: '/INITIALIZE/SET-ERROR', initialiseError} as const),\r\n}\r\n// thunks\r\nexport const AuthMe = (): ThunkType => async (dispatch) => {\r\n        try {\r\n            let response = await authAPI.authMe()\r\n            dispatch(profileActions.setProfileAC(response))\r\n            dispatch(authActions.setIsAuthAC(true))\r\n        } catch (err) {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err + ' ... О-оу зовите бородатых сеньоров!!');\r\n            dispatch(appActions.setInitializeError(error))\r\n        }\r\n        dispatch(appActions.setInitializing(true))\r\n    }\r\n\r\n\r\n\r\n\r\nexport type AppInitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<AppActionsType>\r\nexport type AppActionsType = InferActionsTypes<typeof appActions>\r\n    | ProfileActionsType\r\n    | authActionsType\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/header/Header';\r\nimport {Routes} from './components/routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Preloader} from './common/Preloader/Preloader';\r\nimport {AppStateType} from '../m2-bll/store';\r\nimport {AppInitialStateType, AuthMe} from '../m2-bll/app-reducer';\r\n\r\nfunction App() {\r\n    const {isInitializing, initializeError} = useSelector<AppStateType, AppInitialStateType>(state => state.app)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(AuthMe())\r\n    }, [])\r\n\r\n    if (!isInitializing) return <Preloader/>\r\n    // if (initializeError) return <div> {initializeError} </div>\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {authReducer} from './auth-reducer';\r\n\r\n\r\n//actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n//thunk's type\r\nexport type BaseThunkType<A extends Action = Action, R = any> = ThunkAction<R, AppStateType, unknown, A>\r\n//state type\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst reducers = combineReducers({\r\n    // signIn: signInReducer,\r\n    // registration: registrationReducer,\r\n    auth:authReducer,\r\n    profile:profileReducer,\r\n    app: appReducer,\r\n    //newPassword: setNewPasswordReducer\r\n});\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './main/m2-bll/store';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n                <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}