{"version":3,"sources":["main/m1-ui/components/signIn/SingInForm.module.css","main/m1-ui/components/registration/Registration.module.css","main/m1-ui/components/notFound/pnf.module.css","main/m1-ui/common/myComponent/myBtn/MyBtn.module.css","main/m1-ui/common/myComponent/myInput/MyInput.module.css","main/m1-ui/common/myComponent/myInput/MyInputTest.module.css","main/m1-ui/common/myComponent/myBtnTest/MyBtnTest.module.css","main/m1-ui/components/setNewPassword/SetNewPassword.module.css","main/m1-ui/components/header/Header.module.css","main/m1-ui/components/profile/Profile.tsx","main/m1-ui/components/notFound/PNF.tsx","main/m1-ui/components/recoveryPassword/RecoveryPassword.tsx","main/m1-ui/components/setNewPassword/SetNewPassword.tsx","main/m1-ui/common/myComponent/myBtn/MyBtn.tsx","main/m1-ui/common/myComponent/myInput/MyInput.tsx","main/m3-dal/api.ts","main/m2-bll/signIn-reducer.ts","main/m1-ui/common/myComponent/myInput/MyInputTest.tsx","main/m1-ui/common/myComponent/myBtnTest/MyBtnTest.tsx","main/m1-ui/components/signIn/SignInForm.tsx","main/m1-ui/components/signIn/SingIn.tsx","main/m1-ui/components/TestComponent/MyComponent.tsx","main/m1-ui/assets/preloader/loader.svg","main/m1-ui/common/Preloader/Preloader.tsx","main/m1-ui/components/registration/Registration.tsx","main/m3-dal/authAPI.ts","main/m2-bll/registration-reducer.ts","main/m1-ui/components/registration/RegistrationContainer.tsx","main/m1-ui/components/routes/Routes.tsx","main/m1-ui/components/header/Header.tsx","main/m1-ui/App.tsx","reportWebVitals.ts","main/m2-bll/profile-reducer.ts","main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Profile","PNF","className","style","pnf","pnf_error","pnf_descr","RecoveryPassword","SetNewPassword","useDispatch","useState","oldPassword","setOldPassword","newPassword","setNewPassword","acceptedNewPassword","setAcceptedNewPassword","error","setError","axios","get","then","res","console","log","type","onChange","event","checkOldPassword","target","value","trim","checkNewPassword","checkAcceptedNewPassword","styles","onClick","MyBtn","props","redBtn","btn","disabled","name","MyInput","inputBase","red","onBlur","onKeyPress","placeholder","instance","create","baseURL","withCredentials","authAPI","data","post","initialState","isAuth","signInActions","SingInTC","dispatch","a","response","message","MyInputTest","disable","e","charCode","MyBtnTest","SignInForm","disableErrorField","hasPasswordFieldError","hasEmailFieldError","st","title","emailValue","formikEmailError","has_error","formikConfirmError","passValue","formikPassError","click","footer","to","REGISTRATION_PATH","activeClassName","header_nav__link","RECOVERY_PASSWORD_PATH","SignIn","useSelector","state","signIn","formik","useFormik","initialValues","email","password","rememberMe","confirm","validate","values","errors","test","length","onSubmit","formikHelpers","action","setFieldError","JSON","stringify","wrapper","handleSubmit","handleChange","TestComponent","alert","width","height","display","margin","Preloader","src","preloader","alt","Registration","repeatPass","loading","formSubmit","errorEmail","errorPassword","errorRepeatPass","disBtn","reg","reg_title","reg_form","reg_form__error","authApi","registerSuccess","RefFormik","registration","addedUser","catch","err","finally","SIGN_IN_PATH","PROFILE_PATH","PAGE_NOT_FOUND_PATH","SET_NEW_PASSWORD_PATH","TEST_COMPONENT_PATH","Routes","path","component","Header","header","header_nav","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f7a78c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SingInForm_wrapper__3zhj5\",\"click\":\"SingInForm_click__3WO8j\",\"has_error\":\"SingInForm_has_error__3eIZw\",\"title\":\"SingInForm_title__uV39D\",\"footer\":\"SingInForm_footer__2ARSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg\":\"Registration_reg__2MTkG\",\"reg_title\":\"Registration_reg_title__243Ch\",\"reg_form\":\"Registration_reg_form__3LWhs\",\"reg_form__error\":\"Registration_reg_form__error__1LPSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pnf\":\"pnf_pnf__2KgTX\",\"pnf_error\":\"pnf_pnf_error__28Eus\",\"pnf_descr\":\"pnf_pnf_descr__2rEup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__3_vFN\",\"redBtn\":\"MyBtn_redBtn__1XT6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__2TMXn\",\"red\":\"MyInput_red__1pG1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInputTest_inputBase__274cT\",\"red\":\"MyInputTest_red__33Qh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtnTest_btn__2P_lN\",\"redBtn\":\"MyBtnTest_redBtn__3cebc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SetNewPassword_error__3tktq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ih8R\",\"header_nav\":\"Header_header_nav__3OrmJ\",\"header_nav__link\":\"Header_header_nav__link__1ifim\"};","import React from 'react';\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    return <section>\r\n        Profile\r\n    </section>\r\n}","import React from 'react';\r\nimport style from './pnf.module.css'\r\n\r\n\r\n\r\nexport const PNF:React.FC = ()=> {\r\n\r\n    return <section className={style.pnf}>\r\n        <div className={style.pnf_error}> 404 </div>\r\n        <p className={style.pnf_descr}>Sorry, Page not Found...</p>\r\n    </section>\r\n}","import React from 'react';\r\n\r\nexport const RecoveryPassword: React.FC = () => {\r\n\r\n    return <section>\r\n        <h1>RecoveryPassword</h1>\r\n        <span>Forgot your password?</span>\r\n        <div>\r\n            <span>Enter your mail for </span>\r\n\r\n            <span>Enter your mail for </span>\r\n            <span>Enter your mail for </span>\r\n            BLA BLA\r\n            <input/>\r\n        </div>\r\n    </section>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './SetNewPassword.module.css'\r\nimport axios from 'axios'\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const SetNewPassword: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [acceptedNewPassword, setAcceptedNewPassword] = useState('')\r\n\r\n    const [error, setError] = useState(false)\r\n\r\n    const oldPasswordHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        console.log('oldPassword value: ', oldPassword)\r\n        const checkOldPassword = event.target.value.trim()\r\n        setOldPassword(checkOldPassword)\r\n    }\r\n\r\n    const newPasswordHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        console.log('newPassword value: ', newPassword)\r\n        const checkNewPassword = event.target.value.trim()\r\n        setNewPassword(checkNewPassword)\r\n    }\r\n\r\n    const acceptPasswordHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        console.log('acceptedNewPassword value: ', acceptedNewPassword)\r\n        const checkAcceptedNewPassword = event.target.value.trim()\r\n        setAcceptedNewPassword(checkAcceptedNewPassword)\r\n    }\r\n\r\n    const acceptNewPassword = () => {\r\n        if (newPassword !== acceptedNewPassword) {\r\n            setError(true)\r\n        } else{\r\n\r\n        }\r\n    }\r\n\r\n    axios.get('https://social-network.samuraijs.com/api/1.0/users')\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n\r\n\r\n    return <section>\r\n        <h1>Change your password</h1>\r\n        <div>\r\n            <span>Enter your old password:</span><br/>\r\n            <input type=\"text\" onChange={oldPasswordHandler}/>\r\n        </div>\r\n        <div>\r\n            <span>Enter your new password:</span><br/>\r\n            <input type=\"text\" onChange={newPasswordHandler}/>\r\n        </div>\r\n        <div>\r\n            <span>Repeat your new password:</span><br/>\r\n            <input type=\"text\" onChange={acceptPasswordHandler}/>\r\n        </div>\r\n        {\r\n            error && <div className={styles.error}>Your new password fields are different</div>\r\n        }\r\n        <div>\r\n            <button onClick={() => acceptNewPassword()}>Accept</button>\r\n        </div>\r\n    </section>\r\n}","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './MyInput.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value?: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: (e: React.FocusEvent<any>) => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onKeyPress={props.onKeyPress}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    //локально:\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    // gh-pages:\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfili(){\r\n        return instance.get<any>(`myURL`)\r\n\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    login(data:LoginParamsType){\r\n        return instance.post<ResponseType>('auth/login',data)}\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n\r\n}\r\nexport type ResponseType = {\r\n    _id:string\r\n    email:string\r\n    name:string\r\n    avatar?:string\r\n    publicCardPacksCount:number\r\n    created:Date\r\n    updated:Date\r\n    isAdmin:boolean\r\n    verified:boolean\r\n    rememberMe:boolean\r\n    error:string\r\n    token:string\r\n\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI, LoginParamsType} from '../m3-dal/api';\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n\r\n};\r\nexport const signInReducer = (state: initialStateType = initialState, action: SignInActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'singIn/SET-IS-AUTH':\r\n            // return {...state,\r\n            //     isAuth: action.isAuth,\r\n            //     errorP: action.errorP};\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//actions\r\nconst signInActions = {\r\n\r\n    setIsAuthAC: (isAuth: boolean) => ({type: 'singIn/SET-IS-AUTH', isAuth} as const),\r\n};\r\n\r\n//thunk's\r\nexport const SingInTC = (data: LoginParamsType): ThunkType => async (dispatch) => {\r\n    // dispatch(setAppStatusAC('loading'))\r\n\r\n    try {\r\n        const response = await authAPI.login(data);\r\n        dispatch(signInActions.setIsAuthAC(true));\r\n\r\n    } catch (e) {\r\n\r\n        const error = e.response ? e.response.data.error : (e.message + ',more details on the console');\r\n        dispatch(signInActions.setIsAuthAC(false));\r\n        console.log(error);\r\n        return error;\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\ntype initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<SignInActionsType>\r\ntype SignInActionsType = InferActionsTypes<typeof signInActions>\r\n\r\n","import React, {KeyboardEvent} from 'react';\r\nimport styles from './MyInputTest.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: () => void\r\n    name?: string\r\n    disable?: boolean\r\n}\r\n\r\nexport function MyInputTest(props: myInputType) {\r\n\r\n    const onPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (props.onKeyPress && e.charCode === 13) {\r\n            props.onKeyPress();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                disabled={props.disable}\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n                onKeyPress={onPressEnter}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyBtnTest.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtnTest(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport st from './SingInForm.module.css';\r\nimport {MyInputTest} from '../../common/myComponent/myInput/MyInputTest';\r\nimport {MyBtnTest} from '../../common/myComponent/myBtnTest/MyBtnTest';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RECOVERY_PASSWORD_PATH, REGISTRATION_PATH} from '../routes/Routes';\r\nimport style from '../header/Header.module.css';\r\n\r\ntype PropsType = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    emailValue: string\r\n    hasEmailFieldError: boolean\r\n    formikEmailError: string | undefined\r\n    passValue: string\r\n    hasPasswordFieldError: boolean\r\n    formikPassError: string | undefined\r\n    onClick: () => void\r\n    formikConfirmError: string | undefined\r\n\r\n}\r\n\r\n\r\nexport const SignInForm: React.FC<PropsType> = (props) => {\r\n    const disableErrorField = props.hasPasswordFieldError || props.hasEmailFieldError;\r\n    return <div>\r\n        <div className={st.title}>{props.title}</div>\r\n        <MyInputTest type='email'\r\n                     onChange={props.onChange}\r\n                     value={props.emailValue}\r\n                     placeholder={'email'}\r\n                     name={'email'}\r\n                     error={props.hasEmailFieldError}\r\n        /> {props.formikEmailError ?\r\n        <div className={st.has_error}>{props.formikEmailError}</div> : null}\r\n        {props.formikConfirmError ? <div className={st.has_error}>{props.formikConfirmError}</div> : null}\r\n        <MyInputTest type='password'\r\n                     onChange={props.onChange}\r\n                     value={props.passValue}\r\n                     placeholder={'password'}\r\n                     error={props.hasPasswordFieldError} name={'password'}\r\n        />\r\n        {props.formikPassError ?\r\n            <div className={st.has_error}>{props.formikPassError}</div> : null}\r\n\r\n        <div className={st.click}>\r\n            <div>\r\n                <input type='checkbox' onChange={props.onChange}/>RememberMe\r\n            </div>\r\n            {!disableErrorField ? <MyBtnTest name='Login'\r\n                                             type=\"submit\"\r\n                                             onClick={props.onClick}\r\n                                             disabled={disableErrorField}\r\n                                             error={disableErrorField}\r\n            /> : null}\r\n            {/*<MyBtnTest name='Login'*/}\r\n            {/*           type=\"submit\"*/}\r\n            {/*           onClick={props.onClick}*/}\r\n            {/*           disabled={disableErrorField}*/}\r\n            {/*           error={disableErrorField}*/}\r\n            {/*/>*/}\r\n        </div>\r\n        <div className={st.footer}>\r\n            <nav>\r\n                SingUp\r\n                <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>SingUp</NavLink>\r\n            </nav>\r\n            <nav>\r\n                Forgot?\r\n                <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Forgot?</NavLink>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n    </div>;\r\n};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport st from './SingInForm.module.css';\r\nimport {SingInTC} from '../../../m2-bll/signIn-reducer';\r\nimport {SignInForm} from './SignInForm';\r\n\r\n\r\nexport const SignIn: React.FC<any> = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            confirm: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 8 characters';\r\n            }\r\n            if (values.confirm) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values, formikHelpers) => {\r\n            const action = await dispatch(SingInTC(values));\r\n            formikHelpers.setFieldError('confirm', 'Incorrect email or password');\r\n            console.log(JSON.stringify(action) + 'novoe');\r\n\r\n\r\n        },\r\n    });\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n    const hasEmailFieldError = !!formik.errors.email;\r\n    const hasPasswordFieldError = !!formik.errors.password;\r\n\r\n\r\n    return <div className={st.wrapper}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <SignInForm\r\n                title={'LOGIN FORM'}\r\n                onChange={formik.handleChange}\r\n                onClick={formik.handleSubmit}\r\n                emailValue={formik.values.email}\r\n                formikConfirmError={formik.errors.confirm}\r\n                formikEmailError={formik.errors.email}\r\n                formikPassError={formik.errors.password}\r\n                passValue={formik.values.password}\r\n                hasEmailFieldError={hasEmailFieldError}\r\n                hasPasswordFieldError={hasPasswordFieldError}\r\n\r\n\r\n            />\r\n        </form>\r\n\r\n    </div>;\r\n};\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n    confirm?: string\r\n}\r\n","import React from 'react';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {SignIn} from '../signIn/SingIn';\r\n\r\nexport const TestComponent = () => {\r\n\r\n    return (\r\n        <section>\r\n            <MyBtn name={'test'}\r\n                   onClick={() => alert('hello')}/>\r\n            <MyInput type={'input'} value={''}\r\n                     onChange={() => console.log('hello')}/>\r\n            <hr/>\r\n            <SignIn/>\r\n        </section>\r\n    );\r\n};","export default __webpack_public_path__ + \"static/media/loader.37f92040.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/preloader/loader.svg\";\r\n\r\nconst style = {\r\n    width: '60px',\r\n    height:'60px',\r\n    display:'block',\r\n    margin: '0 auto'\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\" style={style}/>\r\n    )\r\n}","import React from 'react';\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport style from './Registration.module.css';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {FormikErrorType} from './RegistrationContainer';\r\n\r\ntype RegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n    errors: FormikErrorType\r\n    loading: boolean\r\n    formSubmit: () => void\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationType> = (props) => {\r\n\r\n    const {email, password, repeatPass, error, errors, loading, onChange, formSubmit} = props;\r\n    const {email: errorEmail, password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = errorEmail || errorPassword || errorRepeatPass;\r\n\r\n    if (loading) return <Preloader/>\r\n\r\n    return <section>\r\n        <main className={style.reg}>\r\n            <div className={style.reg_title}> Registration form</div>\r\n            <form className={style.reg_form}>\r\n                <div>\r\n                    <span>Enter your email:</span>\r\n                    <MyInput error={!!errorEmail} type='email'\r\n                             value={email} onChange={onChange}\r\n                             placeholder='email...' name='email'/>\r\n                    {errorEmail ?\r\n                        <div className={style.reg_form__error}>{errorEmail}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Enter your password:</span>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword ?\r\n                        <div className={style.reg_form__error}>{errors.password}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Repeat your password:</span>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass ?\r\n                        <div className={style.reg_form__error}>{errors.repeatPass}</div> : null}\r\n                </div>\r\n                {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n                <div>\r\n                    <MyBtn error={!!disBtn} disabled={!!disBtn} name={'Login'} onClick={formSubmit}/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </section>\r\n}\r\n\r\n\r\n// type RegistrationType = {\r\n//     email: string\r\n//     password: string\r\n//     repeatPass: string\r\n//     error: string\r\n//     errors: FormikErrorType\r\n//     loading: boolean\r\n//     formSubmit: () => void\r\n//     onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n//     // errorEmail: boolean | string | undefined\r\n//     // errorPassword: boolean | string | undefined\r\n//     // errorRepeatPass: boolean | string | undefined\r\n//     // setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setRepeatPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n// }\r\n\r\n\r\n//old method\r\n// export const Registration: React.FC<RegistrationType> = (props) => {\r\n//     const {email, password, repeatPass, error,errors, loading,onChange, /*setEmail, setPassword, setRepeatPassword,*/ formSubmit} = props;\r\n//\r\n//     if (loading) return <Preloader/>\r\n//\r\n//     return <section>\r\n//         <main className={style.reg}>\r\n//             <div className={style.reg_title}> Registration form</div>\r\n//             <form className={style.reg_form}>\r\n//                 <div>\r\n//                     <span>Enter your email:</span>\r\n//                     <MyInput error={!!error} type='email'\r\n//                              value={email} onChange={onChange}\r\n//                              placeholder='email...' name='email'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Enter your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={password} onChange={onChange}\r\n//                              placeholder='min 8 symbols..' name='password'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Repeat your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={repeatPass} onChange={onChange}\r\n//                              placeholder='min 8 symbols...' name='repeatPassword'/>\r\n//                 </div>\r\n//                 {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n//                 <div>\r\n//                     <MyBtn disabled={loading} name={'Login'} onClick={formSubmit}/>\r\n//                 </div>\r\n//             </form>\r\n//         </main>\r\n//     </section>\r\n// }","import {instance} from './api';\r\n\r\n\r\nexport const authApi = {\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseReg>('auth/register', {email, password})\r\n            .then(res => res.data)\r\n    },\r\n\r\n}\r\n\r\ntype newUserType = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\ntype ResponseReg = {\r\n    addedUser: newUserType\r\n    error: string\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authApi} from '../m3-dal/authAPI';\r\n\r\n//actions\r\nexport const signInActions = {\r\n    setRegisterSuccess: () => ({type: '/REG/SET-REGISTER-SUCCESS'} as const),\r\n    setLoading: (loading: boolean) => ({type: '/REG/SET-LOADING', loading} as const),\r\n    setError: (error: string) => ({type: '/REG/SET-ERROR', error} as const),\r\n}\r\n\r\n//thunk's\r\nexport const registerTC = (email: string, password: string): ThunkType => (dispatch) => {\r\n    dispatch(signInActions.setLoading(true))\r\n    authApi.register(email, password)\r\n        .then(response => {\r\n            if (response.addedUser) dispatch(signInActions.setRegisterSuccess())\r\n        })\r\n        .catch(err => {\r\n            dispatch(signInActions.setError(JSON.stringify(err.response.data.error)))\r\n        })\r\n        .finally(() => dispatch(signInActions.setLoading(false)))\r\n}\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    registerSuccess: false\r\n}\r\nexport const registrationReducer = (state: initialStateType = initialState, action: RegistrationActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case '/REG/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case '/REG/SET-REGISTER-SUCCESS':\r\n            return {...state, registerSuccess: true}\r\n        case '/REG/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<RegistrationActionsType>\r\ntype RegistrationActionsType = InferActionsTypes<typeof signInActions>\r\n\r\n","import React from 'react';\r\nimport {Registration} from './Registration';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {initialStateType, registerTC} from '../../../m2-bll/registration-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../routes/Routes';\r\nimport {useFormik} from 'formik';\r\n\r\nexport const RefFormik = () => {\r\n    const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(registerTC(values.email, values.password))\r\n        },\r\n    })\r\n\r\n    if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n    return (\r\n        <Registration\r\n            email={formik.values.email}\r\n            password={formik.values.password}\r\n            repeatPass={formik.values.repeatPass}\r\n            error={error}\r\n            errors={formik.errors}\r\n            loading={loading}\r\n            onChange={formik.handleChange}\r\n            formSubmit={formik.handleSubmit}\r\n        />\r\n    )\r\n}\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPass?: string\r\n}\r\n\r\n//old method\r\n\r\n// export type eInput = React.ChangeEvent<HTMLInputElement>\r\n//\r\n// export const RegistrationContainer: React.FC = () => {\r\n//\r\n//     const [email, setEmailVal] = useState<string>('')\r\n//     const [password, setPasswordVal] = useState('')\r\n//     const [repeatPass, setRepeatPassVal] = useState('')\r\n//\r\n//      const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n//     const dispatch = useDispatch()\r\n//\r\n//     const setEmail = useCallback((e: eInput) => {\r\n//         setEmailVal(e.currentTarget.value)\r\n//     }, [setEmailVal])\r\n//     const setPassword = useCallback((e: eInput) => {\r\n//         setPasswordVal(e.currentTarget.value)\r\n//     }, [setPasswordVal])\r\n//     const setRepeatPassword = useCallback((e: eInput) => {\r\n//         setRepeatPassVal(e.currentTarget.value)\r\n//     }, [setRepeatPassVal])\r\n//\r\n//     const formSubmit = useCallback(() => {\r\n//         if (!email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)) {\r\n//             dispatch(signInActions.setError('Uncorrected email'))\r\n//         } else if (password.length < 8) {\r\n//             dispatch(signInActions.setError('Password must be more than 8 characters...'))\r\n//         } else if (password !== repeatPass) {\r\n//             dispatch(signInActions.setError('Invalid second password'))\r\n//         } else if (email && password && repeatPass) {\r\n//             dispatch(registerTC(email, password))\r\n//         }\r\n//     }, [password, repeatPass, email, dispatch])\r\n//\r\n//     if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n//     return <section>\r\n//         <Registration\r\n//             email={email}\r\n//             password={password}\r\n//             repeatPass={repeatPass}\r\n//             error={error}\r\n//             loading={loading}\r\n//             setEmail={setEmail}\r\n//             setPassword={setPassword}\r\n//             setRepeatPassword={setRepeatPassword}\r\n//             formSubmit={formSubmit}\r\n//         />\r\n//     </section>\r\n// }","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {Profile} from '../profile/Profile';\r\nimport {PNF} from '../notFound/PNF';\r\nimport {RecoveryPassword} from '../recoveryPassword/RecoveryPassword';\r\nimport {SetNewPassword} from '../setNewPassword/SetNewPassword';\r\nimport {TestComponent} from '../TestComponent/MyComponent';\r\nimport {RefFormik} from '../registration/RegistrationContainer';\r\nimport {SignIn} from '../signIn/SingIn';\r\n\r\nexport const SIGN_IN_PATH = '/signIn';\r\nexport const REGISTRATION_PATH = '/registration';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\nexport const RECOVERY_PASSWORD_PATH = '/recovery-pass';\r\nexport const SET_NEW_PASSWORD_PATH = '/new-pass';\r\nexport const TEST_COMPONENT_PATH = '/test-component';\r\n\r\n\r\nexport const Routes: React.FC = () => {\r\n\r\n    return <>\r\n            <Route path={SIGN_IN_PATH} component={SignIn}/>\r\n            <Route path={REGISTRATION_PATH} component={RefFormik}/>\r\n            <Route path={PROFILE_PATH} component={Profile}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} component={PNF}/>\r\n            <Route path={RECOVERY_PASSWORD_PATH} component={RecoveryPassword}/>\r\n            <Route path={SET_NEW_PASSWORD_PATH} component={SetNewPassword}/>\r\n            <Route path={TEST_COMPONENT_PATH} component={TestComponent}/>\r\n    </>\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    PAGE_NOT_FOUND_PATH,\r\n    PROFILE_PATH, RECOVERY_PASSWORD_PATH,\r\n    REGISTRATION_PATH, SET_NEW_PASSWORD_PATH,\r\n    SIGN_IN_PATH,\r\n    TEST_COMPONENT_PATH\r\n} from '../routes/Routes';\r\nimport style from './Header.module.css'\r\nexport type HeaderType = {}\r\n\r\nexport const Header = (props: HeaderType) => {\r\n\r\n    return <section className={ style.header}>\r\n        <nav className={style.header_nav}>\r\n            <NavLink to={SIGN_IN_PATH} activeClassName={style.header_nav__link}>Sign In</NavLink>\r\n            <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>\r\n            <NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>\r\n            <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>\r\n            <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>\r\n            <NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>\r\n            <NavLink to={TEST_COMPONENT_PATH} activeClassName={style.header_nav__link}>Test Components</NavLink>\r\n        </nav>\r\n    </section>\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './components/header/Header';\nimport {Routes} from './components/routes/Routes';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {BaseThunkType, InferActionsTypes} from './store';\r\n\r\n//actions\r\nconst signInActions = {\r\n    testAC: (test1:any) => ({type: 'TEST',test1} as const),\r\n}\r\n\r\n//thunk's\r\nexport const testThunk = (test1:any):ThunkType => (dispatch) => {\r\n    dispatch(signInActions.testAC(test1))\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n    test: 'test123'\r\n}\r\nexport const profileReducer = (state: initialStateType = initialState, action: ProfileActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'TEST':\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<ProfileActionsType>\r\ntype ProfileActionsType = InferActionsTypes<typeof signInActions>\r\n\r\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {signInReducer} from './signIn-reducer';\r\nimport {registrationReducer} from './registration-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {setNewPasswordReducer} from \"./setNewPassword-reducer\";\r\n\r\n\r\n//actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n//thunk's type\r\nexport type BaseThunkType<A extends Action = Action, R = any> = ThunkAction<R, AppStateType, unknown, A>\r\n//state type\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    registration: registrationReducer,\r\n    profile:profileReducer,\r\n    //newPassword: setNewPasswordReducer\r\n});\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './main/m2-bll/store';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n      <HashRouter>\n          <App/>\n      </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}