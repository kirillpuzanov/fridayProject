{"version":3,"sources":["main/m1-ui/components/header/Header.module.css","main/m1-ui/components/signIn/SingInForm.module.css","main/m1-ui/components/registration/Registration.module.css","main/m1-ui/components/setNewPassword/SetNewPassword.module.css","main/m1-ui/components/notFound/pnf.module.css","main/m1-ui/common/myComponent/myInput/MyInput.module.css","main/m1-ui/common/myComponent/myBtn/MyBtn.module.css","main/m1-ui/common/myComponent/myInput/MyInputTest.module.css","main/m1-ui/common/myComponent/myBtnTest/MyBtnTest.module.css","main/m1-ui/components/notFound/PNF.tsx","main/m1-ui/common/myComponent/myInput/MyInput.tsx","main/m1-ui/common/myComponent/myBtn/MyBtn.tsx","main/m1-ui/components/registration/Registration.tsx","main/m3-dal/api.ts","main/m3-dal/authAPI.ts","main/m2-bll/profile-reducer.ts","main/m2-bll/auth-reducer.ts","main/m1-ui/components/registration/RegistrationContainer.tsx","main/m1-ui/common/myComponent/myInput/MyInputTest.tsx","main/m1-ui/common/myComponent/myBtnTest/MyBtnTest.tsx","main/m1-ui/components/signIn/SignInForm.tsx","main/m1-ui/components/signIn/SingIn.tsx","main/m1-ui/assets/img/ava_default.jpg","main/m1-ui/components/profile/ProfileInfo.tsx","main/m1-ui/components/profile/Profile.tsx","main/m1-ui/components/profile/ProfileContainer.tsx","main/m1-ui/components/recoveryPassword/RecoveryPassword.tsx","main/m1-ui/components/recoveryPassword/RecoveryPasswordContainer.tsx","main/m1-ui/components/setNewPassword/SetNewPassword.tsx","main/m1-ui/components/setNewPassword/SetNewPasswordContainer.tsx","main/m1-ui/components/routes/Routes.tsx","main/m1-ui/components/header/Header.tsx","main/m1-ui/assets/preloader/loader.svg","main/m1-ui/common/Preloader/Preloader.tsx","main/m2-bll/app-reducer.ts","main/m1-ui/App.tsx","reportWebVitals.ts","main/m2-bll/store.ts","index.tsx"],"names":["module","exports","PNF","className","style","pnf","pnf_error","pnf_descr","MyInput","props","error","styles","inputBase","red","onBlur","type","value","onChange","onKeyPress","placeholder","name","MyBtn","redBtn","btn","onClick","disabled","Registration","email","password","repeatPass","errorServer","errors","formSubmit","errorEmail","errorPassword","errorRepeatPass","disBtn","reg","reg_title","reg_form","reg_form__error","instance","axios","create","baseURL","withCredentials","authAPI","post","then","res","data","r","delete","recoveryPassObj","setNewPassData","initialState","profile","profileActions","AuthInitialState","isAuth","loading","registerSuccess","recoveryPassSuccess","newPassSuccess","authActions","SingInTC","dispatch","a","response","message","console","log","RegistrationContainer","useSelector","state","auth","useDispatch","formik","useFormik","initialValues","validate","values","test","length","onSubmit","addedUser","to","SIGN_IN_PATH","PROFILE_PATH","handleChange","handleSubmit","MyInputTest","disable","e","charCode","MyBtnTest","SignInForm","title","errorConfirm","confirm","disableErrorField","st","has_error","click","footer","REGISTRATION_PATH","activeClassName","header_nav__link","RECOVERY_PASSWORD_PATH","SignIn","rememberMe","formikHelpers","action","setFieldError","JSON","stringify","wrapper","ProfileInfo","src","avatar","ava_default","alt","publicCardPacksCount","Profile","onLogOut","ProfileContainer","RecoveryPassword","recPass","recPass_title","recPass_description","recPass_form","RecoveryPasswordContainer","RecoveryPassObj","from","recoveryPassTC","SetNewPassword","newPass","newPass_title","newPass_descr","SetNewPasswordContainer","token","useParams","resetPasswordToken","setNewPassTC","PAGE_NOT_FOUND_PATH","SET_NEW_PASSWORD_PATH","Routes","exact","path","component","Header","header","header_nav","width","height","display","margin","Preloader","preloader","isInitializing","initializeError","appActions","initialiseError","App","app","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c3af87d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ih8R\",\"header_nav\":\"Header_header_nav__3OrmJ\",\"header_nav__link\":\"Header_header_nav__link__1ifim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SingInForm_wrapper__3zhj5\",\"click\":\"SingInForm_click__3WO8j\",\"has_error\":\"SingInForm_has_error__3eIZw\",\"title\":\"SingInForm_title__uV39D\",\"footer\":\"SingInForm_footer__2ARSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg\":\"Registration_reg__2MTkG\",\"reg_title\":\"Registration_reg_title__243Ch\",\"reg_form\":\"Registration_reg_form__3LWhs\",\"reg_form__error\":\"Registration_reg_form__error__1LPSu\",\"mdc-snackbar\":\"Registration_mdc-snackbar__2OJ2U\",\"mdc-snackbar__dismiss\":\"Registration_mdc-snackbar__dismiss__1jfGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SetNewPassword_error__3tktq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pnf\":\"pnf_pnf__2KgTX\",\"pnf_error\":\"pnf_pnf_error__28Eus\",\"pnf_descr\":\"pnf_pnf_descr__2rEup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__2TMXn\",\"red\":\"MyInput_red__1pG1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__3_vFN\",\"redBtn\":\"MyBtn_redBtn__1XT6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInputTest_inputBase__274cT\",\"red\":\"MyInputTest_red__33Qh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtnTest_btn__2P_lN\",\"redBtn\":\"MyBtnTest_redBtn__3cebc\"};","import React from 'react';\r\nimport style from './pnf.module.css'\r\n\r\n\r\n\r\nexport const PNF:React.FC = ()=> {\r\n\r\n    return <section className={style.pnf}>\r\n        <div className={style.pnf_error}> 404 </div>\r\n        <p className={style.pnf_descr}>Sorry, Page not Found...</p>\r\n    </section>\r\n}","import React from 'react';\r\nimport styles from './MyInput.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value?: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: (e: React.FocusEvent<any>) => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onKeyPress={props.onKeyPress}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport style from './Registration.module.css';\r\nimport {FormikErrorType} from './RegistrationContainer';\r\nimport {Snackbar} from '@material/react-snackbar';\r\nimport  '@material/react-snackbar/dist/snackbar.css';\r\n\r\ntype RegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n    errors: FormikErrorType\r\n    formSubmit: () => void\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationType> = (props) => {\r\n\r\n    const {email, password, repeatPass, error:errorServer, errors, onChange, formSubmit} = props;\r\n    const {email: errorEmail, password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = errorEmail || errorPassword || errorRepeatPass;\r\n\r\n\r\n    return <section>\r\n        <main className={style.reg}>\r\n            <div className={style.reg_title}> Registration form</div>\r\n            <form className={style.reg_form}>\r\n                <div>\r\n                    <span>Enter your email:</span>\r\n                    <MyInput error={!!errorEmail} type='email'\r\n                             value={email} onChange={onChange}\r\n                             placeholder='email...' name='email'/>\r\n                    {errorEmail ?\r\n                        <div className={style.reg_form__error}>{errorEmail}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Enter your password:</span>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword ?\r\n                        <div className={style.reg_form__error}>{errors.password}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Repeat your password:</span>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass ?\r\n                        <div className={style.reg_form__error}>{errors.repeatPass}</div> : null}\r\n                </div>\r\n                {errorServer ? <p className={style.reg_form__error}> {errorServer} </p> : ''}\r\n                <div>\r\n                    <MyBtn error={!!disBtn} disabled={!!disBtn} name={'Register'} onClick={formSubmit}/>\r\n                </div>\r\n                {/*{error && <Snackbar message={error} timeoutMs={4000}/>}*/}\r\n            </form>\r\n        </main>\r\n    </section>\r\n}\r\n\r\n\r\n// type RegistrationType = {\r\n//     email: string\r\n//     password: string\r\n//     repeatPass: string\r\n//     error: string\r\n//     errors: FormikErrorType\r\n//     loading: boolean\r\n//     formSubmit: () => void\r\n//     onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n//     // errorEmail: boolean | string | undefined\r\n//     // errorPassword: boolean | string | undefined\r\n//     // errorRepeatPass: boolean | string | undefined\r\n//     // setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setRepeatPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n// }\r\n\r\n\r\n//old method\r\n// export const Registration: React.FC<RegistrationType> = (props) => {\r\n//     const {email, password, repeatPass, error,errors, loading,onChange, /*setEmail, setPassword, setRepeatPassword,*/ formSubmit} = props;\r\n//\r\n//     if (loading) return <Preloader/>\r\n//\r\n//     return <section>\r\n//         <main className={style.reg}>\r\n//             <div className={style.reg_title}> Registration form</div>\r\n//             <form className={style.reg_form}>\r\n//                 <div>\r\n//                     <span>Enter your email:</span>\r\n//                     <MyInput error={!!error} type='email'\r\n//                              value={email} onChange={onChange}\r\n//                              placeholder='email...' name='email'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Enter your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={password} onChange={onChange}\r\n//                              placeholder='min 8 symbols..' name='password'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Repeat your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={repeatPass} onChange={onChange}\r\n//                              placeholder='min 8 symbols...' name='repeatPassword'/>\r\n//                 </div>\r\n//                 {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n//                 <div>\r\n//                     <MyBtn disabled={loading} name={'Login'} onClick={formSubmit}/>\r\n//                 </div>\r\n//             </form>\r\n//         </main>\r\n//     </section>\r\n// }","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    //локально:\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    // gh-pages:\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n","import {instance} from './api';\r\nimport {RecoveryPassObjType} from '../m1-ui/components/recoveryPassword/RecoveryPasswordContainer';\r\nimport {setNewPassDatatype} from '../m1-ui/components/setNewPassword/SetNewPasswordContainer';\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseReg>('auth/register', {email, password})\r\n            .then(res => res.data)\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ProfileType>('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return instance.post<ProfileType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    recoveryPass(recoveryPassObj:RecoveryPassObjType ){\r\n        return instance.post<LogoutResType>('auth/forgot', {...recoveryPassObj})\r\n    },\r\n    newPass(setNewPassData: setNewPassDatatype){\r\n        return instance.post('auth/set-new-password', {...setNewPassData})\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype ResponseReg = {\r\n    addedUser: ProfileType\r\n    error: string\r\n}\r\ntype LogoutResType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    token: string\r\n}\r\n","import {ProfileType} from '../m3-dal/authAPI';\r\nimport {InferActionsTypes} from './store';\r\n\r\n\r\nconst initialState = {\r\n    profile: {} as ProfileType,\r\n}\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ProfileActionsType):ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case '/PROFILE/SET-PROFILE': return { ...state, profile: {...action.profile}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//actions\r\nexport const profileActions = {\r\n  setProfileAC: (profile: ProfileType) => ({type: '/PROFILE/SET-PROFILE', profile} as const),\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState;\r\nexport type ProfileActionsType = InferActionsTypes<typeof profileActions>\r\n\r\n","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI, LoginParamsType} from '../m3-dal/authAPI';\r\nimport {profileActions, ProfileActionsType} from './profile-reducer';\r\nimport {RecoveryPassObjType} from '../m1-ui/components/recoveryPassword/RecoveryPasswordContainer';\r\nimport {setNewPassDatatype} from '../m1-ui/components/setNewPassword/SetNewPasswordContainer';\r\n\r\n\r\nexport const AuthInitialState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    error: '',\r\n    registerSuccess: false,\r\n    recoveryPassSuccess: false,\r\n    newPassSuccess: false,\r\n};\r\nexport const authReducer = (state: AuthInitialStateType = AuthInitialState, action: authActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case 'singIn/SET-IS-AUTH':\r\n            return {...state, isAuth: action.isAuth}\r\n        case '/SERVER-ERROR/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case '/REG/SET-REGISTER-SUCCESS':\r\n            return {...state, registerSuccess: true}\r\n        case '/REG/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n        case '/REC/SET-RECOVERY-PASS-SUCCESS':\r\n            return {...state, recoveryPassSuccess: true}\r\n        case '/NEW-PASS/SET-NEW-PASS-SUCCESS':\r\n            return {...state, newPassSuccess: true}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action's\r\nexport const authActions = {\r\n    setIsAuthAC: (isAuth: boolean) => ({type: 'singIn/SET-IS-AUTH', isAuth} as const),\r\n    setRegisterSuccess: () => ({type: '/REG/SET-REGISTER-SUCCESS'} as const),\r\n    setRecoveryPassSuccess: () => ({type: '/REC/SET-RECOVERY-PASS-SUCCESS'} as const),\r\n    setNewPassSuccess: () => ({type: '/NEW-PASS/SET-NEW-PASS-SUCCESS'} as const),\r\n    setLoading: (loading: boolean) => ({type: '/REG/SET-LOADING', loading} as const),\r\n    setError: (error: string) => ({type: '/SERVER-ERROR/SET-ERROR', error} as const),\r\n};\r\n\r\n//thunk's\r\nexport const SingInTC = (data: LoginParamsType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.login(data);\r\n            dispatch(authActions.setIsAuthAC(true));\r\n            dispatch(profileActions.setProfileAC(response.data))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ',more details on the console');\r\n            dispatch(authActions.setIsAuthAC(false));\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    };\r\nexport const registerTC = (email: string, password: string): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(authActions.setLoading(true))\r\n        try {\r\n            let response = await authAPI.register(email, password)\r\n            if (response.addedUser) dispatch(authActions.setRegisterSuccess())\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n        dispatch(authActions.setLoading(false))\r\n    };\r\n\r\nexport const logoutTC = (): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.logout()\r\n            dispatch(authActions.setIsAuthAC(false))\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n    };\r\nexport const recoveryPassTC = (RecoveryPassObj: RecoveryPassObjType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.recoveryPass(RecoveryPassObj)\r\n            dispatch(authActions.setRecoveryPassSuccess())\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n    };\r\nexport const setNewPassTC = (setNewPassData: setNewPassDatatype): ThunkType => async (dispatch) => {\r\n    try {\r\n        await authAPI.newPass(setNewPassData)\r\n        dispatch(authActions.setNewPassSuccess())\r\n    } catch (err) {\r\n        dispatch(authActions.setError(err.response.data.error))\r\n    }\r\n}\r\n\r\n//type's\r\nexport type AuthInitialStateType = typeof AuthInitialState;\r\ntype ThunkType = BaseThunkType<authActionsType>;\r\nexport type authActionsType = InferActionsTypes<typeof authActions>\r\n    | ProfileActionsType;\r\n\r\n","import React from 'react';\r\nimport {Registration} from './Registration';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../routes/Routes';\r\nimport {useFormik} from 'formik';\r\nimport {AuthInitialStateType, registerTC} from '../../../m2-bll/auth-reducer';\r\n\r\nexport const RegistrationContainer = () => {\r\n    const {error, registerSuccess} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(registerTC(values.email, values.password));\r\n        },\r\n    });\r\n\r\n    if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>;\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return (\r\n        <Registration\r\n            email={formik.values.email}\r\n            password={formik.values.password}\r\n            repeatPass={formik.values.repeatPass}\r\n            error={error}\r\n            errors={formik.errors}\r\n            onChange={formik.handleChange}\r\n            formSubmit={formik.handleSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPass?: string\r\n    confirm?: string\r\n\r\n\r\n}\r\n\r\n//old method\r\n\r\n// export type eInput = React.ChangeEvent<HTMLInputElement>\r\n//\r\n// export const RegistrationContainer: React.FC = () => {\r\n//\r\n//     const [email, setEmailVal] = useState<string>('')\r\n//     const [password, setPasswordVal] = useState('')\r\n//     const [repeatPass, setRepeatPassVal] = useState('')\r\n//\r\n//      const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n//     const dispatch = useDispatch()\r\n//\r\n//     const setEmail = useCallback((e: eInput) => {\r\n//         setEmailVal(e.currentTarget.value)\r\n//     }, [setEmailVal])\r\n//     const setPassword = useCallback((e: eInput) => {\r\n//         setPasswordVal(e.currentTarget.value)\r\n//     }, [setPasswordVal])\r\n//     const setRepeatPassword = useCallback((e: eInput) => {\r\n//         setRepeatPassVal(e.currentTarget.value)\r\n//     }, [setRepeatPassVal])\r\n//\r\n//     const formSubmit = useCallback(() => {\r\n//         if (!email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)) {\r\n//             dispatch(signInActions.setError('Uncorrected email'))\r\n//         } else if (password.length < 8) {\r\n//             dispatch(signInActions.setError('Password must be more than 8 characters...'))\r\n//         } else if (password !== repeatPass) {\r\n//             dispatch(signInActions.setError('Invalid second password'))\r\n//         } else if (email && password && repeatPass) {\r\n//             dispatch(registerTC(email, password))\r\n//         }\r\n//     }, [password, repeatPass, email, dispatch])\r\n//\r\n//     if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n//     return <section>\r\n//         <Registration\r\n//             email={email}\r\n//             password={password}\r\n//             repeatPass={repeatPass}\r\n//             error={error}\r\n//             loading={loading}\r\n//             setEmail={setEmail}\r\n//             setPassword={setPassword}\r\n//             setRepeatPassword={setRepeatPassword}\r\n//             formSubmit={formSubmit}\r\n//         />\r\n//     </section>\r\n// }","import React, {KeyboardEvent} from 'react';\r\nimport styles from './MyInputTest.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: () => void\r\n    name?: string\r\n    disable?: boolean\r\n}\r\n\r\nexport function MyInputTest(props: myInputType) {\r\n\r\n    const onPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (props.onKeyPress && e.charCode === 13) {\r\n            props.onKeyPress();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                disabled={props.disable}\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n                onKeyPress={onPressEnter}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyBtnTest.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtnTest(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport st from './SingInForm.module.css';\r\nimport {MyInputTest} from '../../common/myComponent/myInput/MyInputTest';\r\nimport {MyBtnTest} from '../../common/myComponent/myBtnTest/MyBtnTest';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RECOVERY_PASSWORD_PATH, REGISTRATION_PATH} from '../routes/Routes';\r\nimport style from '../header/Header.module.css';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\n\r\ntype PropsType = {\r\n    email: string\r\n    password: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n}\r\n\r\n\r\nexport const SignInForm: React.FC<PropsType> = (props) => {\r\n\r\n    const {email, password, errors, onChange, formSubmit, title} = props;\r\n    const {email: errorEmail, password: errorPassword, confirm: errorConfirm} = errors;\r\n    const disableErrorField = errorEmail || errorPassword;\r\n\r\n    return <div>\r\n        <div className={st.title}>{title}</div>\r\n        <MyInputTest type='email'\r\n                     onChange={onChange}\r\n                     value={email}\r\n                     placeholder={'email'}\r\n                     name={'email'}\r\n                     error={!!errorEmail}\r\n        /> {errorEmail ?\r\n        <div className={st.has_error}>{errorEmail}</div> : null}\r\n\r\n        {errorConfirm ? <div className={st.has_error}>{errorConfirm}</div> : null}\r\n\r\n        <MyInputTest type='password'\r\n                     onChange={onChange}\r\n                     value={password}\r\n                     placeholder={'password'}\r\n                     error={!!errorPassword} name={'password'}\r\n        />\r\n        {errorPassword ?\r\n            <div className={st.has_error}>{errorPassword}</div> : null}\r\n\r\n        <div className={st.click}>\r\n            <div>\r\n                <input type='checkbox' onChange={onChange}/>RememberMe\r\n            </div>\r\n            {!disableErrorField ? <MyBtnTest name='Login'\r\n                                             type=\"submit\"\r\n                                             onClick={formSubmit}\r\n                                             disabled={!!disableErrorField}\r\n                                             error={!!disableErrorField}\r\n            /> : null}\r\n\r\n        </div>\r\n        <div className={st.footer}>\r\n            <nav>\r\n                <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>SingUp</NavLink>\r\n            </nav>\r\n            <nav>\r\n                <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Forgot?</NavLink>\r\n            </nav>\r\n        </div>\r\n\r\n\r\n    </div>;\r\n};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport st from './SingInForm.module.css';\r\nimport {SignInForm} from './SignInForm';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../routes/Routes';\r\nimport {SingInTC} from '../../../m2-bll/auth-reducer';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\n\r\n\r\nexport const SignIn: React.FC<any> = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            confirm: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 8 characters';\r\n            }\r\n            if (values.confirm) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values, formikHelpers) => {\r\n            const action = await dispatch(SingInTC(values));\r\n            formikHelpers.setFieldError('confirm', 'Incorrect email or password');\r\n            console.log(JSON.stringify(action) + 'novoe');\r\n        },\r\n    });\r\n\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n\r\n    return <div className={st.wrapper}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <SignInForm\r\n                title={'LOGIN FORM'}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                email={formik.values.email}\r\n                password={formik.values.password}\r\n                errors={formik.errors}\r\n\r\n            />\r\n        </form>\r\n\r\n    </div>;\r\n};\r\n\r\n// export type FormikErrorType = {\r\n//     email?: string\r\n//     password?: string\r\n//     // rememberMe?: boolean\r\n//     confirm?: string\r\n// }\r\n","export default __webpack_public_path__ + \"static/media/ava_default.17ad3620.jpg\";","import {ProfileType} from '../../../m3-dal/authAPI';\r\nimport ava_default from '../../assets/img/ava_default.jpg';\r\nimport React from 'react';\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n}\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n    const {profile} = props;\r\n    return (\r\n        <div>\r\n            <div><img src={profile.avatar ? profile.avatar : ava_default} alt=\"\"/></div>\r\n            <div>Name : {profile.name}</div>\r\n            <div>Email : {profile.email}</div>\r\n            <div>Public Card Packs Count : {profile.publicCardPacksCount}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {ProfileType} from '../../../m3-dal/authAPI';\r\nimport style from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\n\r\ntype ProfType = {\r\n    profile: ProfileType\r\n    onLogOut: ()=> void\r\n}\r\n\r\nexport const Profile: React.FC<ProfType> = (props) => {\r\n    const {profile,onLogOut} = props;\r\n    return <section>\r\n        <div className={style.profile}>\r\n            <ProfileInfo profile={profile}/>\r\n            <MyBtn name={'LogOut'} onClick={onLogOut}/>\r\n        </div>\r\n    </section>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../routes/Routes';\r\nimport {Profile} from './Profile';\r\nimport {ProfileType} from '../../../m3-dal/authAPI';\r\nimport {logoutTC} from '../../../m2-bll/auth-reducer';\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profile.profile);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOut = () => dispatch(logoutTC())\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>\r\n    return <section>\r\n        <Profile\r\n            profile={profile}\r\n            onLogOut={onLogOut}\r\n        />\r\n    </section>\r\n}","import React from 'react';\r\nimport style from './RecoveryPass.module.css'\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {Snackbar} from '@material/react-snackbar';\r\n\r\ntype RecPasstype = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n    email: string\r\n    error: string\r\n    recoveryPassSuccess: boolean\r\n}\r\n\r\nexport const RecoveryPassword: React.FC<RecPasstype> = (props) => {\r\n\r\n    const {onChange, formSubmit, errors, email, error: errorServer, recoveryPassSuccess} = props;\r\n    const {email: errorEmail} = errors;\r\n    return <section>\r\n        <div className={style.recPass}>\r\n            <h2 className={style.recPass_title}> RecoveryPassword </h2>\r\n            <p className={style.recPass_description}>\r\n                Для восстановления пароля введите ваш email,\r\n                на него придет письмо с дальнейшими инструкциями.\r\n            </p>\r\n            <form className={style.recPass_form}>\r\n                <MyInput type='email' onChange={onChange} name={'email'}\r\n                         value={email} placeholder='your email...' error={!!errorEmail}/>\r\n                {errorEmail ?\r\n                    <div>{errorEmail}</div> : null}\r\n                {recoveryPassSuccess ?\r\n                    <div> Перейдите на почтовый ящик и следуйте дальнейщим инструкциям... </div> : null}\r\n\r\n                <MyBtn name='Send' onClick={formSubmit}\r\n                       error={!!errorEmail} disabled={!!errorEmail} type={'submit'}/>\r\n                {errorServer ? <p className={style.reg_form__error}> {errorServer} </p> : ''}\r\n                {/*{error && <Snackbar message={error} timeoutMs={4000}/>}*/}\r\n            </form>\r\n        </div>\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {AuthInitialStateType, recoveryPassTC} from '../../../m2-bll/auth-reducer';\r\nimport {useFormik} from 'formik';\r\nimport {RecoveryPassword} from './RecoveryPassword';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../routes/Routes';\r\n\r\n\r\nexport const RecoveryPasswordContainer: React.FC = () => {\r\n\r\n    const {error, recoveryPassSuccess,isAuth} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: RecoveryPassErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            const RecoveryPassObj: RecoveryPassObjType = {\r\n                email: values.email,\r\n                from: 'kirillpuzanov@mail.ru',\r\n                message: `<div style=\"background-color: lime; padding: 15px\">\r\n                        password recovery link: \r\n\t                    <a href='http://localhost:3000/#/new-pass/:token?/$token$'>link</a>\r\n\t                    </div>`\r\n            }\r\n            dispatch(recoveryPassTC(RecoveryPassObj))\r\n            console.log(RecoveryPassObj)\r\n        },\r\n    })\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return <section>\r\n        <div>\r\n            <RecoveryPassword\r\n                email={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                errors={formik.errors}\r\n                error={error}\r\n                recoveryPassSuccess={recoveryPassSuccess}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\nexport type RecoveryPassErrorType = {\r\n    email?: string\r\n}\r\nexport type RecoveryPassObjType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './SetNewPassword.module.css'\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport {SetNewPassErrorType} from './SetNewPasswordContainer';\r\n\r\ntype NewPassType = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: SetNewPassErrorType\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n}\r\n\r\nexport const SetNewPassword: React.FC<NewPassType> = (props) => {\r\n    const {onChange, formSubmit, errors, password, repeatPass} = props;\r\n    const {password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = !!errorPassword || !!errorRepeatPass;\r\n\r\n    return <section>\r\n        <main className={style.newPass}>\r\n            <form>\r\n                <h2 className={style.newPass_title}> Смена пароля </h2>\r\n                <div>\r\n                    <p className={style.newPass_descr}> Введите ваш новый пароль.. </p>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword\r\n                        ? <div className={style.reg_form__error}>{errors.password}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <p>Повторите ваш новый пароль..</p>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass\r\n                        ? <div className={style.reg_form__error}>{errors.repeatPass}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <MyBtn name='Send' onClick={formSubmit}\r\n                           error={disBtn} disabled={disBtn} type={'submit'}/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport {SetNewPassword} from './SetNewPassword';\r\nimport {AuthInitialStateType, setNewPassTC} from '../../../m2-bll/auth-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../routes/Routes';\r\n\r\nexport const SetNewPasswordContainer: React.FC = () => {\r\n\r\n    const {error,newPassSuccess,isAuth} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const {token} = useParams<tokenType>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: SetNewPassErrorType = {};\r\n            if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n           const setNewPassData:setNewPassDatatype = {\r\n               password:values.password,\r\n               resetPasswordToken: token\r\n           }\r\n            dispatch(setNewPassTC(setNewPassData))\r\n        },\r\n    })\r\n\r\n    if (newPassSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return <section>\r\n        <div>\r\n            <SetNewPassword\r\n                password={formik.values.password}\r\n                repeatPass={formik.values.repeatPass}\r\n                error={error}\r\n                errors={formik.errors}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\nexport type setNewPassDatatype = {\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\nexport type SetNewPassErrorType = {\r\n    password?: string,\r\n    repeatPass?: string,\r\n}\r\ntype tokenType = {token:string}\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {PNF} from '../notFound/PNF';\r\nimport {RegistrationContainer} from '../registration/RegistrationContainer';\r\nimport {SignIn} from '../signIn/SingIn';\r\nimport {ProfileContainer} from '../profile/ProfileContainer';\r\nimport {RecoveryPasswordContainer} from '../recoveryPassword/RecoveryPasswordContainer';\r\nimport {SetNewPasswordContainer} from '../setNewPassword/SetNewPasswordContainer';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/';\r\nexport const REGISTRATION_PATH = '/registration';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\nexport const RECOVERY_PASSWORD_PATH = '/recoveryPass';\r\nexport const SET_NEW_PASSWORD_PATH = '/new-pass/:token?';\r\nexport const TEST_COMPONENT_PATH = '/testComponent';\r\n\r\n\r\nexport const Routes: React.FC<any> = () => {\r\n\r\n    return <>\r\n        <Switch>\r\n            <Route exact path={SIGN_IN_PATH} component={SignIn}/>\r\n            <Route path={REGISTRATION_PATH} component={RegistrationContainer}/>\r\n            <Route path={PROFILE_PATH} component={ProfileContainer}/>\r\n            <Route path={RECOVERY_PASSWORD_PATH} component={RecoveryPasswordContainer}/>\r\n            <Route path={SET_NEW_PASSWORD_PATH} component={SetNewPasswordContainer}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} component={PNF}/>\r\n            <Redirect from={'*'} to={PAGE_NOT_FOUND_PATH}/>\r\n        </Switch>\r\n\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    PAGE_NOT_FOUND_PATH,\r\n    PROFILE_PATH, RECOVERY_PASSWORD_PATH,\r\n    REGISTRATION_PATH, SET_NEW_PASSWORD_PATH,\r\n    SIGN_IN_PATH,\r\n    TEST_COMPONENT_PATH\r\n} from '../routes/Routes';\r\nimport style from './Header.module.css'\r\n\r\nexport type HeaderType = {}\r\n\r\nexport const Header = (props: HeaderType) => {\r\n\r\n    return <section className={style.header}>\r\n        <nav className={style.header_nav}>\r\n            <NavLink to={SIGN_IN_PATH} exact activeClassName={style.header_nav__link}>Sign In</NavLink>\r\n            <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>\r\n            <NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>\r\n            <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>\r\n            <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>\r\n            <NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>\r\n        </nav>\r\n    </section>\r\n}","export default __webpack_public_path__ + \"static/media/loader.37f92040.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/preloader/loader.svg\";\r\n\r\nconst style = {\r\n    width: '60px',\r\n    height:'60px',\r\n    display:'block',\r\n    margin: '0 auto'\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\" style={style}/>\r\n    )\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI} from '../m3-dal/authAPI';\r\nimport {authActions, authActionsType} from './auth-reducer';\r\nimport {profileActions, ProfileActionsType} from './profile-reducer';\r\n\r\n\r\nconst initialState = {\r\n    isInitializing: false,\r\n    initializeError: '',\r\n}\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case '/APP/SET-INITIALIZED':\r\n            return {...state, isInitializing: action.isInitializing}\r\n        case '/INITIALIZE/SET-ERROR':\r\n            return {...state, initializeError: action.initialiseError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const appActions = {\r\n    setInitializing: (isInitializing: boolean) => ({type: '/APP/SET-INITIALIZED', isInitializing} as const),\r\n    setInitializeError: (initialiseError: string) => ({type: '/INITIALIZE/SET-ERROR', initialiseError} as const),\r\n}\r\n// thunks\r\nexport const AuthMe = (): ThunkType => async (dispatch) => {\r\n        try {\r\n            let response = await authAPI.authMe()\r\n            dispatch(profileActions.setProfileAC(response))\r\n            dispatch(authActions.setIsAuthAC(true))\r\n        } catch (err) {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err + ' ... О-оу зовите бородатых сеньоров!!');\r\n            dispatch(appActions.setInitializeError(error))\r\n        }\r\n        dispatch(appActions.setInitializing(true))\r\n    }\r\n\r\n\r\n\r\n\r\nexport type AppInitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<AppActionsType>\r\nexport type AppActionsType = InferActionsTypes<typeof appActions>\r\n    | ProfileActionsType\r\n    | authActionsType\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/header/Header';\r\nimport {Routes} from './components/routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Preloader} from './common/Preloader/Preloader';\r\nimport {AppStateType} from '../m2-bll/store';\r\nimport {AppInitialStateType, AuthMe} from '../m2-bll/app-reducer';\r\n\r\nfunction App() {\r\n    const {isInitializing} = useSelector<AppStateType, AppInitialStateType>(state => state.app)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(AuthMe())\r\n    }, [dispatch])\r\n\r\n    if (!isInitializing) return <Preloader/>\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {authReducer} from './auth-reducer';\r\n\r\n\r\n//actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n//thunk's type\r\nexport type BaseThunkType<A extends Action = Action, R = any> = ThunkAction<R, AppStateType, unknown, A>\r\n//state type\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst reducers = combineReducers({\r\n    auth:authReducer,\r\n    profile:profileReducer,\r\n    app: appReducer,\r\n    //newPassword: setNewPasswordReducer\r\n});\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/m1-ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './main/m2-bll/store';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n                <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}