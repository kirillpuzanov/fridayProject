{"version":3,"sources":["fiatures/f-2_PacksTable/f-2_ui/Packs.module.css","fiatures/f-1_autorization/f-1_ui/signIn/SingInForm.module.css","main/m1-ui/header/Header.module.css","fiatures/f-1_autorization/f-1_ui/registration/Registration.module.css","fiatures/f-1_autorization/f-1_ui/setNewPassword/SetNewPassword.module.css","main/common/Paginator/Paginator.module.css","main/common/table/table.module.css","main/m1-ui/notFound/pnf.module.css","main/common/myComponent/myInput/MyInput.module.css","main/common/myComponent/myBtn/MyBtn.module.css","main/common/myComponent/MySnackBar/MySnackBar.module.css","main/common/myComponent/BtnForTable/TableBtn.module.css","main/common/myComponent/MyMultiRange/MyMultiRange.module.css","main/common/search/Search.module.css","main/m1-ui/notFound/PNF.tsx","main/common/myComponent/myInput/MyInput.tsx","main/common/myComponent/myBtn/MyBtn.tsx","main/m3-dal/api.ts","fiatures/f-1_autorization/f-1_dal/authAPI.ts","main/m2-bll/profile-reducer.ts","fiatures/f-1_autorization/f-1_bll/auth-reducer.ts","main/common/myComponent/MySnackBar/MySnackBar.tsx","fiatures/f-1_autorization/f-1_ui/registration/Registration.tsx","fiatures/f-1_autorization/f-1_ui/registration/RegistrationContainer.tsx","fiatures/f-1_autorization/f-1_ui/signIn/SignInForm.tsx","fiatures/f-1_autorization/f-1_ui/signIn/SingIn.tsx","main/assets/img/ava_default.jpg","main/m1-ui/profile/ProfileInfo.tsx","main/m1-ui/profile/Profile.tsx","main/m1-ui/profile/ProfileContainer.tsx","fiatures/f-1_autorization/f-1_ui/recoveryPassword/RecoveryPassword.tsx","fiatures/f-1_autorization/f-1_ui/recoveryPassword/RecoveryPasswordContainer.tsx","fiatures/f-1_autorization/f-1_ui/setNewPassword/SetNewPassword.tsx","fiatures/f-1_autorization/f-1_ui/setNewPassword/SetNewPasswordContainer.tsx","fiatures/f-2_PacksTable/f-2_dal/packsAPI.ts","fiatures/f-2_PacksTable/f-2_bll/cardPacks-reducer.ts","main/common/myComponent/BtnForTable/TableBtn.tsx","main/common/myComponent/MyMultiRange/Handle.tsx","main/common/myComponent/MyMultiRange/MyMultiRange.tsx","main/common/search/Search.tsx","main/common/search/SearchContainer.tsx","main/common/Paginator/Paginator.tsx","main/common/Paginator/PaginatorContainer.tsx","main/common/table/Table.tsx","fiatures/f-2_PacksTable/f-2_ui/PacksPage.tsx","fiatures/f-2_PacksTable/f-2_ui/PacksModel.tsx","main/m1-ui/routes/Routes.tsx","main/m1-ui/header/Header.tsx","main/assets/preloader/loader.svg","main/common/Preloader/Preloader.tsx","main/m2-bll/app-reducer.ts","main/App.tsx","reportWebVitals.ts","main/m2-bll/store.ts","index.tsx"],"names":["module","exports","PNF","className","style","pnf","pnf_error","pnf_descr","MyInput","props","error","styles","inputBase","red","onBlur","type","value","onChange","onKeyPress","placeholder","name","MyBtn","redBtn","btn","onClick","disabled","instance","axios","create","baseURL","withCredentials","authAPI","email","password","post","then","res","data","r","delete","recoveryPassObj","setNewPassData","initialState","profile","profileActions","AuthInitialState","isAuth","loading","registerSuccess","recoveryPassSuccess","newPassSuccess","authActions","SingInTC","dispatch","a","response","message","console","log","MySnackBar","React","memo","useDispatch","errorServer","useEffect","setTimeout","MySnackBar_text","MySnackBar_btn","Registration","repeatPass","errors","formSubmit","errorEmail","errorPassword","errorRepeatPass","disBtn","reg","reg_title","reg_form","reg_form__error","RegistrationContainer","useSelector","state","auth","formik","useFormik","initialValues","validate","values","test","length","onSubmit","addedUser","to","SIGN_IN_PATH","PROFILE_PATH","handleChange","handleSubmit","SignInForm","title","errorConfirm","confirm","disableErrorField","st","has_error","click","footer","REGISTRATION_PATH","activeClassName","header_nav__link","RECOVERY_PASSWORD_PATH","SignIn","rememberMe","formikHelpers","action","setFieldError","JSON","stringify","wrapper","ProfileInfo","src","avatar","ava_default","alt","publicCardPacksCount","Profile","onLogOut","ProfileContainer","RecoveryPassword","recPass","recPass_title","recPass_description","recPass_form","RecoveryPasswordContainer","RecoveryPassObj","from","recoveryPassTC","SetNewPassword","newPass","newPass_title","newPass_descr","SetNewPasswordContainer","token","useParams","resetPasswordToken","setNewPassTC","packsAPI","getCardPacks","max","min","packName","currentPage","pageSize","sortPacks","packUser_id","get","addPack","cardsPack","updatePack","packId","put","_id","deckCover","deletePack","CardPacksInitState","cardPacks","cardPacksTotalCount","sortMax","sortMin","user_id","tableLoading","tableSuccess","tableError","cardPackActions","totalCount","userPack_id","searchName","CardPackTC","getState","cardPack","TableBtn","Handle","left","handle","percent","position","marginLeft","marginTop","zIndex","width","height","border","textAlign","cursor","borderRadius","backgroundColor","color","getHandleProps","id","fontFamily","fontSize","MyMultiRange","domain","step","mode","s","slider","getRailProps","railStyle","handles","map","Search","onSearch","valueMultiRAnge","onChangeMultiRange","search","e","currentTarget","SearchContainer","useCallback","onInputChange","onSearchBtn","Paginator","totalItemsCount","onPageChanged","portionSize","togglePageSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","nameClass","p","pageNumber","selectedPage","paginator","Number","filter","paginator_btn","PaginatorContainer","MyTable","model","header","m","index","row","dataItem","dataIndex","inside","modelIndex","render","PacksPage","myPacks","setMyPacks","setMyPacksCallback","target","checked","item","cardsCount","updated","slice","containerWrapper","PAGE_NOT_FOUND_PATH","PACKS_PATH","Routes","exact","path","component","Header","header_nav","display","margin","Preloader","preloader","isInitializing","initializeError","appActions","initialiseError","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","UserId","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.209ba2e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Packs_item__2cvBp\",\"containerWrapper\":\"Packs_containerWrapper__20tHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SingInForm_wrapper__1byct\",\"click\":\"SingInForm_click__28Th6\",\"has_error\":\"SingInForm_has_error__2Z-ui\",\"title\":\"SingInForm_title__2ZXS3\",\"footer\":\"SingInForm_footer__83icD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2O5DB\",\"header_nav\":\"Header_header_nav__DrKAV\",\"header_nav__link\":\"Header_header_nav__link__1HpwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg\":\"Registration_reg__3Yc3W\",\"reg_title\":\"Registration_reg_title__3IK-F\",\"reg_form\":\"Registration_reg_form__3b7Hv\",\"reg_form__error\":\"Registration_reg_form__error__14qax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SetNewPassword_error__1J5Q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1Ocyl\",\"pageNumber\":\"Paginator_pageNumber__2FDOe\",\"selectedPage\":\"Paginator_selectedPage__ayb4Z\",\"paginator_btn\":\"Paginator_paginator_btn__D32WT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"table_header__KyWap\",\"row\":\"table_row__2Njfw\",\"wrapper\":\"table_wrapper__3NWC0\",\"inside\":\"table_inside__3qB0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pnf\":\"pnf_pnf__oyjWf\",\"pnf_error\":\"pnf_pnf_error__54vnS\",\"pnf_descr\":\"pnf_pnf_descr__3P7Zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__2ZT_n\",\"red\":\"MyInput_red__1MDC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__iRc0I\",\"redBtn\":\"MyBtn_redBtn__2IGXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MySnackBar\":\"MySnackBar_MySnackBar__2xJhG\",\"MySnackBar_text\":\"MySnackBar_MySnackBar_text__1scdJ\",\"MySnackBar_btn\":\"MySnackBar_MySnackBar_btn__1-ixj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TableBtn_btn__3IYW1\",\"redBtn\":\"TableBtn_redBtn__1FOGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"MyMultiRange_slider__30Eaz\",\"railStyle\":\"MyMultiRange_railStyle__UUxML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__aOgeg\"};","import React from 'react';\r\nimport style from './pnf.module.css'\r\n\r\n\r\n\r\nexport const PNF:React.FC = ()=> {\r\n\r\n    return <section className={style.pnf}>\r\n        <div className={style.pnf_error}> 404 </div>\r\n        <p className={style.pnf_descr}>Sorry, Page not Found...</p>\r\n    </section>\r\n}","import React from 'react';\r\nimport styles from './MyInput.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value?: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: (e: React.FocusEvent<any>) => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onKeyPress={props.onKeyPress}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    //локально:\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    // gh-pages:\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n","import {instance} from '../../../main/m3-dal/api';\r\nimport {RecoveryPassObjType} from '../f-1_ui/recoveryPassword/RecoveryPasswordContainer';\r\nimport {setNewPassDatatype} from '../f-1_ui/setNewPassword/SetNewPasswordContainer';\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseReg>('auth/register', {email, password})\r\n            .then(res => res.data)\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ProfileType>('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return instance.post<ProfileType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    recoveryPass(recoveryPassObj:RecoveryPassObjType ){\r\n        return instance.post<LogoutResType>('auth/forgot', {...recoveryPassObj})\r\n    },\r\n    newPass(setNewPassData: setNewPassDatatype){\r\n        return instance.post('auth/set-new-password', {...setNewPassData})\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype ResponseReg = {\r\n    addedUser: ProfileType\r\n    error: string\r\n}\r\ntype LogoutResType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    token: string\r\n}\r\n\r\n\r\n\r\n","import {ProfileType} from '../../fiatures/f-1_autorization/f-1_dal/authAPI';\r\nimport {InferActionsTypes} from './store';\r\n\r\n\r\nconst initialState = {\r\n    profile: {} as ProfileType,\r\n}\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ProfileActionsType):ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case '/PROFILE/SET-PROFILE': return { ...state, profile: {...action.profile}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//actions\r\nexport const profileActions = {\r\n  setProfileAC: (profile: ProfileType) => ({type: '/PROFILE/SET-PROFILE', profile} as const),\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState;\r\nexport type ProfileActionsType = InferActionsTypes<typeof profileActions>\r\n\r\n","import {BaseThunkType, InferActionsTypes} from '../../../main/m2-bll/store';\r\nimport {authAPI, LoginParamsType} from '../f-1_dal/authAPI';\r\nimport {profileActions, ProfileActionsType} from '../../../main/m2-bll/profile-reducer';\r\nimport {RecoveryPassObjType} from '../f-1_ui/recoveryPassword/RecoveryPasswordContainer';\r\nimport {setNewPassDatatype} from '../f-1_ui/setNewPassword/SetNewPasswordContainer';\r\n\r\n\r\nexport const AuthInitialState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    error: '',\r\n    registerSuccess: false,\r\n    recoveryPassSuccess: false,\r\n    newPassSuccess: false,\r\n};\r\nexport const authReducer = (state: AuthInitialStateType = AuthInitialState, action: authActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case 'singIn/SET-IS-AUTH':\r\n            return {...state, isAuth: action.isAuth}\r\n        case '/SERVER-ERROR/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case '/REG/SET-REGISTER-SUCCESS':\r\n            return {...state, registerSuccess: true}\r\n        case '/REG/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n        case '/REC/SET-RECOVERY-PASS-SUCCESS':\r\n            return {...state, recoveryPassSuccess: true}\r\n        case '/NEW-PASS/SET-NEW-PASS-SUCCESS':\r\n            return {...state, newPassSuccess: true}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action's\r\nexport const authActions = {\r\n    setIsAuthAC: (isAuth: boolean) => ({type: 'singIn/SET-IS-AUTH', isAuth} as const),\r\n    setRegisterSuccess: () => ({type: '/REG/SET-REGISTER-SUCCESS'} as const),\r\n    setRecoveryPassSuccess: () => ({type: '/REC/SET-RECOVERY-PASS-SUCCESS'} as const),\r\n    setNewPassSuccess: () => ({type: '/NEW-PASS/SET-NEW-PASS-SUCCESS'} as const),\r\n    setLoading: (loading: boolean) => ({type: '/REG/SET-LOADING', loading} as const),\r\n    setError: (error: string) => ({type: '/SERVER-ERROR/SET-ERROR', error} as const),\r\n};\r\n\r\n//thunk's\r\nexport const SingInTC = (data: LoginParamsType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.login(data);\r\n            dispatch(authActions.setIsAuthAC(true));\r\n            dispatch(profileActions.setProfileAC(response.data))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ',more details on the console');\r\n            dispatch(authActions.setIsAuthAC(false));\r\n            dispatch(authActions.setError(error))\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    };\r\nexport const registerTC = (email: string, password: string): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(authActions.setLoading(true))\r\n        try {\r\n            let response = await authAPI.register(email, password)\r\n            if (response.addedUser) dispatch(authActions.setRegisterSuccess())\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n        dispatch(authActions.setLoading(false))\r\n    };\r\n\r\nexport const logoutTC = (): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.logout()\r\n            dispatch(authActions.setIsAuthAC(false))\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n    };\r\nexport const recoveryPassTC = (RecoveryPassObj: RecoveryPassObjType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.recoveryPass(RecoveryPassObj)\r\n            dispatch(authActions.setRecoveryPassSuccess())\r\n        } catch (err) {\r\n            dispatch(authActions.setError(err.response.data.error))\r\n        }\r\n    };\r\nexport const setNewPassTC = (setNewPassData: setNewPassDatatype): ThunkType => async (dispatch) => {\r\n    try {\r\n        await authAPI.newPass(setNewPassData)\r\n        dispatch(authActions.setNewPassSuccess())\r\n    } catch (err) {\r\n        dispatch(authActions.setError(err.response.data.error))\r\n    }\r\n}\r\n\r\n//type's\r\nexport type AuthInitialStateType = typeof AuthInitialState;\r\nexport type ThunkType = BaseThunkType<authActionsType>;\r\nexport type authActionsType = InferActionsTypes<typeof authActions>\r\n    | ProfileActionsType;\r\n\r\n","import React, {useEffect} from 'react';\r\nimport style from './MySnackBar.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {authActions} from '../../../../fiatures/f-1_autorization/f-1_bll/auth-reducer';\r\n\r\n\r\ntype SnackBarType = {\r\n    errorServer: string\r\n}\r\n\r\nexport const MySnackBar = React.memo((props: SnackBarType) => {\r\n    const dispatch = useDispatch();\r\n    const {errorServer} = props;\r\n    useEffect( ()=> {\r\n        setTimeout( ()=> {\r\n            dispatch(authActions.setError(''))\r\n        }, 4000)\r\n    },[])\r\n\r\n    const closeSnackBar = () => {\r\n        dispatch(authActions.setError(''))\r\n    }\r\n\r\n    return (\r\n            <div className={style.MySnackBar}>\r\n                <p className={style.MySnackBar_text}>{errorServer}</p>\r\n                <button className={style.MySnackBar_btn} onClick={closeSnackBar}> + </button>\r\n            </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {MyInput} from '../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport style from './Registration.module.css';\r\nimport {FormikErrorType} from './RegistrationContainer';\r\nimport {MySnackBar} from '../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\n\r\ntype RegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n    errors: FormikErrorType\r\n    formSubmit: () => void\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationType> = (props) => {\r\n\r\n    const {email, password, repeatPass, error:errorServer, errors, onChange, formSubmit} = props;\r\n    const {email: errorEmail, password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = errorEmail || errorPassword || errorRepeatPass;\r\n\r\n\r\n    return <section>\r\n        <main className={style.reg}>\r\n            <div className={style.reg_title}> Registration form</div>\r\n            <form className={style.reg_form}>\r\n                <div>\r\n                    <span>Enter your email:</span>\r\n                    <MyInput error={!!errorEmail} type='email'\r\n                             value={email} onChange={onChange}\r\n                             placeholder='email...' name='email'/>\r\n                    {errorEmail ?\r\n                        <div className={style.reg_form__error}>{errorEmail}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Enter your password:</span>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword ?\r\n                        <div className={style.reg_form__error}>{errors.password}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span> Repeat your password:</span>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass ?\r\n                        <div className={style.reg_form__error}>{errors.repeatPass}</div> : null}\r\n                </div>\r\n\r\n                <div>\r\n                    <MyBtn error={!!disBtn} disabled={!!disBtn} name={'Register'} onClick={formSubmit}/>\r\n                </div>\r\n\r\n            </form>\r\n        </main>\r\n        {errorServer && <MySnackBar errorServer={errorServer}/>}\r\n    </section>\r\n}\r\n\r\n\r\n// type RegistrationType = {\r\n//     email: string\r\n//     password: string\r\n//     repeatPass: string\r\n//     error: string\r\n//     errors: FormikErrorType\r\n//     loading: boolean\r\n//     formSubmit: () => void\r\n//     onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n//     // errorEmail: boolean | string | undefined\r\n//     // errorPassword: boolean | string | undefined\r\n//     // errorRepeatPass: boolean | string | undefined\r\n//     // setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setRepeatPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n// }\r\n\r\n\r\n//old method\r\n// export const Registration: React.FC<RegistrationType> = (props) => {\r\n//     const {email, password, repeatPass, error,errors, loading,onChange, /*setEmail, setPassword, setRepeatPassword,*/ formSubmit} = props;\r\n//\r\n//     if (loading) return <Preloader/>\r\n//\r\n//     return <section>\r\n//         <main className={style.reg}>\r\n//             <div className={style.reg_title}> Registration form</div>\r\n//             <form className={style.reg_form}>\r\n//                 <div>\r\n//                     <span>Enter your email:</span>\r\n//                     <MyInput error={!!error} type='email'\r\n//                              value={email} onChange={onChange}\r\n//                              placeholder='email...' name='email'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Enter your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={password} onChange={onChange}\r\n//                              placeholder='min 8 symbols..' name='password'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Repeat your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={repeatPass} onChange={onChange}\r\n//                              placeholder='min 8 symbols...' name='repeatPassword'/>\r\n//                 </div>\r\n//                 {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n//                 <div>\r\n//                     <MyBtn disabled={loading} name={'Login'} onClick={formSubmit}/>\r\n//                 </div>\r\n//             </form>\r\n//         </main>\r\n//     </section>\r\n// }","import React from 'react';\r\nimport {Registration} from './Registration';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../main/m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../../../../main/m1-ui/routes/Routes';\r\nimport {useFormik} from 'formik';\r\nimport {AuthInitialStateType, registerTC} from '../../f-1_bll/auth-reducer';\r\n\r\nexport const RegistrationContainer = () => {\r\n    const {error, registerSuccess} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(registerTC(values.email, values.password));\r\n        },\r\n    });\r\n\r\n    if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>;\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return (\r\n        <Registration\r\n            email={formik.values.email}\r\n            password={formik.values.password}\r\n            repeatPass={formik.values.repeatPass}\r\n            error={error}\r\n            errors={formik.errors}\r\n            onChange={formik.handleChange}\r\n            formSubmit={formik.handleSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPass?: string\r\n    confirm?: string\r\n\r\n\r\n}\r\n\r\n//old method\r\n\r\n// export type eInput = React.ChangeEvent<HTMLInputElement>\r\n//\r\n// export const RegistrationContainer: React.FC = () => {\r\n//\r\n//     const [email, setEmailVal] = useState<string>('')\r\n//     const [password, setPasswordVal] = useState('')\r\n//     const [repeatPass, setRepeatPassVal] = useState('')\r\n//\r\n//      const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n//     const dispatch = useDispatch()\r\n//\r\n//     const setEmail = useCallback((e: eInput) => {\r\n//         setEmailVal(e.currentTarget.value)\r\n//     }, [setEmailVal])\r\n//     const setPassword = useCallback((e: eInput) => {\r\n//         setPasswordVal(e.currentTarget.value)\r\n//     }, [setPasswordVal])\r\n//     const setRepeatPassword = useCallback((e: eInput) => {\r\n//         setRepeatPassVal(e.currentTarget.value)\r\n//     }, [setRepeatPassVal])\r\n//\r\n//     const formSubmit = useCallback(() => {\r\n//         if (!email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)) {\r\n//             dispatch(signInActions.setError('Uncorrected email'))\r\n//         } else if (password.length < 8) {\r\n//             dispatch(signInActions.setError('Password must be more than 8 characters...'))\r\n//         } else if (password !== repeatPass) {\r\n//             dispatch(signInActions.setError('Invalid second password'))\r\n//         } else if (email && password && repeatPass) {\r\n//             dispatch(registerTC(email, password))\r\n//         }\r\n//     }, [password, repeatPass, email, dispatch])\r\n//\r\n//     if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n//     return <section>\r\n//         <Registration\r\n//             email={email}\r\n//             password={password}\r\n//             repeatPass={repeatPass}\r\n//             error={error}\r\n//             loading={loading}\r\n//             setEmail={setEmail}\r\n//             setPassword={setPassword}\r\n//             setRepeatPassword={setRepeatPassword}\r\n//             formSubmit={formSubmit}\r\n//         />\r\n//     </section>\r\n// }","import React from 'react';\r\nimport st from './SingInForm.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RECOVERY_PASSWORD_PATH, REGISTRATION_PATH} from '../../../../main/m1-ui/routes/Routes';\r\nimport style from '../../../../main/m1-ui/header/Header.module.css';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {MyInput} from '../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport {MySnackBar} from '../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\ntype PropsType = {\r\n    email: string\r\n    password: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n    errorServer: string\r\n}\r\n\r\n\r\nexport const SignInForm: React.FC<PropsType> = (props) => {\r\n\r\n    const {email, password, errors, onChange, formSubmit, title, errorServer} = props;\r\n    const {email: errorEmail, password: errorPassword, confirm: errorConfirm} = errors;\r\n    const disableErrorField = errorEmail || errorPassword;\r\n\r\n    return <section>\r\n        <div className={st.title}>{title}</div>\r\n        <MyInput type='email'\r\n                 onChange={onChange}\r\n                 value={email}\r\n                 placeholder={'email'}\r\n                 name={'email'}\r\n                 error={!!errorEmail}\r\n        /> {errorEmail ?\r\n        <div className={st.has_error}>{errorEmail}</div> : null}\r\n\r\n        {errorConfirm ? <div className={st.has_error}>{errorConfirm}</div> : null}\r\n\r\n        <MyInput type='password'\r\n                 onChange={onChange}\r\n                 value={password}\r\n                 placeholder={'password'}\r\n                 error={!!errorPassword} name={'password'}\r\n        />\r\n        {errorPassword ?\r\n            <div className={st.has_error}>{errorPassword}</div> : null}\r\n\r\n        <div className={st.click}>\r\n            <div>\r\n                <input type='checkbox' onChange={onChange}/>RememberMe\r\n            </div>\r\n            {!disableErrorField ? <MyBtn name='Login'\r\n                                         type=\"submit\"\r\n                                         onClick={formSubmit}\r\n                                         disabled={!!disableErrorField}\r\n                                         error={!!disableErrorField}\r\n            /> : null}\r\n\r\n        </div>\r\n\r\n        <div className={st.footer}>\r\n            <nav>\r\n                <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>SingUp</NavLink>\r\n            </nav>\r\n            <nav>\r\n                <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Forgot?</NavLink>\r\n            </nav>\r\n        </div>\r\n        {errorServer && <MySnackBar errorServer={errorServer}/>}\r\n    </section>;\r\n};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../main/m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport st from './SingInForm.module.css';\r\nimport {SignInForm} from './SignInForm';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../../../../main/m1-ui/routes/Routes';\r\nimport {AuthInitialStateType, SingInTC} from '../../f-1_bll/auth-reducer';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\n\r\n\r\nexport const SignIn: React.FC<any> = () => {\r\n    const dispatch = useDispatch();\r\n    const {isAuth, error} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            confirm: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 8 characters';\r\n            }\r\n            if (values.confirm) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values, formikHelpers) => {\r\n            const action = await dispatch(SingInTC(values));\r\n            formikHelpers.setFieldError('confirm', 'Incorrect email or password');\r\n            console.log(JSON.stringify(action) + 'novoe');\r\n        },\r\n    });\r\n\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n\r\n    return <div className={st.wrapper}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <SignInForm\r\n                title={'LOGIN FORM'}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                email={formik.values.email}\r\n                password={formik.values.password}\r\n                errors={formik.errors}\r\n                errorServer={error}\r\n            />\r\n        </form>\r\n\r\n    </div>;\r\n};\r\n\r\n// export type FormikErrorType = {\r\n//     email?: string\r\n//     password?: string\r\n//     // rememberMe?: boolean\r\n//     confirm?: string\r\n// }\r\n","export default __webpack_public_path__ + \"static/media/ava_default.17ad3620.jpg\";","import {ProfileType} from '../../../fiatures/f-1_autorization/f-1_dal/authAPI';\r\nimport ava_default from '../../assets/img/ava_default.jpg';\r\nimport React from 'react';\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n}\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n    const {profile} = props;\r\n    return (\r\n        <div>\r\n            <div><img src={profile.avatar ? profile.avatar : ava_default} alt=\"\"/></div>\r\n            <div>Name : {profile.name}</div>\r\n            <div>Email : {profile.email}</div>\r\n            <div>Public Card Packs Count : {profile.publicCardPacksCount}</div>\r\n            <nav>\r\n                {/*<NavLink to={PACKS_PAGE} activeClassName={style.header_nav__link}>PacksPage</NavLink>*/}\r\n            </nav>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {ProfileType} from '../../../fiatures/f-1_autorization/f-1_dal/authAPI';\r\nimport style from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\n\r\ntype ProfType = {\r\n    profile: ProfileType\r\n    onLogOut: ()=> void\r\n}\r\n\r\nexport const Profile: React.FC<ProfType> = (props) => {\r\n    const {profile,onLogOut} = props;\r\n    return <section>\r\n        <div className={style.profile}>\r\n            <ProfileInfo profile={profile}/>\r\n            <MyBtn name={'LogOut'} onClick={onLogOut}/>\r\n        </div>\r\n    </section>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../routes/Routes';\r\nimport {Profile} from './Profile';\r\nimport {ProfileType} from '../../../fiatures/f-1_autorization/f-1_dal/authAPI';\r\nimport {logoutTC} from '../../../fiatures/f-1_autorization/f-1_bll/auth-reducer';\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profile.profile);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOut = () => dispatch(logoutTC())\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>\r\n\r\n    return <section>\r\n        <Profile\r\n            profile={profile}\r\n            onLogOut={onLogOut}\r\n        />\r\n    </section>\r\n}","import React from 'react';\r\nimport style from './RecoveryPass.module.css'\r\nimport {MyInput} from '../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {MySnackBar} from '../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\ntype RecPasstype = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n    email: string\r\n    error: string\r\n    recoveryPassSuccess: boolean\r\n}\r\n\r\nexport const RecoveryPassword: React.FC<RecPasstype> = (props) => {\r\n\r\n    const {onChange, formSubmit, errors, email, error: errorServer, recoveryPassSuccess} = props;\r\n    const {email: errorEmail} = errors;\r\n    return <section>\r\n        <div className={style.recPass}>\r\n            <h2 className={style.recPass_title}> RecoveryPassword </h2>\r\n            <p className={style.recPass_description}>\r\n                Для восстановления пароля введите ваш email,\r\n                на него придет письмо с дальнейшими инструкциями.\r\n            </p>\r\n            <form className={style.recPass_form}>\r\n                <MyInput type='email' onChange={onChange} name={'email'}\r\n                         value={email} placeholder='your email...' error={!!errorEmail}/>\r\n                {errorEmail ?\r\n                    <div>{errorEmail}</div> : null}\r\n                {recoveryPassSuccess ?\r\n                    <div> Перейдите на почтовый ящик и следуйте дальнейщим инструкциям... </div> : null}\r\n\r\n                <MyBtn name='Send' onClick={formSubmit}\r\n                       error={!!errorEmail} disabled={!!errorEmail} type={'submit'}/>\r\n            </form>\r\n        </div>\r\n        {errorServer && <MySnackBar errorServer={errorServer}/>}\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../main/m2-bll/store';\r\nimport {AuthInitialStateType, recoveryPassTC} from '../../f-1_bll/auth-reducer';\r\nimport {useFormik} from 'formik';\r\nimport {RecoveryPassword} from './RecoveryPassword';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../../../../main/m1-ui/routes/Routes';\r\n\r\n\r\nexport const RecoveryPasswordContainer: React.FC = () => {\r\n\r\n    const {error, recoveryPassSuccess,isAuth} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: RecoveryPassErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            const RecoveryPassObj: RecoveryPassObjType = {\r\n                email: values.email,\r\n                from: 'kirillpuzanov@mail.ru',\r\n                message: `<div style=\"background-color: lime; padding: 15px\">\r\n                        password recovery link: \r\n\t                    <a href='http://localhost:3000/#/new-pass/$token$'>link</a>\r\n\t                    </div>`\r\n            }\r\n            dispatch(recoveryPassTC(RecoveryPassObj))\r\n            console.log(RecoveryPassObj)\r\n        },\r\n    })\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return <section>\r\n        <div>\r\n            <RecoveryPassword\r\n                email={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                errors={formik.errors}\r\n                error={error}\r\n                recoveryPassSuccess={recoveryPassSuccess}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\nexport type RecoveryPassErrorType = {\r\n    email?: string\r\n}\r\nexport type RecoveryPassObjType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './SetNewPassword.module.css'\r\nimport {MyInput} from '../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport {SetNewPassErrorType} from './SetNewPasswordContainer';\r\n\r\ntype NewPassType = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: SetNewPassErrorType\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n}\r\n\r\nexport const SetNewPassword: React.FC<NewPassType> = (props) => {\r\n    const {onChange, formSubmit, errors, password, repeatPass} = props;\r\n    const {password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = !!errorPassword || !!errorRepeatPass;\r\n\r\n    return <section>\r\n        <main className={style.newPass}>\r\n            <form>\r\n                <h2 className={style.newPass_title}> Смена пароля </h2>\r\n                <div>\r\n                    <p className={style.newPass_descr}> Введите ваш новый пароль.. </p>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword\r\n                        ? <div className={style.reg_form__error}>{errors.password}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <p>Повторите ваш новый пароль..</p>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass\r\n                        ? <div className={style.reg_form__error}>{errors.repeatPass}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <MyBtn name='Send' onClick={formSubmit}\r\n                           error={disBtn} disabled={disBtn} type={'submit'}/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../main/m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport {SetNewPassword} from './SetNewPassword';\r\nimport {AuthInitialStateType, setNewPassTC} from '../../f-1_bll/auth-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../../../../main/m1-ui/routes/Routes';\r\n\r\nexport const SetNewPasswordContainer: React.FC = () => {\r\n\r\n    const {error,newPassSuccess,isAuth} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const {token} = useParams<tokenType>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: SetNewPassErrorType = {};\r\n            if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n           const setNewPassData:setNewPassDatatype = {\r\n               password:values.password,\r\n               resetPasswordToken: token\r\n           }\r\n            dispatch(setNewPassTC(setNewPassData))\r\n            console.log(token)\r\n        },\r\n    })\r\n\r\n    if (newPassSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return <section>\r\n        <div>\r\n            <SetNewPassword\r\n                password={formik.values.password}\r\n                repeatPass={formik.values.repeatPass}\r\n                error={error}\r\n                errors={formik.errors}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\nexport type setNewPassDatatype = {\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\nexport type SetNewPassErrorType = {\r\n    password?: string,\r\n    repeatPass?: string,\r\n}\r\ntype tokenType = {token:string}\r\n\r\n","import {instance} from '../../../main/m3-dal/api';\r\nimport {CardPackType} from '../f-2_bll/cardPacks-reducer';\r\n\r\n\r\nexport const packsAPI = {\r\n    getCardPacks: (\r\n        max: number,\r\n        min: number,\r\n        packName?: string,\r\n        currentPage?: number,\r\n        pageSize?: number,\r\n        sortPacks?: string,\r\n        packUser_id?: string,) => {\r\n        return instance.get<ResponsePack>(\r\n            'cards/pack?'\r\n            + (packName ? `packName=${packName}&` : '')\r\n            + (sortPacks ? `sortPacks=${sortPacks}&` : '')\r\n            + (max ? `max=${max}&min=${min}&` : '')\r\n            + (currentPage ? `page=${currentPage}&` : '')\r\n            + (pageSize ? `pageCount=${pageSize}&` : '')\r\n            // + (packUser_id && `user_id=${packUser_id}&`)\r\n        )\r\n            .then(res => res.data);\r\n    },\r\n    addPack: async () => {\r\n        const response = await instance.post<any>('/cards/pack', {\r\n            cardsPack: {\r\n                name: 'NewPack',\r\n            }\r\n        });\r\n        return response.data;\r\n    },\r\n    updatePack: async (packId: string) => {\r\n        const response = await instance.put<any>('/cards/pack', {\r\n            cardsPack: {\r\n                _id: packId,\r\n                name: 'Pack updated',\r\n                deckCover: ''\r\n            }\r\n        });\r\n        return response.data;\r\n    },\r\n    deletePack: async (packId: string) => {\r\n        const response = await instance.delete<any>(`/cards/pack?id=${packId}`);\r\n        return response.data;\r\n    },\r\n\r\n};\r\n\r\nexport type ResponsePack = {\r\n    cardPacks: CardPackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n    error:string\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from '../../../main/m2-bll/store';\r\nimport {packsAPI} from '../f-2_dal/packsAPI';\r\n\r\n\r\nexport const CardPacksInitState = {\r\n    cardPacks: [] as CardPackType[],\r\n    cardPacksTotalCount: 0,\r\n\r\n    sortMax: 50,\r\n    sortMin: 0,\r\n    packName: '',\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    sortPacks: '0updated',\r\n    user_id: '',\r\n\r\n    tableLoading: false,\r\n    tableSuccess: false,\r\n    tableError: '',\r\n}\r\n\r\nexport const cardPacksReducer = (state: CardPacksStateType = CardPacksInitState, action: CardPackActionsType): CardPacksStateType => {\r\n    switch (action.type) {\r\n        case '/CARD_PACK/PACKS-TOTAL-COUNT':\r\n            return {...state, cardPacksTotalCount: action.totalCount}\r\n        case '/CARD_PACK/SET_PACKS':\r\n            return {...state, cardPacks: action.cardPacks};\r\n        case '/CARD_PACK/SET_PACK_USER_ID':\r\n            return {...state, user_id: action.userPack_id,};\r\n\r\n        case '/CARD_PACK/SET-SORT-MAX':\r\n            return {...state, sortMax: action.sortMax}\r\n        case '/CARD_PACK/SET-SORT-MIN':\r\n            return {...state, sortMin: action.sortMin}\r\n        case '/CARD_PACK/SET-PACK-NAME':\r\n            return {...state, packName: action.searchName}\r\n        case '/CARD_PACK/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case '/CARD_PACK/SET-PAGE-SIZE':\r\n            return {...state, currentPage: action.currentPage, pageSize: action.pageSize}\r\n        case '/CARD_PACK/SET-SORT-PACKS':\r\n            return {...state, sortPacks: action.sortPacks}\r\n        case '/CARD_PACK/SET-USER-ID':\r\n            return {...state, sortPacks: action.UserId}\r\n\r\n        case '/CARD_PACK/SET-TABLE-LOADING':\r\n            return {...state, tableLoading: action.tableLoading}\r\n        case '/CARD_PACK/SET-TABLE-SUCCESS':\r\n            return {...state, tableSuccess: action.tableSuccess}\r\n        case '/CARD_PACK/SET-TABLE-ERROR':\r\n            return {...state, tableError: action.tableError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//action's\r\nexport const cardPackActions = {\r\n    setPacksTotalCount: (totalCount: number) => ({type: '/CARD_PACK/PACKS-TOTAL-COUNT', totalCount} as const),\r\n    setCardDeckAC: (cardPacks: Array<CardPackType>) => ({type: '/CARD_PACK/SET_PACKS', cardPacks} as const),\r\n    setUserPack_id: (userPack_id: string) => ({type: '/CARD_PACK/SET_PACK_USER_ID', userPack_id} as const),\r\n\r\n    setSortMaxAC: (sortMax: number) => ({type: '/CARD_PACK/SET-SORT-MAX', sortMax} as const),\r\n    setSortMinAC: (sortMin: number) => ({type: '/CARD_PACK/SET-SORT-MIN', sortMin} as const),\r\n    setPacksNameAC: (searchName: string) => ({type: '/CARD_PACK/SET-PACK-NAME', searchName} as const),\r\n    setCurrentPageAC: (currentPage: number) => ({type: '/CARD_PACK/SET-CURRENT-PAGE', currentPage} as const),\r\n    setPageSizeAC: (currentPage: number, pageSize: number) => ({\r\n        type: '/CARD_PACK/SET-PAGE-SIZE',\r\n        currentPage,\r\n        pageSize\r\n    } as const),\r\n    setSortPacksAC: (sortPacks: string) => ({type: '/CARD_PACK/SET-SORT-PACKS', sortPacks} as const),\r\n    setUserIdAC: (UserId: string) => ({type: '/CARD_PACK/SET-USER-ID', UserId} as const),\r\n    setTableLoadingAC: (tableLoading: boolean) => ({type: '/CARD_PACK/SET-TABLE-LOADING', tableLoading} as const),\r\n    setTableSuccessAC: (tableSuccess: boolean) => ({type: '/CARD_PACK/SET-TABLE-SUCCESS', tableSuccess} as const),\r\n    setTableErrorAC: (tableError: string) => ({type: '/CARD_PACK/SET-TABLE-ERROR', tableError} as const),\r\n}\r\n\r\n\r\n// thunk's\r\nexport const CardPackTC = (): ThunkType =>\r\n    async (dispatch, getState) => {\r\n        const {sortMax, sortMin, packName, currentPage, pageSize, sortPacks, user_id} = getState().cardPack\r\n        dispatch(cardPackActions.setTableLoadingAC(true))\r\n        try {\r\n            const response = await packsAPI\r\n                .getCardPacks(sortMax, sortMin, packName, currentPage, pageSize, sortPacks, user_id)\r\n            if (response.error) {\r\n                dispatch(cardPackActions.setTableErrorAC(response.error));\r\n                console.log('Get Products Error!', response.error)\r\n            } else {\r\n                dispatch(cardPackActions.setCardDeckAC(response.cardPacks));\r\n                dispatch(cardPackActions.setPacksTotalCount(response.cardPacksTotalCount))\r\n                dispatch(cardPackActions.setTableSuccessAC(true))\r\n\r\n                console.log('Neko Get Products Success!', response)\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(cardPackActions.setTableErrorAC(e.response ? e.response.data.error : e.message));\r\n            console.log('Get Products Error!', {...e})\r\n        }\r\n        dispatch(cardPackActions.setTableLoadingAC(false))\r\n    }\r\n\r\nexport const addPack = (): ThunkType => async (dispatch\r\n) => {\r\n    try {\r\n        const data = await packsAPI.addPack();\r\n        dispatch(CardPackTC());\r\n        console.log(data);\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ',more details in the console');\r\n        console.log(error);\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const deletePack = (packId: string): ThunkType => async (dispatch\r\n) => {\r\n    try {\r\n        const data = await packsAPI.deletePack(packId);\r\n        dispatch(CardPackTC());\r\n        console.log(data);\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ',more details in the console');\r\n        console.log(error);\r\n        return error;\r\n    }\r\n};\r\nexport const updatePack = (packId: string): ThunkType => async (dispatch\r\n) => {\r\n    try {\r\n        const data = await packsAPI.updatePack(packId);\r\n        dispatch(CardPackTC());\r\n        console.log(data);\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ',more details in the console');\r\n        console.log(error);\r\n        return error;\r\n    }\r\n};\r\n\r\n//type's\r\nexport type CardPacksStateType = typeof CardPacksInitState;\r\nexport type CardPackActionsType = InferActionsTypes<typeof cardPackActions>\r\nexport type ThunkType = BaseThunkType<CardPackActionsType>;\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    type: string\r\n    deckCover: string;\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './TableBtn.module.css'\r\n\r\n\r\nexport type ButtonsPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { error?: boolean };\r\n\r\nconst TableBtn: React.FC<ButtonsPropsType> = React.memo((\r\n    {        ...props    }) => {\r\n    return <button className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn} {...props}/>;\r\n});\r\n\r\nexport default TableBtn;\r\n","import React from \"react\";\r\n\r\ntype handleType = {\r\n    handle: {\r\n        id: string;\r\n        value: number;\r\n        percent: number;\r\n    }\r\n    getHandleProps: (id: string) => void\r\n}\r\n\r\nexport function Handle(props: handleType) {\r\n    return (\r\n        <div\r\n            style={{\r\n                left: `${props.handle.percent}%`,\r\n                position: 'absolute',\r\n                marginLeft: -15,\r\n                marginTop: 25,\r\n                zIndex: 2,\r\n                width: 30,\r\n                height: 30,\r\n                border: 0,\r\n                textAlign: 'center',\r\n                cursor: 'pointer',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#2b446e',\r\n                color: '#2b446e',\r\n            }}\r\n            {...props.getHandleProps(props.handle.id,)}\r\n        >\r\n            <div style={{fontFamily: 'Roboto', fontSize: 12, marginTop: -20}}>\r\n                {props.handle.value}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {CustomMode, Handles, Rail, Slider} from 'react-compound-slider';\r\nimport s from './MyMultiRange.module.css';\r\nimport {Handle} from \"./Handle\";\r\n\r\n\r\ntype MultiRangeType = {\r\n    domain: number[]\r\n    step: number\r\n    mode: 1 | 2 | 3 | CustomMode | undefined\r\n    values: number[]\r\n    onChange: (value:  number[]) => void\r\n}\r\n\r\nexport const MyMultiRange = (props: MultiRangeType) => {\r\n    const {domain, step, mode, values,onChange} = props;\r\n\r\n    const OnChange = (values: readonly number[]) => {\r\n        onChange([...values])\r\n    }\r\n\r\n\r\n    return <Slider\r\n        className={s.slider}\r\n        domain={domain}\r\n        step={step}\r\n        mode={mode}\r\n        values={values}\r\n        onChange={OnChange}>\r\n\r\n\r\n        <Rail>\r\n            {({getRailProps}) => (\r\n                <div className={s.railStyle} {...getRailProps()} />\r\n            )}\r\n        </Rail>\r\n        <Handles>\r\n            {({handles, getHandleProps}) => (\r\n                <div className=\"slider-handles\">\r\n                    {handles.map(handle => (\r\n                        <Handle\r\n                            key={handle.id}\r\n                            handle={handle}\r\n                            getHandleProps={getHandleProps}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </Handles>\r\n    </Slider>\r\n}\r\n","import React from 'react';\r\nimport {MyInput} from '../myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../myComponent/myBtn/MyBtn';\r\nimport {MyMultiRange} from '../myComponent/MyMultiRange/MyMultiRange';\r\nimport style from './Search.module.css'\r\n\r\n\r\ntype SearchType = {\r\n    onSearch: () => void\r\n    //multiRange\r\n    valueMultiRAnge: number[]\r\n    domain: number[]\r\n    step: number\r\n    //input\r\n    onChange: (searchName: string) => void\r\n    onChangeMultiRange: (value: number[]) => void\r\n}\r\n\r\nexport const  Search = (props: SearchType) => {\r\n\r\n    const {onSearch, valueMultiRAnge, domain, step, onChange, onChangeMultiRange} = props;\r\n    const onInputSearch = (e: React.ChangeEvent<HTMLInputElement>) => onChange(e.currentTarget.value);\r\n\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <MyInput type={'text'} onChange={onInputSearch}\r\n                     placeholder={'title for search'}\r\n            />\r\n\r\n            <MyMultiRange\r\n                domain={domain}\r\n                step={step}\r\n                mode={2}\r\n                values={valueMultiRAnge}\r\n                onChange={onChangeMultiRange}\r\n            />\r\n            <MyBtn name={'Search'} onClick={onSearch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useCallback} from 'react';\r\nimport {Search} from './Search';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../m2-bll/store';\r\nimport {\r\n    cardPackActions,\r\n    CardPacksStateType,\r\n    CardPackTC\r\n} from '../../../fiatures/f-2_PacksTable/f-2_bll/cardPacks-reducer';\r\n\r\n\r\nexport const SearchContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {sortMin, sortMax, packName} = useSelector<AppStateType, CardPacksStateType>(state => state.cardPack)\r\n    let valueMultiRAnge = [sortMin, sortMax]\r\n\r\n    const onChangeMultiRange = useCallback((value: number[]) => {\r\n        dispatch(cardPackActions.setSortMaxAC(value[1]))\r\n        dispatch(cardPackActions.setSortMinAC(value[0]))\r\n    }, [valueMultiRAnge]);\r\n\r\n    const onInputChange = useCallback((searchName: string) => {\r\n        dispatch(cardPackActions.setPacksNameAC(searchName))\r\n    }, [packName]);\r\n\r\n    const onSearchBtn = useCallback(() => {\r\n        dispatch(CardPackTC())\r\n    },[])\r\n\r\n    return (\r\n        <Search onChange={onInputChange} step={5} domain={[0, 50]}\r\n                valueMultiRAnge={valueMultiRAnge}\r\n                onChangeMultiRange={onChangeMultiRange}\r\n                onSearch={onSearchBtn}\r\n        />\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\ntype PaginatorType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    togglePageSize: (pageNumber: number, pageSize: number) => void\r\n}\r\n// totalItemsCount -общее число запрашиваемых объектов на сервере, вообще все.\r\n// pageSize - ItemCount - размер выводимых объектов на странице, задаем сами\r\n// pagesCount -сколько у нас будет страниц, вычисляем исходя из (totalItemsCount / pageSize )\r\n// portionSize - размер количетсва страниц ( кнопок - страниц ) навигации , задаем сами\r\nexport const Paginator = (props: PaginatorType) => {\r\n    const {pageSize, totalItemsCount, currentPage, onPageChanged, portionSize = 5, togglePageSize} = props\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    // левая граница(крайняя левая страница) текущей порции ('текущей порции' -  где находимся)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    // правая граница(крайняя правая страница) текущей порции ('текущей порции' -  где находимся)\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const nameClass = (p: number) => currentPage === p ? `${styles.pageNumber}  ${styles.selectedPage}` : styles.pageNumber\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            <select value={pageSize} onChange={e => togglePageSize(currentPage, Number(e.currentTarget.value))}>\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n\r\n            {(portionNumber > 1)\r\n                ? <span>\r\n                    <button onClick={() => setPortionNumber(1)}>to start</button>\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\r\n                </span>\r\n                : ''\r\n            }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={nameClass(p)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber\r\n                ? <span>\r\n                    <button className={styles.paginator_btn}\r\n                            onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\r\n                  <button onClick={() => setPortionNumber(portionCount)}>to end</button>\r\n                </span>\r\n                : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react';\r\nimport {Paginator} from './Paginator';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../m2-bll/store';\r\nimport {cardPackActions, CardPacksStateType} from '../../../fiatures/f-2_PacksTable/f-2_bll/cardPacks-reducer';\r\n\r\n\r\nexport const PaginatorContainer = ()=> {\r\n    const dispatch = useDispatch();\r\n    const {currentPage, pageSize, cardPacksTotalCount} =\r\n        useSelector<AppStateType, CardPacksStateType>(state => state.cardPack)\r\n\r\n    const onPageChanged = useCallback((pageNumber: number) => {\r\n        dispatch(cardPackActions.setCurrentPageAC(pageNumber))\r\n    }, [currentPage]);\r\n    const togglePageSize = useCallback((pageNumber: number, pageSize: number) => {\r\n        dispatch(cardPackActions.setPageSizeAC(pageNumber, pageSize))\r\n    }, [])\r\n\r\n    \r\n\r\n    return(\r\n        <Paginator\r\n            pageSize={pageSize} totalItemsCount={cardPacksTotalCount}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={currentPage}\r\n            togglePageSize={togglePageSize}\r\n        />\r\n    )\r\n}","import React, {CSSProperties, ReactNode} from 'react';\r\nimport st from './table.module.css';\r\n\r\n\r\nexport const MyTable: React.FC<TablePropsType> = ({\r\n                                                      loading = false,\r\n                                                      title = 'table',\r\n                                                      model,\r\n                                                      data}\r\n) => {\r\n\r\n    return (\r\n        <div className={st.wrapper}>\r\n            {title}\r\n\r\n            <div className={st.header}>\r\n                {model.map((m, index) => m.title(index, loading))}\r\n            </div>\r\n\r\n            <div className={st.row}>\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div key={title + '-row-' + (dataItem._id || dataIndex)}\r\n                         className={st.inside}>\r\n                        {model.map((m: any, modelIndex: any) =>\r\n                            m.render(dataItem, modelIndex, dataIndex, loading))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport type TableModelType = {\r\n    title: (index: number, loading: boolean) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number, loading: boolean) => ReactNode;\r\n}\r\n\r\nexport type TablePropsType = {\r\n    loading?: boolean; title?: string; model: TableModelType[]; data: any;\r\n    headerStyle?: CSSProperties, tableStyle?: CSSProperties, rowsStyle?: CSSProperties, rowStyle?: CSSProperties,\r\n}\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/m2-bll/store';\r\nimport {ProfileType} from '../../f-1_autorization/f-1_dal/authAPI';\r\nimport {\r\n    addPack,\r\n    cardPackActions,\r\n    CardPacksStateType,\r\n    CardPackTC,\r\n    deletePack,\r\n    updatePack\r\n} from '../f-2_bll/cardPacks-reducer';\r\nimport {packsModel} from './PacksModel';\r\nimport {SearchContainer} from '../../../main/common/search/SearchContainer';\r\nimport {PaginatorContainer} from '../../../main/common/Paginator/PaginatorContainer';\r\nimport st from'./Packs.module.css'\r\nimport {MyTable} from '../../../main/common/table/Table';\r\n\r\n\r\nexport const PacksPage = React.memo(() => {\r\n\r\n    const {_id} = useSelector<AppStateType, ProfileType>(state => state.profile.profile);\r\n    const {currentPage, pageSize, sortPacks, user_id,cardPacks} = useSelector<AppStateType, CardPacksStateType>(state => state.cardPack)\r\n    const [myPacks, setMyPacks] = useState<boolean>(!!user_id);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setMyPacksCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(cardPackActions.setUserPack_id(myPacks ? '' : _id));\r\n        // dispatch(CardPackTC());\r\n        dispatch(CardPackTC())\r\n        setMyPacks(e.target.checked);\r\n    }, [setMyPacks, dispatch, myPacks, _id]);\r\n\r\n    const model = packsModel(\r\n        () => dispatch(addPack()),\r\n        (packId: string) => dispatch(deletePack(packId)),\r\n        (packId: string) => dispatch(updatePack(packId)),\r\n    );\r\n    useEffect(() => {\r\n        dispatch(CardPackTC())\r\n    }, [currentPage, pageSize, sortPacks, user_id])\r\n    return (\r\n        <section className={st.containerWrapper}>\r\n            <SearchContainer/>\r\n            <label>\r\n                <input\r\n                    type={'checkbox'}\r\n                    checked={myPacks}\r\n                    onChange={setMyPacksCallback}\r\n                />\r\n                my packs\r\n            </label>\r\n            <MyTable model={model} data={cardPacks} title={'CardPacks'}/>\r\n            <PaginatorContainer/>\r\n        </section>\r\n    );\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport st from './Packs.module.css';\r\nimport {CardPackType} from '../f-2_bll/cardPacks-reducer';\r\nimport {TableModelType} from '../../../main/common/table/Table';\r\nimport {MyBtn} from '../../../main/common/myComponent/myBtn/MyBtn';\r\nimport TableBtn from '../../../main/common/myComponent/BtnForTable/TableBtn';\r\n\r\n\r\nexport const packsModel = (\r\n    addPack: () => void,\r\n    deletePack: (packId: string) => void,\r\n    updatePack: (packId: string) => void,\r\n): TableModelType[] => [\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'name-title-' + index} className={st.item}>Name</div>\r\n        ),\r\n        render: (dataItem: CardPackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'name-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.name}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'cardsCount-title-' + index} className={st.item}>cardsCount</div>\r\n        ),\r\n        render: (dataItem: CardPackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'cardsCount-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.cardsCount}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'updated-title-' + index} className={st.item}>updated</div>\r\n        ),\r\n        render: (dataItem: CardPackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'updated-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.updated.slice(5, 16)}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'url-title-' + index} className={st.item}>url</div>\r\n        ),\r\n        render: (dataItem: CardPackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'url-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.deckCover}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'buttons-title-' + index} className={st.item}>\r\n                <TableBtn onClick={addPack} name={'add'}>add</TableBtn>\r\n            </div>\r\n        ),\r\n        render: (dataItem: CardPackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'buttons-cell-' + dataItem._id} className={st.item}>\r\n                <TableBtn onClick={() => deletePack(dataItem._id)} name='delete'>delete</TableBtn>\r\n                <TableBtn onClick={() => updatePack(dataItem._id)} name='update'>update</TableBtn>\r\n            </div>\r\n        )\r\n    },\r\n\r\n];","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {PNF} from '../notFound/PNF';\r\nimport {RegistrationContainer} from '../../../fiatures/f-1_autorization/f-1_ui/registration/RegistrationContainer';\r\nimport {SignIn} from '../../../fiatures/f-1_autorization/f-1_ui/signIn/SingIn';\r\nimport {ProfileContainer} from '../profile/ProfileContainer';\r\nimport {RecoveryPasswordContainer} from '../../../fiatures/f-1_autorization/f-1_ui/recoveryPassword/RecoveryPasswordContainer';\r\nimport {SetNewPasswordContainer} from '../../../fiatures/f-1_autorization/f-1_ui/setNewPassword/SetNewPasswordContainer';\r\nimport {PacksPage} from '../../../fiatures/f-2_PacksTable/f-2_ui/PacksPage';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/';\r\nexport const REGISTRATION_PATH = '/registration';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\nexport const RECOVERY_PASSWORD_PATH = '/recoveryPass';\r\nexport const SET_NEW_PASSWORD_PATH = '/new-pass/:token?';\r\nexport const PACKS_PATH = '/packs';\r\nexport const TEST_COMPONENT_PATH = '/test';\r\n\r\n\r\nexport const Routes: React.FC<any> = () => {\r\n\r\n    return <>\r\n        <Switch>\r\n            <Route exact path={SIGN_IN_PATH} component={SignIn}/>\r\n            <Route path={REGISTRATION_PATH} component={RegistrationContainer}/>\r\n            <Route path={PROFILE_PATH} component={ProfileContainer}/>\r\n            <Route path={RECOVERY_PASSWORD_PATH} component={RecoveryPasswordContainer}/>\r\n            <Route path={SET_NEW_PASSWORD_PATH} component={SetNewPasswordContainer}/>\r\n            <Route path={PACKS_PATH} component={PacksPage}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} component={PNF}/>\r\n            <Redirect from={'*'} to={PAGE_NOT_FOUND_PATH}/>\r\n        </Switch>\r\n\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    PACKS_PATH,\r\n    PAGE_NOT_FOUND_PATH,\r\n    PROFILE_PATH,\r\n    RECOVERY_PASSWORD_PATH,\r\n    REGISTRATION_PATH,\r\n    SET_NEW_PASSWORD_PATH,\r\n    SIGN_IN_PATH,\r\n    TEST_COMPONENT_PATH\r\n} from '../routes/Routes';\r\nimport style from './Header.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../m2-bll/store';\r\n\r\nexport type HeaderType = {}\r\n\r\nexport const Header = (props: HeaderType) => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n    return <section className={style.header}>\r\n        <nav className={style.header_nav}>\r\n            {!isAuth && <NavLink to={SIGN_IN_PATH} exact activeClassName={style.header_nav__link}>Sign In</NavLink>}\r\n            {/*<NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>*/}\r\n            {/*<NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>*/}\r\n            {/*<NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>*/}\r\n            {isAuth && <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>}\r\n            {/*<NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>*/}\r\n            <NavLink to={PACKS_PATH} activeClassName={style.header_nav__link}>Packs</NavLink>\r\n        </nav>\r\n    </section>;\r\n};","export default __webpack_public_path__ + \"static/media/loader.37f92040.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/preloader/loader.svg\";\r\n\r\nconst style = {\r\n    width: '60px',\r\n    height:'60px',\r\n    display:'block',\r\n    margin: '0 auto'\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\" style={style}/>\r\n    )\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI} from '../../fiatures/f-1_autorization/f-1_dal/authAPI';\r\nimport {authActions, authActionsType} from '../../fiatures/f-1_autorization/f-1_bll/auth-reducer';\r\nimport {profileActions, ProfileActionsType} from './profile-reducer';\r\n\r\n\r\nconst initialState = {\r\n    isInitializing: false,\r\n    initializeError: '',\r\n}\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case '/APP/SET-INITIALIZED':\r\n            return {...state, isInitializing: action.isInitializing}\r\n        case '/INITIALIZE/SET-ERROR':\r\n            return {...state, initializeError: action.initialiseError}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const appActions = {\r\n    setInitializing: (isInitializing: boolean) => ({type: '/APP/SET-INITIALIZED', isInitializing} as const),\r\n    setInitializeError: (initialiseError: string) => ({type: '/INITIALIZE/SET-ERROR', initialiseError} as const),\r\n}\r\n// thunks\r\nexport const AuthMe = (): ThunkType => async (dispatch) => {\r\n        try {\r\n            let response = await authAPI.authMe()\r\n            dispatch(profileActions.setProfileAC(response))\r\n            dispatch(authActions.setIsAuthAC(true))\r\n        } catch (err) {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err + ' ... О-оу зовите бородатых сеньоров!!');\r\n            dispatch(appActions.setInitializeError(error))\r\n        }\r\n        dispatch(appActions.setInitializing(true))\r\n    }\r\n\r\n\r\n\r\n\r\nexport type AppInitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<AppActionsType>\r\nexport type AppActionsType = InferActionsTypes<typeof appActions>\r\n    | ProfileActionsType\r\n    | authActionsType\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './m1-ui/header/Header';\r\nimport {Routes} from './m1-ui/routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Preloader} from './common/Preloader/Preloader';\r\nimport {AppStateType} from './m2-bll/store';\r\nimport {AppInitialStateType, AuthMe} from './m2-bll/app-reducer';\r\n\r\nfunction App() {\r\n    const {isInitializing} = useSelector<AppStateType, AppInitialStateType>(state => state.app)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(AuthMe())\r\n    }, [dispatch])\r\n\r\n    if (!isInitializing) return <Preloader/>\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {authReducer} from '../../fiatures/f-1_autorization/f-1_bll/auth-reducer';\r\nimport {cardPacksReducer} from '../../fiatures/f-2_PacksTable/f-2_bll/cardPacks-reducer';\r\n\r\n\r\n//actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n//thunk's type\r\nexport type BaseThunkType<A extends Action = Action, R = any> = ThunkAction<R, AppStateType, unknown, A>\r\n//state type\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst reducers = combineReducers({\r\n    auth:authReducer,\r\n    profile:profileReducer,\r\n    app: appReducer,\r\n    cardPack:cardPacksReducer,\r\n    //newPassword: setNewPasswordReducer\r\n});\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './main/m2-bll/store';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n                <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}