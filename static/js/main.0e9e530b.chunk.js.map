{"version":3,"sources":["main/m1-ui/notFound/PNF.tsx","main/assets/img/ava_default.jpg","main/m1-ui/profile/ProfileInfo.tsx","main/common/myComponent/myBtn/MyBtn.tsx","main/m1-ui/profile/Profile.tsx","main/m3-dal/api.ts","features/f-1-all/f-1_autorization/f-1_dal/authAPI.ts","main/m2-bll/profile-reducer.ts","main/m2-bll/app-reducer.ts","features/f-1-all/f-1_autorization/f-1_bll/auth-reducer.ts","main/m1-ui/profile/ProfileContainer.tsx","main/common/myComponent/myInput/MyInput.tsx","features/f-1-all/f-1_autorization/f-1_ui/signIn/SignInForm.tsx","main/common/myComponent/MySnackBar/MySnackBar.tsx","features/f-1-all/f-1_autorization/f-1_ui/signIn/SingIn.tsx","features/f-1-all/f-1_autorization/f-1_ui/registration/Registration.tsx","features/f-1-all/f-1_autorization/f-1_ui/registration/RegistrationContainer.tsx","features/f-1-all/f-1_autorization/f-1_ui/recoveryPassword/RecoveryPassword.tsx","features/f-1-all/f-1_autorization/f-1_ui/recoveryPassword/RecoveryPasswordContainer.tsx","features/f-1-all/f-1_autorization/f-1_ui/setNewPassword/SetNewPassword.tsx","features/f-1-all/f-1_autorization/f-1_ui/setNewPassword/SetNewPasswordContainer.tsx","features/f-1-all/f-2_PacksTable/f-2_dal/packsAPI.ts","features/f-1-all/f-2_PacksTable/f-2_bll/packs-reducer.ts","main/common/myComponent/BtnForTable/TableBtn.tsx","main/common/myComponent/link/LinkNya.tsx","main/common/table/Table.tsx","main/common/Paginator/Paginator.tsx","features/f-1-all/f-2_PacksTable/f-2_ui/packsPagination/PacksPagination.tsx","main/common/myComponent/MyMultiRange/Handle.tsx","main/common/myComponent/MyMultiRange/MyMultiRange.tsx","main/common/search/Search.tsx","features/f-1-all/f-2_PacksTable/f-2_ui/packsSearch/PacksSearch.tsx","main/m1-ui/common/myComponent/BtnForTable/TableBtn.tsx","main/common/modal/MyModal.tsx","features/f-2-modal/ModalContainer.tsx","features/f-1-all/f-2_PacksTable/f-2_ui/PacksPage.tsx","features/f-1-all/f-2_PacksTable/f-2_ui/PacksModel.tsx","features/f-1-all/f-3_CardsTable/c2-bll/CardTypes.ts","features/f-1-all/f-3_CardsTable/c3-dal/CardsAPI.ts","features/f-1-all/f-3_CardsTable/c2-bll/cards-reducer.ts","features/f-3-learn/LearnPage.tsx","main/m1-ui/common/myComponent/MyTable/TableNya.tsx","features/f-1-all/f-3_CardsTable/c1-ui/cardsPagination/CardsPagination.tsx","features/f-1-all/f-3_CardsTable/c1-ui/cardsSearch/CardsSearch.tsx","features/f-1-all/f-3_CardsTable/c1-ui/CardsPage.tsx","features/f-1-all/f-3_CardsTable/c1-ui/CardsModel.tsx","main/m1-ui/routes/Routes.tsx","main/m1-ui/header/Header.tsx","main/assets/preloader/loader.svg","main/common/Preloader/Preloader.tsx","main/App.tsx","reportWebVitals.ts","main/m2-bll/store.ts","index.tsx","features/f-1-all/f-2_PacksTable/f-2_ui/Packs.module.css","features/f-1-all/f-3_CardsTable/c1-ui/Cards.module.css","features/f-1-all/f-1_autorization/f-1_ui/signIn/SingInForm.module.css","main/m1-ui/header/Header.module.css","features/f-1-all/f-1_autorization/f-1_ui/registration/Registration.module.css","main/common/modal/MyModal.module.css","features/f-1-all/f-1_autorization/f-1_ui/setNewPassword/SetNewPassword.module.css","main/common/Paginator/Paginator.module.css","main/common/table/table.module.css","main/m1-ui/common/myComponent/MyTable/MyTable.module.css","main/m1-ui/notFound/pnf.module.css","main/common/myComponent/myBtn/MyBtn.module.css","main/common/myComponent/myInput/MyInput.module.css","main/common/myComponent/MySnackBar/MySnackBar.module.css","main/common/myComponent/BtnForTable/TableBtn.module.css","main/m1-ui/common/myComponent/BtnForTable/TableBtn.module.css","main/common/myComponent/MyMultiRange/MyMultiRange.module.css","main/common/search/Search.module.css","main/common/myComponent/link/LinkNya.module.css"],"names":["PNF","className","style","pnf","pnf_error","pnf_descr","ProfileInfo","props","profile","src","avatar","ava_default","alt","name","email","publicCardPacksCount","MyBtn","error","styles","redBtn","btn","onClick","disabled","type","Profile","onLogOut","instance","axios","create","baseURL","withCredentials","authAPI","password","post","then","res","data","r","delete","recoveryPassObj","setNewPassData","initialState","profileActions","isInitializing","initializeError","serverError","appActions","initialiseError","AuthInitialState","isAuth","loading","registerSuccess","recoveryPassSuccess","newPassSuccess","authActions","setIsAuthAC","setRegisterSuccess","setRecoveryPassSuccess","setNewPassSuccess","setLoading","SingInTC","dispatch","a","response","message","console","log","ProfileContainer","useSelector","state","auth","useDispatch","to","SIGN_IN_PATH","MyInput","inputBase","red","onBlur","value","onChange","onKeyPress","placeholder","SignInForm","errors","formSubmit","title","errorEmail","errorPassword","errorConfirm","confirm","disableErrorField","st","has_error","click","footer","REGISTRATION_PATH","activeClassName","header_nav__link","RECOVERY_PASSWORD_PATH","MySnackBar","React","memo","errorServer","useEffect","setTimeout","closeSnackBar","MySnackBar_text","MySnackBar_btn","SignIn","app","formik","useFormik","initialValues","rememberMe","validate","values","test","length","onSubmit","formikHelpers","action","setFieldError","JSON","stringify","PROFILE_PATH","wrapper","handleSubmit","handleChange","Registration","repeatPass","errorRepeatPass","disBtn","reg","reg_title","reg_form","reg_form__error","RegistrationContainer","addedUser","RecoveryPassword","recPass","recPass_title","recPass_description","recPass_form","RecoveryPasswordContainer","RecoveryPassObj","from","recoveryPassTC","SetNewPassword","newPass","newPass_title","newPass_descr","SetNewPasswordContainer","token","useParams","resetPasswordToken","setNewPassTC","packsAPI","getCardPacks","max","min","packName","currentPage","pageSize","sortPacks","user_id","get","addPack","cardsPack","updatePack","packId","put","_id","deckCover","deletePack","PacksInitState","cardPacks","cardPacksTotalCount","sortMax","sortMin","tableLoading","tableSuccess","tableError","packActions","totalCount","userPack_id","searchName","PackTC","getState","packs","TableBtn","LinkNya","info","s","link","MyTable","model","header","map","m","index","row","dataItem","dataIndex","inside","modelIndex","render","Paginator","totalItemsCount","onPageChanged","portionSize","togglePageSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","nameClass","p","pageNumber","selectedPage","paginator","e","Number","currentTarget","filter","paginator_btn","PacksPagination","useCallback","Handle","left","handle","percent","position","marginLeft","marginTop","zIndex","width","height","border","textAlign","cursor","borderRadius","backgroundColor","color","getHandleProps","id","fontFamily","fontSize","MyMultiRange","domain","step","mode","slider","getRailProps","railStyle","handles","Search","onSearch","valueMultiRAnge","onChangeMultiRange","onShowAll","inputValue","search","search_btn","PacksSearch","onInputChange","onSearchBtn","MyModal","onCancel","children","buttonName","itemName","modalOverlay","modalWindow","modalHeader","modalTitle","modalBody","modalFooter","ModalContainer","isOpen","closeModal","changePack","updateAnswer","updateItemName","setItemName","updateItem","setUpdateItem","PacksPage","myPacks","setMyPacks","setIsOpen","setTitle","updateDeck","setUpdateDeck","setPackId","flagChangeModal","setFlagChangeModal","setMyPacksCallback","checked","addModalPack","openDeleteModal","openUpdateModalPack","item","cardsCount","updated","slice","CARDS_PATH","LEARN_PATH","packsModel","currentId","currentPackName","containerWrapper","CardsInitState","cards","cardsTotalCount","cardQuestion","maxGrade","minGrade","packUserId","sortCards","CardsAPI","getCards","cardsPack_id","addCard","cardAnswer","card","question","grade","random","questionImg","answer","updateCard","answerImg","comments","deleteCard","gradeCard","card_id","CardsActions","success","getCardsTC","getSortCard","sum","reduce","acc","rand","newSum","grades","LearnPage","showAnswer","setShowAnswer","firstVisit","setFirstVisit","setCard","onNextQuestion","el","CardsPagination","CardsSearch","CardsPage","store","cardId","setCardId","cardFilter","toFixed","answerVideo","questionVideo","cardsModel","openUpdateModal","pack_id","updateCardTC","addCardTC","deleteCardTC","PAGE_NOT_FOUND_PATH","PACKS_PATH","Routes","exact","path","component","Header","header_nav","display","margin","Preloader","preloader","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e9e530b.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './pnf.module.css'\r\n\r\n\r\n\r\nexport const PNF:React.FC = ()=> {\r\n\r\n    return <section className={style.pnf}>\r\n        <div className={style.pnf_error}> 404 </div>\r\n        <p className={style.pnf_descr}>Sorry, Page not Found...</p>\r\n    </section>\r\n}","export default __webpack_public_path__ + \"static/media/ava_default.17ad3620.jpg\";","import {ProfileType} from '../../../features/f-1-all/f-1_autorization/f-1_dal/authAPI';\r\nimport ava_default from '../../assets/img/ava_default.jpg';\r\nimport React from 'react';\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n}\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n    const {profile} = props;\r\n    return (\r\n        <div>\r\n            <div><img src={profile.avatar ? profile.avatar : ava_default} alt=\"\"/></div>\r\n            <div>Name : {profile.name}</div>\r\n            <div>Email : {profile.email}</div>\r\n            <div>Public Card Packs Count : {profile.publicCardPacksCount}</div>\r\n            <nav>\r\n                {/*<NavLink to={PACKS_PAGE} activeClassName={style.header_nav__link}>PacksPage</NavLink>*/}\r\n            </nav>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: \"button\" | \"reset\" | \"submit\"\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n    className?: string\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn} ${props.className}` : `${styles.btn} ${props.className}`}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n                type={props.type}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {ProfileType} from '../../../features/f-1-all/f-1_autorization/f-1_dal/authAPI';\r\nimport style from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\n\r\ntype ProfType = {\r\n    profile: ProfileType\r\n    onLogOut: ()=> void\r\n}\r\n\r\nexport const Profile: React.FC<ProfType> = (props) => {\r\n    const {profile,onLogOut} = props;\r\n    return <section>\r\n        <div className={style.profile}>\r\n            <ProfileInfo profile={profile}/>\r\n            <MyBtn name={'LogOut'} onClick={onLogOut}/>\r\n        </div>\r\n    </section>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    //локально:\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    // gh-pages:\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n","import {instance} from '../../../../main/m3-dal/api';\r\nimport {RecoveryPassObjType} from '../f-1_ui/recoveryPassword/RecoveryPasswordContainer';\r\nimport {setNewPassDatatype} from '../f-1_ui/setNewPassword/SetNewPasswordContainer';\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseReg>('auth/register', {email, password})\r\n            .then(res => res.data)\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ProfileType>('auth/login', data)\r\n    },\r\n    authMe() {\r\n        return instance.post<ProfileType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResType>('auth/me')\r\n            .then(r => r.data)\r\n    },\r\n    recoveryPass(recoveryPassObj:RecoveryPassObjType ){\r\n        return instance.post<LogoutResType>('auth/forgot', {...recoveryPassObj})\r\n    },\r\n    newPass(setNewPassData: setNewPassDatatype){\r\n        return instance.post('auth/set-new-password', {...setNewPassData})\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\ntype ResponseReg = {\r\n    addedUser: ProfileType\r\n    error: string\r\n}\r\ntype LogoutResType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    token: string\r\n}\r\n\r\n\r\n\r\n","import {ProfileType} from '../../features/f-1-all/f-1_autorization/f-1_dal/authAPI';\r\nimport {InferActionsTypes} from './store';\r\n\r\n\r\nconst initialState = {\r\n    profile: {} as ProfileType,\r\n}\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ProfileActionsType):ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case '/PROFILE/SET-PROFILE': return { ...state, profile: {...action.profile}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//actions\r\nexport const profileActions = {\r\n  setProfileAC: (profile: ProfileType) => ({type: '/PROFILE/SET-PROFILE', profile} as const),\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState;\r\nexport type ProfileActionsType = InferActionsTypes<typeof profileActions>\r\n\r\n","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI} from '../../features/f-1-all/f-1_autorization/f-1_dal/authAPI';\r\nimport {authActions, authActionsType} from '../../features/f-1-all/f-1_autorization/f-1_bll/auth-reducer';\r\nimport {profileActions, ProfileActionsType} from './profile-reducer';\r\n\r\n\r\nconst initialState = {\r\n    isInitializing: false,\r\n    initializeError: '',\r\n    serverError: '',\r\n}\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case '/APP/SET-INITIALIZED':\r\n            return {...state, isInitializing: action.isInitializing}\r\n        case '/INITIALIZE/SET-ERROR':\r\n            return {...state, initializeError: action.initialiseError}\r\n        case '/SERVER-ERROR/SET-ERROR':\r\n            return {...state, serverError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const appActions = {\r\n    setInitializing: (isInitializing: boolean) => ({type: '/APP/SET-INITIALIZED', isInitializing} as const),\r\n    setInitializeError: (initialiseError: string) => ({type: '/INITIALIZE/SET-ERROR', initialiseError} as const),\r\n    setServerError: (error: string) => ({type: '/SERVER-ERROR/SET-ERROR', error} as const),\r\n}\r\n// thunks\r\nexport const AuthMe = (): ThunkType => async (dispatch) => {\r\n    try {\r\n        let response = await authAPI.authMe()\r\n        dispatch(profileActions.setProfileAC(response))\r\n        dispatch(authActions.setIsAuthAC(true))\r\n    } catch (err) {\r\n        const error = err.response\r\n            ? err.response.data.error\r\n            : (err + ' ... О-оу зовите бородатых сеньоров!!');\r\n        dispatch(appActions.setInitializeError(error))\r\n    }\r\n    dispatch(appActions.setInitializing(true))\r\n}\r\n\r\n\r\nexport type AppInitialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<AppActionsType>\r\nexport type AppActionsType = InferActionsTypes<typeof appActions>\r\n    | ProfileActionsType\r\n    | authActionsType\r\n\r\n\r\n","import {BaseThunkType, InferActionsTypes} from '../../../../main/m2-bll/store';\r\nimport {authAPI, LoginParamsType} from '../f-1_dal/authAPI';\r\nimport {profileActions, ProfileActionsType} from '../../../../main/m2-bll/profile-reducer';\r\nimport {RecoveryPassObjType} from '../f-1_ui/recoveryPassword/RecoveryPasswordContainer';\r\nimport {setNewPassDatatype} from '../f-1_ui/setNewPassword/SetNewPasswordContainer';\r\nimport {appActions, AppActionsType} from '../../../../main/m2-bll/app-reducer';\r\n\r\n\r\nexport const AuthInitialState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    registerSuccess: false,\r\n    recoveryPassSuccess: false,\r\n    newPassSuccess: false,\r\n};\r\nexport const authReducer = (state: AuthInitialStateType = AuthInitialState, action: authActionsType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case 'singIn/SET-IS-AUTH':\r\n            return {...state, isAuth: action.isAuth}\r\n\r\n        case '/REG/SET-REGISTER-SUCCESS':\r\n            return {...state, registerSuccess: true}\r\n        case '/REG/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n        case '/REC/SET-RECOVERY-PASS-SUCCESS':\r\n            return {...state, recoveryPassSuccess: true}\r\n        case '/NEW-PASS/SET-NEW-PASS-SUCCESS':\r\n            return {...state, newPassSuccess: true}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action's\r\nexport const authActions = {\r\n    setIsAuthAC: (isAuth: boolean) => ({type: 'singIn/SET-IS-AUTH', isAuth} as const),\r\n    setRegisterSuccess: () => ({type: '/REG/SET-REGISTER-SUCCESS'} as const),\r\n    setRecoveryPassSuccess: () => ({type: '/REC/SET-RECOVERY-PASS-SUCCESS'} as const),\r\n    setNewPassSuccess: () => ({type: '/NEW-PASS/SET-NEW-PASS-SUCCESS'} as const),\r\n    setLoading: (loading: boolean) => ({type: '/REG/SET-LOADING', loading} as const),\r\n};\r\n\r\n//thunk's\r\nexport const SingInTC = (data: LoginParamsType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            const response = await authAPI.login(data);\r\n            dispatch(authActions.setIsAuthAC(true));\r\n            dispatch(profileActions.setProfileAC(response.data))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ',more details on the console');\r\n            dispatch(authActions.setIsAuthAC(false));\r\n            dispatch(appActions.setServerError(error))\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    };\r\nexport const registerTC = (email: string, password: string): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(authActions.setLoading(true))\r\n        try {\r\n            let response = await authAPI.register(email, password)\r\n            if (response.addedUser) dispatch(authActions.setRegisterSuccess())\r\n        } catch (err) {\r\n            dispatch(appActions.setServerError(err.response.data.error))\r\n        }\r\n        dispatch(authActions.setLoading(false))\r\n    };\r\n\r\nexport const logoutTC = (): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.logout()\r\n            dispatch(authActions.setIsAuthAC(false))\r\n        } catch (err) {\r\n            dispatch(appActions.setServerError(err.response.data.error))\r\n        }\r\n    };\r\nexport const recoveryPassTC = (RecoveryPassObj: RecoveryPassObjType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await authAPI.recoveryPass(RecoveryPassObj)\r\n            dispatch(authActions.setRecoveryPassSuccess())\r\n        } catch (err) {\r\n            dispatch(appActions.setServerError(err.response.data.error))\r\n        }\r\n    };\r\nexport const setNewPassTC = (setNewPassData: setNewPassDatatype): ThunkType => async (dispatch) => {\r\n    try {\r\n        await authAPI.newPass(setNewPassData)\r\n        dispatch(authActions.setNewPassSuccess())\r\n    } catch (err) {\r\n        dispatch(appActions.setServerError(err.response.data.error))\r\n    }\r\n}\r\n\r\n//type's\r\nexport type AuthInitialStateType = typeof AuthInitialState;\r\nexport type ThunkType = BaseThunkType<authActionsType | AppActionsType>;\r\nexport type authActionsType = InferActionsTypes<typeof authActions>\r\n    | ProfileActionsType;\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../routes/Routes';\r\nimport {Profile} from './Profile';\r\nimport {ProfileType} from '../../../features/f-1-all/f-1_autorization/f-1_dal/authAPI';\r\nimport {logoutTC} from '../../../features/f-1-all/f-1_autorization/f-1_bll/auth-reducer';\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profile.profile);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOut = () => dispatch(logoutTC())\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>\r\n\r\n    return <section>\r\n        <Profile\r\n            profile={profile}\r\n            onLogOut={onLogOut}\r\n        />\r\n    </section>\r\n}","import React from 'react';\r\nimport styles from './MyInput.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value?: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: (e: React.FocusEvent<any>) => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onKeyPress={props.onKeyPress}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport st from './SingInForm.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from '../../../../../main/m1-ui/header/Header.module.css';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {MyInput} from '../../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport {RECOVERY_PASSWORD_PATH, REGISTRATION_PATH} from '../../../../../main/m1-ui/routes/Routes';\r\nimport {MySnackBar} from '../../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\ntype PropsType = {\r\n    email: string\r\n    password: string\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    title: string\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n}\r\n\r\n\r\nexport const SignInForm: React.FC<PropsType> = (props) => {\r\n\r\n    const {email, password, errors, onChange, formSubmit, title} = props;\r\n    const {email: errorEmail, password: errorPassword, confirm: errorConfirm} = errors;\r\n    const disableErrorField = errorEmail || errorPassword;\r\n\r\n    return <div>\r\n        <div className={st.title}>{title}</div>\r\n        <MyInput type='email'\r\n                     onChange={onChange}\r\n                     value={email}\r\n                     placeholder={'email'}\r\n                     name={'email'}\r\n                     error={!!errorEmail}\r\n        /> {errorEmail ?\r\n        <div className={st.has_error}>{errorEmail}</div> : null}\r\n\r\n        {errorConfirm ? <div className={st.has_error}>{errorConfirm}</div> : null}\r\n\r\n        <MyInput type='password'\r\n                     onChange={onChange}\r\n                     value={password}\r\n                     placeholder={'password'}\r\n                     error={!!errorPassword} name={'password'}\r\n        />\r\n        {errorPassword ?\r\n            <div className={st.has_error}>{errorPassword}</div> : null}\r\n\r\n        <div className={st.click}>\r\n            <div>\r\n                <input type='checkbox' onChange={onChange}/>RememberMe\r\n            </div>\r\n            {!disableErrorField ? <MyBtn name='Login'\r\n                                             type=\"submit\"\r\n                                             onClick={formSubmit}\r\n                                             disabled={!!disableErrorField}\r\n                                             error={!!disableErrorField}\r\n            /> : null}\r\n        </div>\r\n        <div className={st.footer}>\r\n            <nav>\r\n                <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>SingUp</NavLink>\r\n            </nav>\r\n            <nav>\r\n                <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Forgot?</NavLink>\r\n            </nav>\r\n        </div>\r\n    </div>;\r\n};","import React, {useEffect} from 'react';\r\nimport style from './MySnackBar.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {appActions} from '../../../m2-bll/app-reducer';\r\n\r\n\r\ntype SnackBarType = {\r\n    errorServer: string\r\n}\r\n\r\nexport const MySnackBar = React.memo((props: SnackBarType) => {\r\n    const dispatch = useDispatch();\r\n    const {errorServer} = props;\r\n    useEffect( ()=> {\r\n        setTimeout( ()=> {\r\n            closeSnackBar()\r\n        }, 4000)\r\n    },[])\r\n\r\n    const closeSnackBar = () => {\r\n        dispatch(appActions.setServerError(''))\r\n    }\r\n\r\n    return (\r\n            <div className={style.MySnackBar}>\r\n                <p className={style.MySnackBar_text}>{errorServer}</p>\r\n                <button className={style.MySnackBar_btn} onClick={closeSnackBar}> + </button>\r\n            </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useFormik} from 'formik';\r\nimport st from './SingInForm.module.css';\r\nimport {SignInForm} from './SignInForm';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SingInTC} from '../../f-1_bll/auth-reducer';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {PROFILE_PATH} from '../../../../../main/m1-ui/routes/Routes';\r\nimport {MySnackBar} from '../../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\n\r\nexport const SignIn: React.FC<any> = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n    const serverError = useSelector<AppStateType, string>(state => state.app.serverError);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            confirm: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 8 characters';\r\n            }\r\n            if (values.confirm) {\r\n                errors.confirm = 'Incorrect email or password';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: async (values, formikHelpers) => {\r\n            const action = await dispatch(SingInTC(values));\r\n            formikHelpers.setFieldError('confirm', 'Incorrect email or password');\r\n            console.log(JSON.stringify(action) + 'novoe');\r\n        },\r\n    });\r\n\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n\r\n    return <div className={st.wrapper}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <SignInForm\r\n                title={'LOGIN FORM'}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                email={formik.values.email}\r\n                password={formik.values.password}\r\n                errors={formik.errors}\r\n\r\n            />\r\n        </form>\r\n        {serverError && <MySnackBar errorServer={serverError}/>}\r\n    </div>;\r\n};\r\n\r\n// export type FormikErrorType = {\r\n//     email?: string\r\n//     password?: string\r\n//     // rememberMe?: boolean\r\n//     confirm?: string\r\n// }\r\n","import React from 'react';\r\nimport {MyInput} from '../../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport style from './Registration.module.css';\r\nimport {FormikErrorType} from './RegistrationContainer';\r\nimport {MySnackBar} from '../../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\n\r\ntype RegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPass: string\r\n    serverError: string\r\n    errors: FormikErrorType\r\n    formSubmit: () => void\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationType> = (props) => {\r\n\r\n    const {email, password, repeatPass, serverError, errors, onChange, formSubmit} = props;\r\n    const {email: errorEmail, password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = errorEmail || errorPassword || errorRepeatPass;\r\n\r\n\r\n    return <section>\r\n        <main className={style.reg}>\r\n            <div className={style.reg_title}> Registration form</div>\r\n            <form className={style.reg_form}>\r\n                <div>\r\n                    <span>Enter your email:</span>\r\n                    <MyInput error={!!errorEmail} type='email'\r\n                             value={email} onChange={onChange}\r\n                             placeholder='email...' name='email'/>\r\n                    {errorEmail ?\r\n                        <div className={style.reg_form__error}>{errorEmail}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span>Enter your password:</span>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword ?\r\n                        <div className={style.reg_form__error}>{errors.password}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <span> Repeat your password:</span>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass ?\r\n                        <div className={style.reg_form__error}>{errors.repeatPass}</div> : null}\r\n                </div>\r\n\r\n                <div>\r\n                    <MyBtn error={!!disBtn} disabled={!!disBtn} name={'Register'} onClick={formSubmit}/>\r\n                </div>\r\n\r\n            </form>\r\n        </main>\r\n        {serverError && <MySnackBar errorServer={serverError}/>}\r\n    </section>\r\n}\r\n\r\n\r\n// type RegistrationType = {\r\n//     email: string\r\n//     password: string\r\n//     repeatPass: string\r\n//     error: string\r\n//     errors: FormikErrorType\r\n//     loading: boolean\r\n//     formSubmit: () => void\r\n//     onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n//     // errorEmail: boolean | string | undefined\r\n//     // errorPassword: boolean | string | undefined\r\n//     // errorRepeatPass: boolean | string | undefined\r\n//     // setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n//     // setRepeatPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n// }\r\n\r\n\r\n//old method\r\n// export const Registration: React.FC<RegistrationType> = (props) => {\r\n//     const {email, password, repeatPass, error,errors, loading,onChange, /*setEmail, setPassword, setRepeatPassword,*/ formSubmit} = props;\r\n//\r\n//     if (loading) return <Preloader/>\r\n//\r\n//     return <section>\r\n//         <main className={style.reg}>\r\n//             <div className={style.reg_title}> Registration form</div>\r\n//             <form className={style.reg_form}>\r\n//                 <div>\r\n//                     <span>Enter your email:</span>\r\n//                     <MyInput error={!!error} type='email'\r\n//                              value={email} onChange={onChange}\r\n//                              placeholder='email...' name='email'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Enter your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={password} onChange={onChange}\r\n//                              placeholder='min 8 symbols..' name='password'/>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span>Repeat your password:</span>\r\n//                     <MyInput error={!!error} type='password'\r\n//                              value={repeatPass} onChange={onChange}\r\n//                              placeholder='min 8 symbols...' name='repeatPassword'/>\r\n//                 </div>\r\n//                 {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n//                 <div>\r\n//                     <MyBtn disabled={loading} name={'Login'} onClick={formSubmit}/>\r\n//                 </div>\r\n//             </form>\r\n//         </main>\r\n//     </section>\r\n// }","import React from 'react';\r\nimport {Registration} from './Registration';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../../../../../main/m1-ui/routes/Routes';\r\nimport {useFormik} from 'formik';\r\nimport {AuthInitialStateType, registerTC} from '../../f-1_bll/auth-reducer';\r\n\r\nexport const RegistrationContainer = () => {\r\n    const {isAuth, registerSuccess} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const serverError = useSelector<AppStateType, string>(state => state.app.serverError);\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(registerTC(values.email, values.password));\r\n        },\r\n    });\r\n\r\n    if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>;\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return (\r\n        <Registration\r\n            email={formik.values.email}\r\n            password={formik.values.password}\r\n            repeatPass={formik.values.repeatPass}\r\n            serverError={serverError}\r\n            errors={formik.errors}\r\n            onChange={formik.handleChange}\r\n            formSubmit={formik.handleSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPass?: string\r\n    confirm?: string\r\n\r\n\r\n}\r\n\r\n//old method\r\n\r\n// export type eInput = React.ChangeEvent<HTMLInputElement>\r\n//\r\n// export const RegistrationContainer: React.FC = () => {\r\n//\r\n//     const [email, setEmailVal] = useState<string>('')\r\n//     const [password, setPasswordVal] = useState('')\r\n//     const [repeatPass, setRepeatPassVal] = useState('')\r\n//\r\n//      const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n//     const dispatch = useDispatch()\r\n//\r\n//     const setEmail = useCallback((e: eInput) => {\r\n//         setEmailVal(e.currentTarget.value)\r\n//     }, [setEmailVal])\r\n//     const setPassword = useCallback((e: eInput) => {\r\n//         setPasswordVal(e.currentTarget.value)\r\n//     }, [setPasswordVal])\r\n//     const setRepeatPassword = useCallback((e: eInput) => {\r\n//         setRepeatPassVal(e.currentTarget.value)\r\n//     }, [setRepeatPassVal])\r\n//\r\n//     const formSubmit = useCallback(() => {\r\n//         if (!email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)) {\r\n//             dispatch(signInActions.setError('Uncorrected email'))\r\n//         } else if (password.length < 8) {\r\n//             dispatch(signInActions.setError('Password must be more than 8 characters...'))\r\n//         } else if (password !== repeatPass) {\r\n//             dispatch(signInActions.setError('Invalid second password'))\r\n//         } else if (email && password && repeatPass) {\r\n//             dispatch(registerTC(email, password))\r\n//         }\r\n//     }, [password, repeatPass, email, dispatch])\r\n//\r\n//     if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n//     return <section>\r\n//         <Registration\r\n//             email={email}\r\n//             password={password}\r\n//             repeatPass={repeatPass}\r\n//             error={error}\r\n//             loading={loading}\r\n//             setEmail={setEmail}\r\n//             setPassword={setPassword}\r\n//             setRepeatPassword={setRepeatPassword}\r\n//             formSubmit={formSubmit}\r\n//         />\r\n//     </section>\r\n// }","import React from 'react';\r\nimport style from './RecoveryPass.module.css'\r\nimport {MyInput} from '../../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport {FormikErrorType} from '../registration/RegistrationContainer';\r\nimport {MySnackBar} from '../../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\ntype RecPasstype = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: FormikErrorType\r\n    email: string\r\n    serverError: string\r\n    recoveryPassSuccess: boolean\r\n}\r\n\r\nexport const RecoveryPassword: React.FC<RecPasstype> = (props) => {\r\n\r\n    const {onChange, formSubmit, errors, email, serverError, recoveryPassSuccess} = props;\r\n    const {email: errorEmail} = errors;\r\n    return <section>\r\n        <div className={style.recPass}>\r\n            <h2 className={style.recPass_title}> RecoveryPassword </h2>\r\n            <p className={style.recPass_description}>\r\n                Для восстановления пароля введите ваш email,\r\n                на него придет письмо с дальнейшими инструкциями.\r\n            </p>\r\n            <form className={style.recPass_form}>\r\n                <MyInput type='email' onChange={onChange} name={'email'}\r\n                         value={email} placeholder='your email...' error={!!errorEmail}/>\r\n                {errorEmail ?\r\n                    <div>{errorEmail}</div> : null}\r\n                {recoveryPassSuccess ?\r\n                    <div> Перейдите на почтовый ящик и следуйте дальнейщим инструкциям... </div> : null}\r\n\r\n                <MyBtn name='Send' onClick={formSubmit}\r\n                       error={!!errorEmail} disabled={!!errorEmail} type={'submit'}/>\r\n            </form>\r\n        </div>\r\n        {serverError && <MySnackBar errorServer={serverError}/>}\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {AuthInitialStateType, recoveryPassTC} from '../../f-1_bll/auth-reducer';\r\nimport {useFormik} from 'formik';\r\nimport {RecoveryPassword} from './RecoveryPassword';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PROFILE_PATH} from '../../../../../main/m1-ui/routes/Routes';\r\n\r\n\r\nexport const RecoveryPasswordContainer: React.FC = () => {\r\n\r\n    const {recoveryPassSuccess,isAuth} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth)\r\n    const serverError = useSelector<AppStateType, string>(state => state.app.serverError);\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: RecoveryPassErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            const RecoveryPassObj: RecoveryPassObjType = {\r\n                email: values.email,\r\n                from: 'kirillpuzanov@mail.ru',\r\n                message: `<div style=\"background-color: lime; padding: 15px\">\r\n                        password recovery link: \r\n\t                    <a href='http://localhost:3000/#/new-pass/$token$'>link</a>\r\n\t                    </div>`\r\n            }\r\n            dispatch(recoveryPassTC(RecoveryPassObj))\r\n            console.log(RecoveryPassObj)\r\n        },\r\n    })\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return <section>\r\n        <div>\r\n            <RecoveryPassword\r\n                email={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n                errors={formik.errors}\r\n                serverError={serverError}\r\n                recoveryPassSuccess={recoveryPassSuccess}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\nexport type RecoveryPassErrorType = {\r\n    email?: string\r\n}\r\nexport type RecoveryPassObjType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './SetNewPassword.module.css'\r\nimport {MyInput} from '../../../../../main/common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../../../../main/common/myComponent/myBtn/MyBtn';\r\nimport {SetNewPassErrorType} from './SetNewPasswordContainer';\r\n\r\ntype NewPassType = {\r\n    onChange: (e: string | React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n    errors: SetNewPassErrorType\r\n    password: string\r\n    repeatPass: string\r\n}\r\n\r\n\r\nexport const SetNewPassword: React.FC<NewPassType> = (props) => {\r\n    const {onChange, formSubmit, errors, password, repeatPass} = props;\r\n    const {password: errorPassword, repeatPass: errorRepeatPass} = errors;\r\n    const disBtn = !!errorPassword || !!errorRepeatPass;\r\n\r\n    return <section>\r\n        <main className={style.newPass}>\r\n            <form>\r\n                <h2 className={style.newPass_title}> Смена пароля </h2>\r\n                <div>\r\n                    <p className={style.newPass_descr}> Введите ваш новый пароль.. </p>\r\n                    <MyInput error={!!errorPassword} type='password'\r\n                             value={password} onChange={onChange}\r\n                             placeholder='min 8 symbols..' name='password'/>\r\n                    {errorPassword\r\n                        ? <div className={style.reg_form__error}>{errors.password}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <p>Повторите ваш новый пароль..</p>\r\n                    <MyInput error={!!errorRepeatPass} type='password'\r\n                             value={repeatPass} onChange={onChange}\r\n                             placeholder='min 8 symbols...' name='repeatPass'/>\r\n                    {errorRepeatPass\r\n                        ? <div className={style.reg_form__error}>{errors.repeatPass}</div>\r\n                        : null}\r\n                </div>\r\n                <div>\r\n                    <MyBtn name='Send' onClick={formSubmit}\r\n                           error={disBtn} disabled={disBtn} type={'submit'}/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </section>\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport {SetNewPassword} from './SetNewPassword';\r\nimport {AuthInitialStateType, setNewPassTC} from '../../f-1_bll/auth-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PROFILE_PATH, SIGN_IN_PATH} from '../../../../../main/m1-ui/routes/Routes';\r\nimport {MySnackBar} from '../../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\n\r\nexport const SetNewPasswordContainer: React.FC = () => {\r\n\r\n    const {newPassSuccess, isAuth} = useSelector<AppStateType, AuthInitialStateType>(state => state.auth);\r\n    const serverError = useSelector<AppStateType, string>(state => state.app.serverError);\r\n    const dispatch = useDispatch();\r\n    const {token} = useParams<tokenType>();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: '',\r\n            repeatPass: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: SetNewPassErrorType = {};\r\n            if (values.password.length < 8) {\r\n                errors.password = 'Password must be more than 8 characters...';\r\n            } else if (values.password !== values.repeatPass) {\r\n                errors.repeatPass = 'Passwords do not match';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            const setNewPassData: setNewPassDatatype = {\r\n                password: values.password,\r\n                resetPasswordToken: token\r\n            }\r\n            dispatch(setNewPassTC(setNewPassData))\r\n            console.log(token)\r\n        },\r\n    })\r\n\r\n    if (newPassSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n    return <section>\r\n        <div>\r\n            <SetNewPassword\r\n                password={formik.values.password}\r\n                repeatPass={formik.values.repeatPass}\r\n                errors={formik.errors}\r\n                onChange={formik.handleChange}\r\n                formSubmit={formik.handleSubmit}\r\n            />\r\n            {serverError && <MySnackBar errorServer={serverError}/>}\r\n        </div>\r\n    </section>\r\n}\r\nexport type setNewPassDatatype = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type SetNewPassErrorType = {\r\n    password?: string,\r\n    repeatPass?: string,\r\n}\r\ntype tokenType = { token: string }\r\n\r\n","import {instance} from '../../../../main/m3-dal/api';\r\nimport {PackType} from '../f-2_bll/packs-reducer';\r\n\r\n\r\nexport const packsAPI = {\r\n\r\n    getCardPacks: async (\r\n        max: number,\r\n        min: number,\r\n        packName?: string,\r\n        currentPage?: number,\r\n        pageSize?: number,\r\n        sortPacks?: string,\r\n        user_id?: string,) => {\r\n        const res = await instance.get<ResponsePack>(\r\n            'cards/pack?'\r\n            + (packName ? `packName=${packName}&` : '')\r\n            + (sortPacks ? `sortPacks=${sortPacks}&` : '')\r\n            + (max ? `max=${max}&min=${min}&` : '')\r\n            + (currentPage ? `page=${currentPage}&` : '')\r\n            + (pageSize ? `pageCount=${pageSize}&` : '')\r\n            + (user_id && `user_id=${user_id}&`)\r\n        );\r\n        return res.data;\r\n    },\r\n    addPack: async (name?: string) => {\r\n        const response = await instance.post<any>('/cards/pack', {\r\n            cardsPack: {\r\n                name: name,\r\n            }\r\n        });\r\n        return response.data;\r\n    },\r\n    updatePack: async (packId: string, packName?: string) => {\r\n        const response = await instance.put<any>('/cards/pack', {\r\n            cardsPack: {\r\n                _id: packId,\r\n                name: packName,\r\n                deckCover: ''\r\n            }\r\n        });\r\n        return response.data;\r\n    },\r\n    deletePack: async (packId: string) => {\r\n        const response = await instance.delete<any>(`/cards/pack?id=${packId}`);\r\n        return response.data;\r\n    },\r\n\r\n};\r\n\r\nexport type ResponsePack = {\r\n    cardPacks: PackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n    error: string\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from '../../../../main/m2-bll/store';\r\nimport {packsAPI} from '../f-2_dal/packsAPI';\r\nimport {authActionsType} from '../../f-1_autorization/f-1_bll/auth-reducer';\r\nimport {appActions, AppActionsType} from '../../../../main/m2-bll/app-reducer';\r\n\r\n\r\nexport const PacksInitState = {\r\n    cardPacks: [] as PackType[],\r\n    cardPacksTotalCount: 0,\r\n\r\n    sortMax: 100,\r\n    sortMin: 0,\r\n    packName: '',\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    sortPacks: '0updated',\r\n    user_id: '',\r\n\r\n    tableLoading: false,\r\n    tableSuccess: false,\r\n    tableError: '',\r\n};\r\n\r\nexport const packsReducer = (state: PacksStateType = PacksInitState, action: PackActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case '/PACK/PACKS-TOTAL-COUNT':\r\n            return {...state, cardPacksTotalCount: action.totalCount};\r\n        case '/PACK/SET_PACKS':\r\n            return {...state, cardPacks: action.cardPacks};\r\n        case '/PACK/SET_PACK_USER_ID':\r\n            return {...state, user_id: action.userPack_id,};\r\n\r\n        case '/PACK/SET-SORT-MAX':\r\n            return {...state, sortMax: action.sortMax};\r\n        case '/PACK/SET-SORT-MIN':\r\n            return {...state, sortMin: action.sortMin};\r\n        case '/PACK/SET-PACK-NAME':\r\n            return {...state, packName: action.searchName};\r\n        case '/PACK/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage};\r\n        case '/PACK/SET-PAGE-SIZE':\r\n            return {...state, currentPage: action.currentPage, pageSize: action.pageSize};\r\n        case '/PACK/SET-SORT-PACKS':\r\n            return {...state, sortPacks: action.sortPacks};\r\n\r\n        case '/PACK/SET-TABLE-LOADING':\r\n            return {...state, tableLoading: action.tableLoading};\r\n        case '/PACK/SET-TABLE-SUCCESS':\r\n            return {...state, tableSuccess: action.tableSuccess};\r\n        // case  '/PACK/ADD-NEW-PACK':\r\n        //     return {...state, packName: action.packName};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action's\r\nexport const packActions = {\r\n    setPacksTotalCount: (totalCount: number) => ({type: '/PACK/PACKS-TOTAL-COUNT', totalCount} as const),\r\n    setPacksAC: (cardPacks: Array<PackType>) => ({type: '/PACK/SET_PACKS', cardPacks} as const),\r\n    setUserPack_id: (userPack_id: string) => ({type: '/PACK/SET_PACK_USER_ID', userPack_id} as const),\r\n\r\n    setSortMaxAC: (sortMax: number) => ({type: '/PACK/SET-SORT-MAX', sortMax} as const),\r\n    setSortMinAC: (sortMin: number) => ({type: '/PACK/SET-SORT-MIN', sortMin} as const),\r\n    setPacksNameAC: (searchName: string) => ({type: '/PACK/SET-PACK-NAME', searchName} as const),\r\n    setCurrentPageAC: (currentPage: number) => ({type: '/PACK/SET-CURRENT-PAGE', currentPage} as const),\r\n    setPageSizeAC: (currentPage: number, pageSize: number) => ({\r\n        type: '/PACK/SET-PAGE-SIZE',\r\n        currentPage,\r\n        pageSize\r\n    } as const),\r\n    setSortPacksAC: (sortPacks: string) => ({type: '/PACK/SET-SORT-PACKS', sortPacks} as const),\r\n    setTableLoadingAC: (tableLoading: boolean) => ({type: '/PACK/SET-TABLE-LOADING', tableLoading} as const),\r\n    setTableSuccessAC: (tableSuccess: boolean) => ({type: '/PACK/SET-TABLE-SUCCESS', tableSuccess} as const),\r\n    setAddNewPackAC: (packName: string) => ({type: '/PACK/ADD-NEW-PACK', packName} as const)\r\n};\r\n\r\n\r\n// thunk's\r\nexport const PackTC = (): ThunkType =>\r\n    async (dispatch, getState) => {\r\n        const {sortMax, sortMin, packName, currentPage, pageSize, sortPacks, user_id} = getState().packs;\r\n        dispatch(packActions.setTableLoadingAC(true));\r\n        try {\r\n            const response = await packsAPI\r\n                .getCardPacks(sortMax, sortMin, packName, currentPage, pageSize, sortPacks, user_id);\r\n            dispatch(packActions.setPacksAC(response.cardPacks));\r\n            dispatch(packActions.setPacksTotalCount(response.cardPacksTotalCount));\r\n            dispatch(packActions.setTableSuccessAC(true));\r\n            console.log('Get packs Success!', response);\r\n        } catch (e) {\r\n            dispatch(appActions.setServerError(e.response.data.error));\r\n        }\r\n        dispatch(packActions.setTableLoadingAC(false));\r\n    };\r\n\r\nexport const addPack = (packName?: string): ThunkType => async (dispatch\r\n) => {\r\n    try {\r\n        await packsAPI.addPack(packName);\r\n        // packActions.setAddNewPackAC(packName)\r\n        dispatch(PackTC());\r\n    } catch (e) {\r\n        dispatch(appActions.setServerError(e.response.data.error));\r\n    }\r\n};\r\n\r\nexport const deletePack = (packId: string): ThunkType => async (dispatch\r\n) => {\r\n    try {\r\n        await packsAPI.deletePack(packId);\r\n        dispatch(PackTC());\r\n    } catch (e) {\r\n        dispatch(appActions.setServerError(e.response.data.error));\r\n    }\r\n};\r\nexport const updatePack = (packId: string, packName?: string): ThunkType => async (dispatch\r\n) => {\r\n    try {\r\n        await packsAPI.updatePack(packId, packName);\r\n        dispatch(PackTC());\r\n    } catch (e) {\r\n        dispatch(appActions.setServerError(e.response.data.error));\r\n    }\r\n};\r\n\r\n//type's\r\nexport type PacksStateType = typeof PacksInitState;\r\nexport type PackActionsType = InferActionsTypes<typeof packActions> | authActionsType;\r\nexport type ThunkType = BaseThunkType<PackActionsType | AppActionsType>;\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    type: string\r\n    deckCover: string;\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './TableBtn.module.css'\r\n\r\n\r\nexport type ButtonsPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { error?: boolean };\r\n\r\nconst TableBtn: React.FC<ButtonsPropsType> = React.memo((\r\n    {        ...props    }) => {\r\n    return <button className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn} {...props}/>;\r\n});\r\n\r\nexport default TableBtn;\r\n","import React from 'react';\r\nimport {NavLink, NavLinkProps} from 'react-router-dom';\r\nimport s from './LinkNya.module.css';\r\n\r\nexport type LinkNyaPropsType = NavLinkProps & { info?: string };\r\n\r\nconst LinkNya: React.FC<LinkNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    return <NavLink className={s.link} {...props}/>;\r\n});\r\n\r\nexport default LinkNya;\r\n","import React, {CSSProperties, ReactNode} from 'react';\r\nimport st from './table.module.css';\r\n\r\n\r\nexport const MyTable: React.FC<TablePropsType> = ({\r\n                                                      loading = false,\r\n                                                      title = 'table',\r\n                                                      model,\r\n                                                      data}\r\n) => {\r\n\r\n    return (\r\n        <div className={st.wrapper}>\r\n            {title}\r\n\r\n            <div className={st.header}>\r\n                {model.map((m, index) => m.title(index, loading))}\r\n            </div>\r\n\r\n            <div className={st.row}>\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div key={title + '-row-' + (dataItem._id || dataIndex)}\r\n                         className={st.inside}>\r\n                        {model.map((m, modelIndex) =>\r\n                            m.render(dataItem, modelIndex, dataIndex, loading))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport type TableModelType = {\r\n    title: (index: number, loading: boolean) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number, loading: boolean) => ReactNode;\r\n}\r\n\r\nexport type TablePropsType = {\r\n    loading?: boolean; title?: string; model: TableModelType[]; data: any;\r\n    headerStyle?: CSSProperties, tableStyle?: CSSProperties, rowsStyle?: CSSProperties, rowStyle?: CSSProperties,\r\n}\r\n","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\ntype PaginatorType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    togglePageSize: (pageNumber: number, pageSize: number) => void\r\n}\r\n// totalItemsCount -общее число запрашиваемых объектов на сервере, вообще все.\r\n// pageSize - ItemCount - размер выводимых объектов на странице, задаем сами\r\n// pagesCount -сколько у нас будет страниц, вычисляем исходя из (totalItemsCount / pageSize )\r\n// portionSize - размер количетсва страниц ( кнопок - страниц ) навигации , задаем сами\r\nexport const Paginator = (props: PaginatorType) => {\r\n    const {pageSize, totalItemsCount, currentPage, onPageChanged, portionSize = 5, togglePageSize} = props\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    // левая граница(крайняя левая страница) текущей порции ('текущей порции' -  где находимся)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    // правая граница(крайняя правая страница) текущей порции ('текущей порции' -  где находимся)\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const nameClass = (p: number) => currentPage === p ? `${styles.pageNumber}  ${styles.selectedPage}` : styles.pageNumber\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            <select value={pageSize} onChange={e => togglePageSize(currentPage, Number(e.currentTarget.value))}>\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n\r\n            {(portionNumber > 1)\r\n                ? <span>\r\n                    <button onClick={() => setPortionNumber(1)}>to start</button>\r\n                    <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\r\n                </span>\r\n                : ''\r\n            }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={nameClass(p)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber\r\n                ? <span>\r\n                    <button className={styles.paginator_btn}\r\n                            onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\r\n                  <button onClick={() => setPortionNumber(portionCount)}>to end</button>\r\n                </span>\r\n                : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {packActions, PacksStateType} from '../../f-2_bll/packs-reducer';\r\nimport {Paginator} from '../../../../../main/common/Paginator/Paginator';\r\n\r\n\r\nexport const PacksPagination = ()=> {\r\n    const dispatch = useDispatch();\r\n    const {currentPage, pageSize, cardPacksTotalCount} =\r\n        useSelector<AppStateType, PacksStateType>(state => state.packs)\r\n\r\n    const onPageChanged = useCallback((pageNumber: number) => {\r\n        dispatch(packActions.setCurrentPageAC(pageNumber))\r\n    }, [currentPage]);\r\n    const togglePageSize = useCallback((pageNumber: number, pageSize: number) => {\r\n        dispatch(packActions.setPageSizeAC(pageNumber, pageSize))\r\n    }, [])\r\n\r\n    \r\n\r\n    return(\r\n        <Paginator\r\n            pageSize={pageSize} totalItemsCount={cardPacksTotalCount}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={currentPage}\r\n            togglePageSize={togglePageSize}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype handleType = {\r\n    handle: {\r\n        id: string;\r\n        value: number;\r\n        percent: number;\r\n    }\r\n    getHandleProps: (id: string) => void\r\n}\r\n\r\nexport function Handle(props: handleType) {\r\n    return (\r\n        <div\r\n            style={{\r\n                left: `${props.handle.percent}%`,\r\n                position: 'absolute',\r\n                marginLeft: -15,\r\n                marginTop: 25,\r\n                zIndex: 2,\r\n                width: 30,\r\n                height: 30,\r\n                border: 0,\r\n                textAlign: 'center',\r\n                cursor: 'pointer',\r\n                borderRadius: '50%',\r\n                backgroundColor: '#2b446e',\r\n                color: '#2b446e',\r\n            }}\r\n            {...props.getHandleProps(props.handle.id,)}\r\n        >\r\n            <div style={{fontFamily: 'Roboto', fontSize: 12, marginTop: -20}}>\r\n                {props.handle.value}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {CustomMode, Handles, Rail, Slider} from 'react-compound-slider';\r\nimport s from './MyMultiRange.module.css';\r\nimport {Handle} from \"./Handle\";\r\n\r\n\r\ntype MultiRangeType = {\r\n    domain: number[]\r\n    step: number\r\n    mode: 1 | 2 | 3 | CustomMode | undefined\r\n    values: number[]\r\n    onChange: (value:  number[]) => void\r\n}\r\n\r\nexport const MyMultiRange = (props: MultiRangeType) => {\r\n    const {domain, step, mode, values,onChange} = props;\r\n\r\n    const OnChange = (values: readonly number[]) => {\r\n        onChange([...values])\r\n    }\r\n\r\n\r\n    return <Slider\r\n        className={s.slider}\r\n        domain={domain}\r\n        step={step}\r\n        mode={mode}\r\n        values={values}\r\n        onChange={OnChange}>\r\n\r\n\r\n        <Rail>\r\n            {({getRailProps}) => (\r\n                <div className={s.railStyle} {...getRailProps()} />\r\n            )}\r\n        </Rail>\r\n        <Handles>\r\n            {({handles, getHandleProps}) => (\r\n                <div className=\"slider-handles\">\r\n                    {handles.map(handle => (\r\n                        <Handle\r\n                            key={handle.id}\r\n                            handle={handle}\r\n                            getHandleProps={getHandleProps}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </Handles>\r\n    </Slider>\r\n}\r\n","import React from 'react';\r\nimport {MyInput} from '../myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../myComponent/myBtn/MyBtn';\r\nimport {MyMultiRange} from '../myComponent/MyMultiRange/MyMultiRange';\r\nimport style from './Search.module.css'\r\n\r\n\r\ntype SearchType = {\r\n    onSearch: () => void\r\n    onShowAll: ()=> void\r\n    //multiRange\r\n    valueMultiRAnge: number[]\r\n    domain: number[]\r\n    step: number\r\n    //input\r\n    onChange: (searchName: string) => void\r\n    onChangeMultiRange: (value: number[]) => void\r\n    inputValue: string\r\n}\r\n\r\nexport const  Search = (props: SearchType) => {\r\n\r\n    const {onSearch, valueMultiRAnge, domain, step, onChange, onChangeMultiRange,onShowAll,inputValue} = props;\r\n    const onInputSearch = (e: React.ChangeEvent<HTMLInputElement>) => onChange(e.currentTarget.value);\r\n\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <MyInput type={'text'} onChange={onInputSearch}\r\n                     placeholder={'title for search'} value={inputValue}\r\n            />\r\n\r\n            <MyMultiRange\r\n                domain={domain}\r\n                step={step}\r\n                mode={2}\r\n                values={valueMultiRAnge}\r\n                onChange={onChangeMultiRange}\r\n            />\r\n            <div  className={style.search_btn}>\r\n                <MyBtn  name={'Search'} onClick={onSearch}/>\r\n                <MyBtn  name={'Show All'} onClick={onShowAll}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {packActions, PacksStateType, PackTC} from '../../f-2_bll/packs-reducer';\r\nimport {Search} from '../../../../../main/common/search/Search';\r\n\r\n\r\n\r\n\r\nexport const PacksSearch = () => {\r\n    const dispatch = useDispatch();\r\n    const {sortMin, sortMax,packName} = useSelector<AppStateType,PacksStateType>(state => state.packs)\r\n    let valueMultiRAnge = [sortMin, sortMax]\r\n\r\n    const onChangeMultiRange = useCallback((value: number[]) => {\r\n        dispatch(packActions.setSortMaxAC(value[1]))\r\n        dispatch(packActions.setSortMinAC(value[0]))\r\n    }, [dispatch]);\r\n\r\n    const onInputChange = useCallback((searchName: string) => {\r\n        dispatch(packActions.setPacksNameAC(searchName))\r\n    }, [dispatch]);\r\n\r\n    const onSearchBtn = useCallback(() => {\r\n        dispatch(PackTC())\r\n    },[dispatch])\r\n    const onShowAll = useCallback( ()=> {\r\n        dispatch(packActions.setSortMaxAC(100))\r\n        dispatch(packActions.setSortMinAC(0))\r\n        dispatch(packActions.setPacksNameAC(''))\r\n        dispatch(PackTC())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <Search onChange={onInputChange} inputValue={packName} step={2} domain={[0, 100]}\r\n                valueMultiRAnge={valueMultiRAnge}\r\n                onChangeMultiRange={onChangeMultiRange}\r\n                onSearch={onSearchBtn} onShowAll={onShowAll}\r\n        />\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './TableBtn.module.css';\r\n\r\n\r\nexport type ButtonsPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { error?: boolean };\r\n\r\nconst TableBtn: React.FC<ButtonsPropsType> = React.memo((\r\n    {...props}) => {\r\n    return <button className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn} {...props}/>;\r\n});\r\n\r\nexport default TableBtn;\r\n","import React from 'react';\r\nimport st from './MyModal.module.css';\r\nimport TableBtn from '../../m1-ui/common/myComponent/BtnForTable/TableBtn';\r\n\r\n\r\ntype ModalType = {\r\n    title: string\r\n    onCancel: () => void,\r\n    onSubmit: () => void\r\n    itemName: string | undefined\r\n    buttonName: string\r\n}\r\n\r\nexport const MyModal: React.FC<ModalType> = ({\r\n                                                 title, onCancel, onSubmit, children, itemName, buttonName\r\n                                             }) => {\r\n\r\n    return (\r\n        <>\r\n            <div onClick={onCancel} className={st.modalOverlay}></div>\r\n            <div className={st.modalWindow}>\r\n                <div className={st.modalHeader}>\r\n                    <div className={st.modalTitle}>{title}</div>\r\n                </div>\r\n                <div className={st.modalBody}>\r\n                    {children}\r\n                </div>\r\n                <div className={st.modalFooter}>\r\n                    {/*{buttonName !== 'DELETE' ?*/}\r\n                    {/*    <TableBtn onClick={onSubmit} >{buttonName}</TableBtn> :*/}\r\n                    {/*    <TableBtn onClick={onSubmit}>{buttonName}</TableBtn>}*/}\r\n                    <TableBtn onClick={onSubmit}>{buttonName}</TableBtn>\r\n                    <TableBtn onClick={onCancel}>Cancel</TableBtn>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {MyInput} from '../../main/common/myComponent/myInput/MyInput';\r\nimport {MyModal} from '../../main/common/modal/MyModal';\r\n\r\ntype ContainerType = {\r\n    isOpen: boolean\r\n    closeModal: () => void\r\n    title: string\r\n    changePack: (value?: string, value2?: string) => void\r\n    buttonName: string\r\n    updateAnswer?: string\r\n    updateItemName?: string\r\n}\r\nconst ModalContainer: React.FC<ContainerType> = ({\r\n                                                     isOpen,\r\n                                                     closeModal,\r\n                                                     title,\r\n                                                     changePack,\r\n                                                     buttonName,\r\n                                                     updateAnswer,\r\n                                                     updateItemName\r\n\r\n                                                 }) => {\r\n\r\n    const [itemName, setItemName] = useState<string | undefined>('');\r\n    const [updateItem, setUpdateItem] = useState<string | undefined>('');\r\n\r\n    useEffect(() => {\r\n        setUpdateItem(updateAnswer);\r\n    }, [updateAnswer]);\r\n    useEffect(() => {\r\n        return () => {\r\n            setUpdateItem('');\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        setItemName(updateItemName);\r\n    }, [updateItemName]);\r\n    useEffect(() => {\r\n        return () => {\r\n            setItemName('');\r\n        };\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = () => {\r\n        changePack(itemName, updateItem);\r\n        setItemName('');\r\n        setUpdateItem('');\r\n        closeModal();\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        closeModal();\r\n    };\r\n    const inputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setItemName(e.currentTarget.value);\r\n    };\r\n    const updateInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUpdateItem(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isOpen &&\r\n            <MyModal title={title}\r\n                     onCancel={handleCancel}\r\n                     onSubmit={handleSubmit}\r\n                     itemName={itemName}\r\n                     buttonName={buttonName}\r\n            >\r\n                {buttonName !== 'DELETE' ?\r\n                    <div>\r\n                        <MyInput onChange={inputChange} type={'text'} value={itemName} placeholder='Enter Title..'/>\r\n                        {/*{itemName.length < 2 ? 'The length of the deck name must be at least 2 characters' : null}*/}\r\n                        <div>\r\n                            <MyInput onChange={updateInputChange} type={'text'} value={updateItem}\r\n                                     placeholder='Enter Title..'/>\r\n                            {/*{updateItem.length < 2 ? 'The length of the deck name must be at least 2 characters' : null}*/}\r\n                        </div>\r\n                    </div> : null}\r\n            </MyModal>\r\n            }\r\n        </>\r\n    );\r\n};\r\nexport default ModalContainer;\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../main/m2-bll/store';\r\nimport {ProfileType} from '../../f-1_autorization/f-1_dal/authAPI';\r\nimport {addPack, deletePack, packActions, PacksStateType, PackTC, updatePack} from '../f-2_bll/packs-reducer';\r\nimport {packsModel} from './PacksModel';\r\nimport st from './Packs.module.css';\r\nimport {MyTable} from '../../../../main/common/table/Table';\r\nimport {PacksPagination} from './packsPagination/PacksPagination';\r\nimport {PacksSearch} from './packsSearch/PacksSearch';\r\nimport {MySnackBar} from '../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\nimport ModalContainer from '../../../f-2-modal/ModalContainer';\r\n\r\n\r\nexport const PacksPage = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n    const {_id} = useSelector<AppStateType, ProfileType>(state => state.profile.profile);\r\n    const {\r\n        currentPage,\r\n        pageSize,\r\n        sortPacks,\r\n        cardPacks,\r\n        user_id\r\n    } = useSelector<AppStateType, PacksStateType>(state => state.packs);\r\n    const serverError = useSelector<AppStateType, string>(state => state.app.serverError);\r\n    const [myPacks, setMyPacks] = useState<boolean>(!!user_id);\r\n    //Opens modal windows\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    // Set modal title\r\n    const [title, setTitle] = useState('');\r\n    // set right callback to modal (ternary expression)\r\n    const [updateDeck, setUpdateDeck] = useState(true);\r\n    //provide pack id for modal component\r\n    const [packId, setPackId] = useState('');\r\n    //delete or change modal\r\n    const [flagChangeModal, setFlagChangeModal] = useState(true);\r\n\r\n\r\n    //these funcs open modals\r\n    const openAddModalPack = () => {\r\n        setFlagChangeModal(true);\r\n        setTitle('It is time to create a new deck');\r\n        setUpdateDeck(false);\r\n        setIsOpen(true);\r\n\r\n    };\r\n\r\n    const openDeleteModal = (currentId: string, currentPackName: string) => {\r\n        setPackId(currentId);\r\n        setFlagChangeModal(false);\r\n        setTitle('Do you want to delete ' + currentPackName + ' deck?');\r\n        setIsOpen(true);\r\n\r\n    };\r\n\r\n    const openUpdateModalPack = (currentId: string, currentPackName: string) => {\r\n        setPackId(currentId);\r\n        setFlagChangeModal(true);\r\n        setUpdateDeck(true);\r\n        setTitle('Change name ' + currentPackName + ' on new one!');\r\n        setIsOpen(true);\r\n\r\n    };\r\n    const confirmDeletePack = () => {\r\n        dispatch(deletePack(packId));\r\n    };\r\n\r\n\r\n    const addModalPack = (packName?: string) => {\r\n        dispatch(addPack(packName));\r\n    };\r\n    const updateModalPack = (packName?: string) => {\r\n        debugger\r\n        dispatch(updatePack(packId, packName));\r\n    };\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const setMyPacksCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyPacks(e.currentTarget.checked);\r\n        dispatch(packActions.setUserPack_id(myPacks ? '' : _id));\r\n        dispatch(PackTC());\r\n    }, [_id, dispatch, myPacks]);\r\n\r\n    const model = packsModel(\r\n        () => openAddModalPack(),\r\n        (currentId, currentPackName) => openDeleteModal(currentId, currentPackName),\r\n        (currentId, currentPackName) => openUpdateModalPack(currentId, currentPackName),\r\n    );\r\n    useEffect(() => {\r\n        dispatch(PackTC());\r\n    }, [dispatch, currentPage, pageSize, sortPacks]);\r\n    return (<>\r\n            {flagChangeModal ?\r\n                <ModalContainer title={title} closeModal={closeModal} isOpen={isOpen}\r\n                                changePack={updateDeck ? updateModalPack : addModalPack}\r\n                                buttonName={updateDeck ? 'UPDATE' : 'ADD'}\r\n                />\r\n                :\r\n                <ModalContainer title={title} closeModal={closeModal}\r\n                                changePack={confirmDeletePack} isOpen={isOpen}\r\n                                buttonName={'DELETE'}\r\n\r\n                />\r\n            }\r\n\r\n\r\n            <section className={st.containerWrapper}>\r\n                <PacksSearch/>\r\n                <label>\r\n                    <input\r\n                        type={'checkbox'}\r\n                        checked={myPacks}\r\n                        onChange={setMyPacksCallback}\r\n                    />\r\n                    my packs\r\n                </label>\r\n                <MyTable model={model} data={cardPacks} title={'CardPacks'}/>\r\n                <PacksPagination/>\r\n                {serverError && <MySnackBar errorServer={serverError}/>}\r\n            </section>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport st from './Packs.module.css';\r\nimport {PackType} from '../f-2_bll/packs-reducer';\r\nimport {TableModelType} from '../../../../main/common/table/Table';\r\nimport TableBtn from '../../../../main/common/myComponent/BtnForTable/TableBtn';\r\nimport LinkNya from '../../../../main/common/myComponent/link/LinkNya';\r\nimport {CARDS_PATH, LEARN_PATH} from '../../../../main/m1-ui/routes/Routes';\r\n\r\n\r\nexport const packsModel = (\r\n    addModalPack: () => void,\r\n    openDeleteModal: (packId: string, packName: string) => void,\r\n    openUpdateModalPack: (packId: string, packName: string) => void\r\n): TableModelType[] =>\r\n\r\n    [\r\n        {\r\n            title: (index) => (\r\n                <div key={'name-title-' + index} className={st.item}>Name</div>\r\n            ),\r\n            render: (dataItem: PackType) => (\r\n                <div key={'name-cell-' + dataItem._id} className={st.item}>\r\n                    {dataItem.name}\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: (index) => (\r\n                <div key={'cardsCount-title-' + index} className={st.item}>cardsCount</div>\r\n            ),\r\n            render: (dataItem: PackType) => (\r\n                <div key={'cardsCount-cell-' + dataItem._id} className={st.item}>\r\n                    {dataItem.cardsCount}\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: (index) => (\r\n                <div key={'updated-title-' + index} className={st.item}>updated</div>\r\n            ),\r\n            render: (dataItem: PackType) => (\r\n                <div key={'updated-cell-' + dataItem._id} className={st.item}>\r\n                    {dataItem.updated.slice(5, 16)}\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: (index) => (\r\n                <div key={'url-title-' + index} className={st.item}>url</div>\r\n            ),\r\n            render: (dataItem: PackType) => (\r\n                <div key={'url-cell-' + dataItem._id} className={st.item}>\r\n                    {dataItem.deckCover}\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: (index) => (\r\n                <div key={'buttons-title-' + index} className={st.item}>\r\n                    <TableBtn onClick={() => {\r\n                        addModalPack();\r\n                    }} name={'add'}>add</TableBtn>\r\n                </div>\r\n            ),\r\n\r\n\r\n            render: (dataItem: PackType) => (\r\n\r\n                <div key={'buttons-cell-' + dataItem._id} className={st.item}>\r\n                    <TableBtn onClick={() => openDeleteModal(dataItem._id, dataItem.name)}\r\n                              name='delete'>delete</TableBtn>\r\n                    <TableBtn onClick={() => {\r\n                        openUpdateModalPack(dataItem._id, dataItem.name);\r\n                    }} name='update'>update</TableBtn>\r\n                    <LinkNya to={CARDS_PATH + '/' + dataItem._id}>cards</LinkNya>\r\n                    <LinkNya to={LEARN_PATH + '/' + dataItem._id}>learn</LinkNya>\r\n                </div>\r\n            )\r\n        },\r\n\r\n    ];\r\n","export type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n    user_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    questionImg: string;\r\n    answerImg: string;\r\n    answerVideo: string;\r\n    questionVideo: string;\r\n\r\n    comments: string;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\nexport type CardsStateType = typeof CardsInitState;\r\n\r\nexport const CardsInitState = {\r\n    cards: [] as CardType[],\r\n    cardsTotalCount: 0,\r\n\r\n    cardQuestion:'',\r\n    maxGrade: 5,\r\n    minGrade: 0,\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    packUserId: '',\r\n    sortCards: '0grade',\r\n\r\n    tableLoading: false,\r\n    tableSuccess: false,\r\n};\r\n","import {instance} from '../../../../main/m3-dal/api';\r\nimport {CardType} from '../c2-bll/CardTypes';\r\n\r\n\r\nexport const CardsAPI = {\r\n    getCards: async (cardsPack_id: string,\r\n                     cardQuestion?: string,\r\n                     maxGrade?: number,\r\n                     minGrade?: number,\r\n                     sortCards?: string,\r\n                     currentPage?: number,\r\n                     pageSize?: number) => {\r\n        const response = await instance.get<GetCardDataType>(`/cards/card?cardsPack_id=${cardsPack_id}&`\r\n            + (cardQuestion ? `cardQuestion=${cardQuestion}&` : '')\r\n            + (maxGrade ? `max=${maxGrade}&min=${minGrade}&` : '')\r\n            + (sortCards ? `sortCards= ${sortCards}&` : '')\r\n            + (currentPage ? `page=${currentPage}&` : '')\r\n            + (pageSize ? `pageCount=${pageSize}&` : '')\r\n        );\r\n        return response.data;\r\n    },\r\n    addCard: async (cardsPack_id: string, cardQuestion?: string, cardAnswer?: string) => {\r\n        const response = await instance.post<any>('/cards/card', {\r\n            card: {\r\n                cardsPack_id,\r\n                question: cardQuestion,\r\n                grade: Math.random() * 5,\r\n                questionImg: 'some img',\r\n                answer: cardAnswer\r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n    updateCard: async (id: string, cardQuestion?: string, cardAnswer?: string) => {\r\n        const response = await instance.put<any>('/cards/card', {\r\n            card: {\r\n                _id: id,\r\n                question: cardQuestion,\r\n                answerImg: 'some answer img',\r\n                comments: 'new com',\r\n                answer: cardAnswer\r\n            }\r\n        });\r\n        return response.data;\r\n    },\r\n    deleteCard: async (id: string) => {\r\n        const response = await instance.delete<any>(`/cards/card?&id=${id}`);\r\n        return response.data;\r\n    },\r\n    gradeCard: async (grade: number, card_id: string) => {\r\n        const response = await instance.put<ResponseGradeType>('cards/grade', {grade, card_id});\r\n        return response.data;\r\n    },\r\n};\r\n\r\n\r\ntype ResponseGradeType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}\r\nexport type GetCardDataType = {\r\n    cards: CardType[];\r\n    error: string;\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n","import {BaseThunkType, InferActionsTypes} from '../../../../main/m2-bll/store';\r\nimport {CardsInitState, CardsStateType, CardType} from './CardTypes';\r\nimport {CardsAPI} from '../c3-dal/CardsAPI';\r\nimport {authActionsType} from '../../f-1_autorization/f-1_bll/auth-reducer';\r\nimport {appActions, AppActionsType} from '../../../../main/m2-bll/app-reducer';\r\n\r\n\r\nexport const cardsReducer = (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n    switch (action.type) {\r\n        case '/CARDS/SET_CARDS':\r\n            return {...state, cards: action.cards};\r\n        case '/CARDS/CARDS-TOTAL-COUNT':\r\n            return {...state, cardsTotalCount: action.totalCount};\r\n        case  '/CARDS/SET_PACK_USER_ID':\r\n            return {...state, packUserId: action.userPack_id,};\r\n\r\n        case '/CARDS/SET-SORT-MAX':\r\n            return {...state, maxGrade: action.sortMax};\r\n        case '/CARDS/SET-SORT-MIN':\r\n            return {...state, minGrade: action.sortMin};\r\n        case '/CARDS/SET-CARD-NAME':\r\n            return {...state, cardQuestion: action.searchName};\r\n        case '/CARDS/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage};\r\n        case '/CARDS/SET-PAGE-SIZE':\r\n            return {...state, currentPage: action.currentPage, pageSize: action.pageSize};\r\n        case '/CARDS/SET-SORT-CARDS':\r\n            return {...state, sortCards: action.sortCards};\r\n\r\n        case '/CARDS/SET_LOADING':\r\n            return {...state, tableLoading: action.loading};\r\n        case '/CARDS/SET_SUCCESS':\r\n            return {...state, tableSuccess: action.success};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const CardsActions = {\r\n    setCardsAC: (cards: Array<CardType>) => ({type: '/CARDS/SET_CARDS', cards} as const),\r\n    setCardsTotalCount: (totalCount: number) => ({type: '/CARDS/CARDS-TOTAL-COUNT', totalCount} as const),\r\n    setUserPack_id: (userPack_id: string) => ({type: '/CARDS/SET_PACK_USER_ID', userPack_id} as const),\r\n\r\n    setMaxGradeAC: (sortMax: number) => ({type: '/CARDS/SET-SORT-MAX', sortMax} as const),\r\n    setMinGradeAC: (sortMin: number) => ({type: '/CARDS/SET-SORT-MIN', sortMin} as const),\r\n    setCardQuestionNameAC: (searchName: string) => ({type: '/CARDS/SET-CARD-NAME', searchName} as const),\r\n    setCurrentPageCardsAC: (currentPage: number) => ({type: '/CARDS/SET-CURRENT-PAGE', currentPage} as const),\r\n    setPageSizeCardsAC: (currentPage: number, pageSize: number) => ({\r\n        type: '/CARDS/SET-PAGE-SIZE',\r\n        currentPage,\r\n        pageSize\r\n    } as const),\r\n\r\n    setSortCardsAC: (sortCards: string) => ({type: '/CARDS/SET-SORT-CARDS', sortCards} as const),\r\n    setCardsLoading: (loading: boolean) => ({type: '/CARDS/SET_LOADING', loading,} as const),\r\n    setCardsSuccess: (success: boolean) => ({type: '/CARDS/SET_SUCCESS', success,} as const),\r\n\r\n\r\n};\r\nexport const getCardsTC = (id: string): ThunkType => async (\r\n    dispatch, getState\r\n) => {\r\n    const {\r\n        cardQuestion, maxGrade, minGrade, sortCards, currentPage, pageSize\r\n    } = getState().cards;\r\n    dispatch(CardsActions.setCardsLoading(true));\r\n    try {\r\n        const data = await CardsAPI.getCards(id, cardQuestion, maxGrade, minGrade,\r\n            sortCards, currentPage, pageSize);\r\n        dispatch(CardsActions.setCardsAC(data.cards));\r\n        dispatch(CardsActions.setCardsTotalCount(data.cardsTotalCount));\r\n        dispatch(CardsActions.setCardsSuccess(true));\r\n        console.log('Get cards Success!', data);\r\n    } catch (e) {\r\n        debugger\r\n        dispatch(appActions.setServerError(e.response.data.error));\r\n    }\r\n};\r\nexport const updateCardTC = (id: string, pack_id: string, cardQuestion?: string, cardAnswer?: string): ThunkType => async (\r\n    dispatch) => {\r\n\r\n    try {\r\n        await CardsAPI.updateCard(id, cardQuestion, cardAnswer);\r\n        dispatch(getCardsTC(pack_id));\r\n    } catch (e) {\r\n        dispatch(appActions.setServerError(e.error));\r\n    }\r\n};\r\n\r\nexport const deleteCardTC = (id: string, pack_id: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        await CardsAPI.deleteCard(id);\r\n        dispatch(getCardsTC(pack_id));\r\n    } catch (e) {\r\n        dispatch(appActions.setServerError(e.error));\r\n    }\r\n};\r\nexport const addCardTC = (id: string, cardQuestion?: string, cardAnswer?: string): ThunkType => async (\r\n    dispatch) => {\r\n    try {\r\n        await CardsAPI.addCard(id, cardQuestion, cardAnswer);\r\n        dispatch(getCardsTC(id));\r\n    } catch (e) {\r\n        dispatch(appActions.setServerError(e.error));\r\n    }\r\n};\r\n\r\nexport const gradeCardsTC = (grade: number, card_id: string): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            await CardsAPI.gradeCard(grade, card_id);\r\n            console.log('grade good');\r\n        } catch (e) {\r\n            dispatch(appActions.setServerError(e.error));\r\n        }\r\n    };\r\nexport type CardsActionsType = InferActionsTypes<typeof CardsActions> | authActionsType;\r\ntype ThunkType = BaseThunkType<CardsActionsType | AppActionsType>;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {CardType} from '../f-1-all/f-3_CardsTable/c2-bll/CardTypes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../main/m2-bll/store';\r\nimport {useParams} from 'react-router-dom';\r\nimport {getCardsTC, gradeCardsTC} from '../f-1-all/f-3_CardsTable/c2-bll/cards-reducer';\r\n\r\n\r\nconst getSortCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    return cards[res.id + 1];\r\n}\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nexport const LearnPage = () => {\r\n    const dispatch = useDispatch();\r\n    const [showAnswer, setShowAnswer] = useState<boolean>(false);\r\n    const [firstVisit, setFirstVisit] = useState<boolean>(true);\r\n    const {cards} = useSelector((state: AppStateType) => state.cards);\r\n    const {id} = useParams<{ id: string }>();\r\n    const [card, setCard] = useState<CardType>({} as CardType);\r\n\r\n    useEffect(() => {\r\n        if (firstVisit) {\r\n            dispatch(getCardsTC(id));\r\n            setFirstVisit(false);\r\n        }\r\n\r\n        if (cards.length > 0) setCard(getSortCard(cards));\r\n\r\n    }, [dispatch, id, cards, firstVisit]);\r\n\r\n    const onNextQuestion = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        dispatch(gradeCardsTC((+e.currentTarget.value + 1), card._id))\r\n        setShowAnswer(false)\r\n        setCard(getSortCard(cards))\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div>\r\n                Learn Page\r\n                <div>{card.question}</div>\r\n                <div>\r\n                    <button onClick={() => setShowAnswer(true)}>Show Answer..</button>\r\n                </div>\r\n                {showAnswer && (\r\n                    <>\r\n                        <div>{card.answer}</div>\r\n                        {grades.map((el, i) => (\r\n                            <button onClick={onNextQuestion} value={i} key={'g-' + i}>{el}</button>\r\n                        ))}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, {CSSProperties, ReactNode} from 'react';\r\nimport st from './MyTable.module.css';\r\n\r\nexport type TableNyaModelType = {\r\n    title: (index: number, loading: boolean) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number, loading: boolean) => ReactNode;\r\n}\r\n\r\nexport type TableNyaPropsType = {\r\n    loading?: boolean; title?: string; model: TableNyaModelType[]; data: any;\r\n    headerStyle?: CSSProperties, tableStyle?: CSSProperties, rowsStyle?: CSSProperties, rowStyle?: CSSProperties,\r\n}\r\n\r\nconst MyTable: React.FC<TableNyaPropsType> = (\r\n    {\r\n        loading = false, title = 'table', model, data,\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <div className={st.wrapper}>\r\n            {title}\r\n\r\n            <div className={st.header}>\r\n                {model.map((m, index) => m.title(index, loading))}\r\n\r\n\r\n            </div>\r\n\r\n            <div className={st.row}>\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div key={title + '-row-' + (dataItem._id || dataIndex)}\r\n                        className={st.inside}>\r\n                        {model.map((m: any, modelIndex: any) =>\r\n                            m.render(dataItem, modelIndex, dataIndex, loading))}\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTable;\r\n","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Paginator} from '../../../../../main/common/Paginator/Paginator';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {CardsStateType} from '../../c2-bll/CardTypes';\r\nimport {CardsActions} from '../../c2-bll/cards-reducer';\r\n\r\n\r\nexport const CardsPagination = ()=> {\r\n    const dispatch = useDispatch();\r\n    const {currentPage, pageSize, cardsTotalCount} =\r\n        useSelector<AppStateType, CardsStateType>(state => state.cards)\r\n\r\n    const onPageChanged = useCallback((pageNumber: number) => {\r\n        dispatch(CardsActions.setCurrentPageCardsAC(pageNumber))\r\n    }, [dispatch,currentPage]);\r\n    const togglePageSize = useCallback((pageNumber: number, pageSize: number) => {\r\n        dispatch(CardsActions.setPageSizeCardsAC(pageNumber, pageSize))\r\n    }, [pageSize])\r\n\r\n    \r\n\r\n    return(\r\n        <Paginator\r\n            pageSize={pageSize} totalItemsCount={cardsTotalCount}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={currentPage}\r\n            togglePageSize={togglePageSize}\r\n        />\r\n    )\r\n}","import React, {useCallback} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {Search} from '../../../../../main/common/search/Search';\r\nimport {CardsStateType} from '../../c2-bll/CardTypes';\r\nimport {AppStateType} from '../../../../../main/m2-bll/store';\r\nimport {CardsActions, getCardsTC} from '../../c2-bll/cards-reducer';\r\n\r\n\r\n\r\n\r\nexport const CardsSearch:React.FC<{id:string}> = ({id}) => {\r\n    const dispatch = useDispatch();\r\n    const {maxGrade, minGrade,cardQuestion} = useSelector<AppStateType,CardsStateType>(state => state.cards)\r\n    let valueMultiRAnge = [minGrade, maxGrade]\r\n\r\n    const onChangeMultiRange = useCallback((value: number[]) => {\r\n        dispatch(CardsActions.setMaxGradeAC(value[1]))\r\n        dispatch(CardsActions.setMinGradeAC(value[0]))\r\n    }, [dispatch]);\r\n\r\n    const onInputChange = useCallback((searchName: string) => {\r\n        dispatch(CardsActions.setCardQuestionNameAC(searchName))\r\n    }, [dispatch]);\r\n\r\n    const onSearchBtn = useCallback(() => {\r\n        dispatch(getCardsTC(id))\r\n    },[dispatch])\r\n    const onShowAll = useCallback( ()=> {\r\n        dispatch(CardsActions.setMaxGradeAC(5))\r\n        dispatch(CardsActions.setMinGradeAC(0))\r\n        dispatch(CardsActions.setCardQuestionNameAC(''))\r\n        dispatch(getCardsTC(id))\r\n    },[dispatch])\r\n\r\n    return (\r\n        <Search onChange={onInputChange} inputValue={cardQuestion} step={1} domain={[0, 5]}\r\n                valueMultiRAnge={valueMultiRAnge}\r\n                onChangeMultiRange={onChangeMultiRange}\r\n                onSearch={onSearchBtn} onShowAll={onShowAll}\r\n        />\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {AppStateType} from '../../../../main/m2-bll/store';\r\nimport MyTable, {TableNyaModelType} from '../../../../main/m1-ui/common/myComponent/MyTable/TableNya';\r\nimport {cardsModel} from './CardsModel';\r\nimport {addCardTC, deleteCardTC, getCardsTC, updateCardTC} from '../c2-bll/cards-reducer';\r\nimport {CardsPagination} from './cardsPagination/CardsPagination';\r\nimport {CardsSearch} from './cardsSearch/CardsSearch';\r\nimport {MySnackBar} from '../../../../main/common/myComponent/MySnackBar/MySnackBar';\r\nimport st from '../../f-2_PacksTable/f-2_ui/Packs.module.css';\r\nimport ModalContainer from '../../../f-2-modal/ModalContainer';\r\n\r\n\r\nexport const CardsPage = React.memo(() => {\r\n    const {id} = useParams<{ id: string }>();\r\n    const {cards, currentPage, pageSize, sortCards,} = useSelector((store: AppStateType) => store.cards);\r\n    const serverError = useSelector<AppStateType, string>(state => state.app.serverError);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(id));\r\n    }, [dispatch, id, currentPage, pageSize, sortCards]);\r\n//Opens modal windows\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    // set right callback to modal (ternary expression)\r\n    const [updateDeck, setUpdateDeck] = useState(true);\r\n    //provide card id for modal component\r\n    const [cardId, setCardId] = useState('');\r\n    //delete or change modal\r\n    const [flagChangeModal, setFlagChangeModal] = useState(true);\r\n\r\n\r\n    const cardFilter = cards.filter(e => e._id === cardId);\r\n\r\n    //these funcs open modals\r\n    const openAddModal = () => {\r\n        setFlagChangeModal(true);\r\n        setTitle('It is time to create a new card');\r\n        setUpdateDeck(false);\r\n        setIsOpen(true);\r\n\r\n    };\r\n\r\n    const openDeleteModal = (currentId: string) => {\r\n\r\n        setCardId(currentId);\r\n        setFlagChangeModal(false);\r\n        setTitle('Do you want to delete current card?');\r\n        setIsOpen(true);\r\n        debugger\r\n\r\n    };\r\n\r\n    const openUpdateModal = (currentId: string) => {\r\n        debugger\r\n        setCardId(currentId);\r\n        setFlagChangeModal(true);\r\n        setUpdateDeck(true);\r\n        setTitle('Change this card');\r\n        setIsOpen(true);\r\n\r\n    };\r\n    const confirmDelete = () => {\r\n        dispatch(deleteCardTC(cardId, id));\r\n    };\r\n    const addModal = (cardQuestion?: string, cardAnswer?: string) => {\r\n        dispatch(addCardTC(id, cardQuestion, cardAnswer));\r\n    };\r\n    const updateModal = (cardQuestion?: string, cardAnswer?: string) => {\r\n        dispatch(updateCardTC(cardId, id, cardQuestion, cardAnswer));\r\n    };\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const model: TableNyaModelType[] = cardsModel(\r\n        () => openAddModal(),\r\n        (currentId) => openDeleteModal(currentId),\r\n        (currentId) => openUpdateModal(currentId),\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            {flagChangeModal ?\r\n                <ModalContainer title={title} closeModal={closeModal} isOpen={isOpen}\r\n                                changePack={updateDeck ? updateModal : addModal}\r\n                                buttonName={updateDeck ? 'UPDATE' : 'ADD'}\r\n                                updateAnswer={cardId ? cardFilter[0].answer : ''\r\n                                }\r\n                                updateItemName={cardId ? cardFilter[0].question : ''}\r\n\r\n                />\r\n                :\r\n                <ModalContainer title={title} closeModal={closeModal}\r\n                                changePack={confirmDelete} isOpen={isOpen}\r\n                                buttonName={'DELETE'}\r\n                                updateAnswer={cardId ? cardFilter[0].answer : ' '}\r\n                                updateItemName={cardId ? cardFilter[0].question : ''}/>\r\n            }\r\n\r\n            <section className={st.containerWrapper}>\r\n                <CardsSearch id={id}/>\r\n                Cards Page\r\n                <MyTable model={model} data={cards} title={'Cards'}/>\r\n                <CardsPagination/>\r\n                {serverError && <MySnackBar errorServer={serverError}/>}\r\n            </section>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport {TableNyaModelType} from '../../../../main/m1-ui/common/myComponent/MyTable/TableNya';\r\nimport {CardType} from '../c2-bll/CardTypes';\r\nimport TableBtn from '../../../../main/m1-ui/common/myComponent/BtnForTable/TableBtn';\r\nimport st from './Cards.module.css';\r\n\r\nexport const cardsModel = (\r\n    addModalPack: () => void,\r\n    openDeleteModal: (cardId: string) => void,\r\n    openUpdateModalPack: (cardId: string) => void\r\n): TableNyaModelType[] => [\r\n    {\r\n        title: (index) => (\r\n            <div key={'question-title-' + index} className={st.item}>question</div>\r\n        ),\r\n        render: (dataItem: CardType) => (\r\n            <div key={'question-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.question.slice(0, 30) + '..'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index) => (\r\n            <div key={'answer-title-' + index} className={st.item}>answer</div>\r\n        ),\r\n        render: (dataItem: CardType) => (\r\n            <div key={'answer-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.answer.slice(0, 30) + '..'}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index) => (\r\n            <div key={'grade-title-' + index} className={st.item}>Grade</div>\r\n        ),\r\n        render: (dataItem: CardType) => (\r\n            <div key={'grade-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.grade.toFixed(5)}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index) => (\r\n            <div key={'updated-title-' + index} className={st.item}>updated</div>\r\n        ),\r\n        render: (dataItem: CardType) => (\r\n            <div key={'updated-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.updated.slice(5, 16)}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index) => (\r\n            <div key={'url-title-' + index} className={st.item}>url</div>\r\n        ),\r\n        render: (dataItem: CardType) => (\r\n            <div key={'url-cell-' + dataItem._id} className={st.item}>\r\n                {dataItem.answerImg}\r\n                <div>{dataItem.answerVideo}</div>\r\n                <div>{dataItem.questionImg}</div>\r\n                <div>{dataItem.questionVideo}</div>\r\n                <pre>{dataItem.comments}</pre>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index) => (\r\n            <div key={'buttons-title-' + index} className={st.item}>\r\n                <TableBtn onClick={() => {\r\n                    addModalPack();\r\n                }}>add</TableBtn>\r\n            </div>\r\n        ),\r\n        render: (dataItem: CardType) => (\r\n            <div key={'buttons-cell-' + dataItem._id} className={st.item}>\r\n                <TableBtn onClick={() => openDeleteModal(dataItem._id)}>delete</TableBtn>\r\n                <TableBtn onClick={() => {\r\n                    openUpdateModalPack(dataItem._id);\r\n                }}>update</TableBtn>\r\n            </div>\r\n        )\r\n    },\r\n];\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {PNF} from '../notFound/PNF';\r\nimport {ProfileContainer} from '../profile/ProfileContainer';\r\nimport {SignIn} from '../../../features/f-1-all/f-1_autorization/f-1_ui/signIn/SingIn';\r\nimport {RegistrationContainer} from '../../../features/f-1-all/f-1_autorization/f-1_ui/registration/RegistrationContainer';\r\nimport {RecoveryPasswordContainer} from '../../../features/f-1-all/f-1_autorization/f-1_ui/recoveryPassword/RecoveryPasswordContainer';\r\nimport {SetNewPasswordContainer} from '../../../features/f-1-all/f-1_autorization/f-1_ui/setNewPassword/SetNewPasswordContainer';\r\nimport {PacksPage} from '../../../features/f-1-all/f-2_PacksTable/f-2_ui/PacksPage';\r\nimport {LearnPage} from '../../../features/f-3-learn/LearnPage';\r\nimport {CardsPage} from '../../../features/f-1-all/f-3_CardsTable/c1-ui/CardsPage';\r\nimport ModalContainer from '../../../features/f-2-modal/ModalContainer';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/';\r\nexport const REGISTRATION_PATH = '/registration';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\nexport const RECOVERY_PASSWORD_PATH = '/recoveryPass';\r\nexport const SET_NEW_PASSWORD_PATH = '/new-pass/:token?';\r\nexport const PACKS_PATH = '/packs';\r\nexport const TEST_COMPONENT_PATH = '/test';\r\nexport const CARDS_PATH = '/cards'; // почему не цепляется id??\r\nexport const LEARN_PATH = '/learn';\r\nexport const MODAL = '/modal';\r\n\r\nexport const Routes: React.FC<any> = () => {\r\n\r\n    return <>\r\n        <Switch>\r\n            <Route exact path={SIGN_IN_PATH} component={SignIn}/>\r\n            <Route path={REGISTRATION_PATH} component={RegistrationContainer}/>\r\n            <Route path={PROFILE_PATH} component={ProfileContainer}/>\r\n            <Route path={RECOVERY_PASSWORD_PATH} component={RecoveryPasswordContainer}/>\r\n            <Route path={SET_NEW_PASSWORD_PATH} component={SetNewPasswordContainer}/>\r\n            <Route path={PACKS_PATH} component={PacksPage}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} component={PNF}/>\r\n            <Route path={CARDS_PATH + '/:id?'} component={CardsPage}/>\r\n            <Route path={LEARN_PATH + '/:id?'} component={LearnPage}/>\r\n            <Route path={MODAL} component={ModalContainer}/>\r\n\r\n            <Redirect from={'*'} to={PAGE_NOT_FOUND_PATH}/>\r\n        </Switch>\r\n\r\n    </>;\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    PACKS_PATH,\r\n    PAGE_NOT_FOUND_PATH,\r\n    PROFILE_PATH,\r\n    RECOVERY_PASSWORD_PATH,\r\n    REGISTRATION_PATH,\r\n    SET_NEW_PASSWORD_PATH,\r\n    SIGN_IN_PATH,\r\n    TEST_COMPONENT_PATH\r\n} from '../routes/Routes';\r\nimport style from './Header.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../m2-bll/store';\r\n\r\nexport type HeaderType = {}\r\n\r\nexport const Header = (props: HeaderType) => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n    return <section className={style.header}>\r\n        <nav className={style.header_nav}>\r\n            {!isAuth && <NavLink to={SIGN_IN_PATH} exact activeClassName={style.header_nav__link}>Sign In</NavLink>}\r\n            {/*<NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>*/}\r\n            {/*<NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>*/}\r\n            {/*<NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>*/}\r\n            {isAuth && <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>}\r\n            {isAuth && <NavLink to={PACKS_PATH} activeClassName={style.header_nav__link}>Packs</NavLink>}\r\n            {/*<NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>*/}\r\n        </nav>\r\n    </section>;\r\n};\r\n// export const Header = (props: HeaderType) => {\r\n//\r\n//     return <section className={style.header}>\r\n//         <nav className={style.header_nav}>\r\n//             <NavLink to={SIGN_IN_PATH} exact activeClassName={style.header_nav__link}>Sign In</NavLink>\r\n//             {/*<NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>*/}\r\n//             {/*<NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>*/}\r\n//             {/*<NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>*/}\r\n//             <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>\r\n//             {/*<NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>*/}\r\n//             <NavLink to={PACKS_PATH} activeClassName={style.header_nav__link}>Packs</NavLink>\r\n//             {/*<NavLink to={TEST_COMPONENT_PATH} activeClassName={style.header_nav__link}>Test</NavLink>*/}\r\n//         </nav>\r\n//     </section>;\r\n// };\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/loader.37f92040.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/preloader/loader.svg\";\r\n\r\nconst style = {\r\n    width: '60px',\r\n    height:'60px',\r\n    display:'block',\r\n    margin: '0 auto'\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\" style={style}/>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from './m1-ui/header/Header';\r\nimport {Routes} from './m1-ui/routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Preloader} from './common/Preloader/Preloader';\r\nimport {AppStateType} from './m2-bll/store';\r\nimport {AppInitialStateType, AuthMe} from './m2-bll/app-reducer';\r\n\r\nfunction App() {\r\n    const {isInitializing} = useSelector<AppStateType, AppInitialStateType>(state => state.app)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(AuthMe())\r\n    }, [dispatch])\r\n\r\n    if (!isInitializing) return <Preloader/>\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {authReducer} from '../../features/f-1-all/f-1_autorization/f-1_bll/auth-reducer';\r\nimport {packsReducer} from '../../features/f-1-all/f-2_PacksTable/f-2_bll/packs-reducer';\r\nimport {cardsReducer} from '../../features/f-1-all/f-3_CardsTable/c2-bll/cards-reducer';\r\n\r\n\r\n//actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n//thunk's type\r\nexport type BaseThunkType<A extends Action = Action, R = any> = ThunkAction<R, AppStateType, unknown, A>\r\n//state type\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst reducers = combineReducers({\r\n    auth:authReducer,\r\n    profile:profileReducer,\r\n    app: appReducer,\r\n    packs:packsReducer,\r\n    cards: cardsReducer,\r\n    //newPassword: setNewPasswordReducer\r\n});\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './main/m2-bll/store';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n                <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Packs_item__S_Dws\",\"containerWrapper\":\"Packs_containerWrapper__2097y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Cards_item__2dyBA\",\"containerWrapper\":\"Cards_containerWrapper__Z7COd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SingInForm_wrapper__1m81K\",\"click\":\"SingInForm_click__XIe5-\",\"has_error\":\"SingInForm_has_error__1551Z\",\"title\":\"SingInForm_title__1EPTe\",\"footer\":\"SingInForm_footer__1YRDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2O5DB\",\"header_nav\":\"Header_header_nav__DrKAV\",\"header_nav__link\":\"Header_header_nav__link__1HpwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg\":\"Registration_reg__1UHW-\",\"reg_title\":\"Registration_reg_title__3PLJS\",\"reg_form\":\"Registration_reg_form__3HNNG\",\"reg_form__error\":\"Registration_reg_form__error__3JEmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"MyModal_modalOverlay__Kc2dZ\",\"modalWindow\":\"MyModal_modalWindow__39TF6\",\"modalHeader\":\"MyModal_modalHeader__nQNAC\",\"modalBody\":\"MyModal_modalBody__z5u7A\",\"modalFooter\":\"MyModal_modalFooter__A_e6L\",\"modalTitle\":\"MyModal_modalTitle__2ZUJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SetNewPassword_error__1oJ5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1Ocyl\",\"pageNumber\":\"Paginator_pageNumber__2FDOe\",\"selectedPage\":\"Paginator_selectedPage__ayb4Z\",\"paginator_btn\":\"Paginator_paginator_btn__D32WT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"table_header__KyWap\",\"row\":\"table_row__2Njfw\",\"wrapper\":\"table_wrapper__3NWC0\",\"inside\":\"table_inside__3qB0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MyTable_header__1fo4I\",\"row\":\"MyTable_row__3ojCl\",\"wrapper\":\"MyTable_wrapper__32EAF\",\"inside\":\"MyTable_inside__1xdg0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pnf\":\"pnf_pnf__oyjWf\",\"pnf_error\":\"pnf_pnf_error__54vnS\",\"pnf_descr\":\"pnf_pnf_descr__3P7Zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__iRc0I\",\"redBtn\":\"MyBtn_redBtn__2IGXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__2ZT_n\",\"red\":\"MyInput_red__1MDC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MySnackBar\":\"MySnackBar_MySnackBar__2xJhG\",\"MySnackBar_text\":\"MySnackBar_MySnackBar_text__1scdJ\",\"MySnackBar_btn\":\"MySnackBar_MySnackBar_btn__1-ixj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TableBtn_btn__3IYW1\",\"redBtn\":\"TableBtn_redBtn__1FOGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TableBtn_btn__1BoUp\",\"redBtn\":\"TableBtn_redBtn__hSxkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"MyMultiRange_slider__30Eaz\",\"railStyle\":\"MyMultiRange_railStyle__UUxML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__aOgeg\",\"search_btn\":\"Search_search_btn__3VQok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNya_link__WuZBG\"};"],"sourceRoot":""}