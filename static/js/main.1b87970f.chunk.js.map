{"version":3,"sources":["main/m1-ui/components/header/Header.module.css","main/m1-ui/components/signIn/SingInForm.module.css","main/m1-ui/components/registration/Registration.module.css","main/m1-ui/components/notFound/pnf.module.css","main/m1-ui/common/myComponent/myBtn/MyBtn.module.css","main/m1-ui/common/myComponent/myInput/MyInput.module.css","main/m1-ui/common/myComponent/myInput/MyInputTest.module.css","main/m1-ui/components/profile/Profile.tsx","main/m1-ui/components/notFound/PNF.tsx","main/m1-ui/components/recoveryPassword/RecoveryPassword.tsx","main/m1-ui/components/setNewPassword/SetNewPassword.tsx","main/m1-ui/common/myComponent/myBtn/MyBtn.tsx","main/m1-ui/common/myComponent/myInput/MyInput.tsx","main/m3-dal/api.ts","main/m2-bll/signIn-reducer.ts","main/m1-ui/common/myComponent/myInput/MyInputTest.tsx","main/m1-ui/components/signIn/SignInForm.tsx","main/m1-ui/components/signIn/SingIn.tsx","main/m1-ui/components/TestComponent/MyComponent.tsx","main/m1-ui/assets/preloader/loader.svg","main/m1-ui/common/Preloader/Preloader.tsx","main/m1-ui/components/registration/Registration.tsx","main/m3-dal/authAPI.ts","main/m2-bll/registration-reducer.ts","main/m1-ui/components/registration/RegistrationContainer.tsx","main/m1-ui/components/routes/Routes.tsx","main/m1-ui/components/header/Header.tsx","main/m1-ui/App.tsx","reportWebVitals.ts","main/m2-bll/profile-reducer.ts","main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Profile","PNF","className","style","pnf","pnf_error","pnf_descr","RecoveryPassword","SetNewPassword","MyBtn","props","error","styles","redBtn","btn","onClick","disabled","name","MyInput","inputBase","red","onBlur","type","value","onChange","onKeyPress","placeholder","instance","axios","create","baseURL","withCredentials","authAPI","data","post","initialState","isLoggedIn","signInActions","MyInputTest","e","charCode","SignInForm","st","title","emailValue","hasEmailFieldError","formikEmailError","has_error","passValue","hasPasswordFieldError","formikPassError","click","checked","SignIn","dispatch","useDispatch","useSelector","state","signIn","formik","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","length","onSubmit","alert","a","response","message","to","wrapper","handleSubmit","handleChange","TestComponent","console","log","width","height","display","margin","Preloader","src","preloader","alt","Registration","repeatPass","loading","setEmail","setPassword","setRepeatPassword","formSubmit","reg","reg_title","reg_form","reg_form__error","authApi","then","res","registerSuccess","RegistrationContainer","useState","setEmailVal","setPasswordVal","setRepeatPassVal","registration","useCallback","currentTarget","match","addedUser","catch","err","JSON","stringify","finally","registerTC","SIGN_IN_PATH","REGISTRATION_PATH","PROFILE_PATH","PAGE_NOT_FOUND_PATH","RECOVERY_PASSWORD_PATH","SET_NEW_PASSWORD_PATH","TEST_COMPONENT_PATH","Routes","path","component","Header","header","header_nav","activeClassName","header_nav__link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b87970f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ih8R\",\"header_nav\":\"Header_header_nav__3OrmJ\",\"header_nav__link\":\"Header_header_nav__link__1ifim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SingInForm_wrapper__3zhj5\",\"click\":\"SingInForm_click__3WO8j\",\"has_error\":\"SingInForm_has_error__3eIZw\",\"title\":\"SingInForm_title__uV39D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg\":\"Registration_reg__2MTkG\",\"reg_title\":\"Registration_reg_title__243Ch\",\"reg_form\":\"Registration_reg_form__3LWhs\",\"reg_form__error\":\"Registration_reg_form__error__1LPSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pnf\":\"pnf_pnf__2KgTX\",\"pnf_error\":\"pnf_pnf_error__28Eus\",\"pnf_descr\":\"pnf_pnf_descr__2rEup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyBtn_btn__3_vFN\",\"redBtn\":\"MyBtn_redBtn__1XT6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInput_inputBase__2TMXn\",\"red\":\"MyInput_red__1pG1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBase\":\"MyInputTest_inputBase__274cT\",\"red\":\"MyInputTest_red__33Qh7\"};","import React from 'react';\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    return <section>\r\n        Profile\r\n    </section>\r\n}","import React from 'react';\r\nimport style from './pnf.module.css'\r\n\r\n\r\n\r\nexport const PNF:React.FC = ()=> {\r\n\r\n    return <section className={style.pnf}>\r\n        <div className={style.pnf_error}> 404 </div>\r\n        <p className={style.pnf_descr}>Sorry, Page not Found...</p>\r\n    </section>\r\n}","import React from 'react';\r\n\r\nexport const RecoveryPassword: React.FC = () => {\r\n\r\n    return <section>\r\n        <h1>RecoveryPassword</h1>\r\n        <span>Forgot your password?</span>\r\n        <div>\r\n            <span>Enter your mail for </span>\r\n\r\n            <span>Enter your mail for </span>\r\n            <span>Enter your mail for </span>\r\n            BLA BLA\r\n            <input/>\r\n        </div>\r\n    </section>\r\n}","import React from 'react';\r\n\r\n\r\nexport const SetNewPassword: React.FC = () => {\r\n\r\n    return <section>\r\n        SetNewPassword\r\n    </section>\r\n}","import React from 'react';\r\nimport styles from \"./MyBtn.module.css\";\r\n\r\nexport type myBtnType = {\r\n    name: string\r\n    type?: string\r\n    error?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport function MyBtn(props: myBtnType) {\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className={props.error ? `${styles.redBtn} ${styles.btn}` : styles.btn}\r\n                onClick={props.onClick}\r\n                disabled={props.disabled}\r\n            > {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './MyInput.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value?: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e:React.ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: () => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInput(props: myInputType) {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onKeyPress={props.onKeyPress}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    //локально:\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    // gh-pages:\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const profileAPI = {\r\n    getProfili(){\r\n        return instance.get<any>(`myURL`)\r\n\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    login(data:LoginParamsType){\r\n        return instance.post<ResponseType>('auth/login',data)}\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n\r\n}\r\nexport type ResponseType = {\r\n    _id:string\r\n    email:string\r\n    name:string\r\n    avatar?:string\r\n    publicCardPacksCount:number\r\n    created:Date\r\n    updated:Date\r\n    isAdmin:boolean\r\n    verified:boolean\r\n    rememberMe:boolean\r\n    error:string\r\n\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authAPI, LoginParamsType} from '../m3-dal/api';\r\n\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\nexport const signInReducer = (state: initialStateType = initialState, action: SignInActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'singIn/SET-IS-LOGGED-IN':\r\n            return  {...state, isLoggedIn: action.value}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\nconst signInActions = {\r\n    setIsLoggedInAC: (value:boolean) => ({type: 'singIn/SET-IS-LOGGED-IN',value} as const),\r\n}\r\n\r\n//thunk's\r\nexport const SingInTC = (data:LoginParamsType):ThunkType => async (dispatch) => {\r\n    // dispatch(setAppStatusAC('loading'))\r\n    try {\r\n        const response = await authAPI.login(data)\r\n        if (!response.data.error){\r\n            dispatch(signInActions.setIsLoggedInAC(true))\r\n        }\r\n    }\r\n    catch (e){\r\n        const error = e.response ? e.response.data.error :(e.message +',more details on the console');\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\ntype initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<SignInActionsType>\r\ntype SignInActionsType = InferActionsTypes<typeof signInActions>\r\n\r\n","import React, {KeyboardEvent} from 'react';\r\nimport styles from './MyInputTest.module.css';\r\n\r\n\r\nexport type myInputType = {\r\n    type: string\r\n    value: string\r\n    error?: boolean\r\n    autoFocus?: boolean\r\n    placeholder?: string\r\n    onChange: (e: string | React.ChangeEvent<any>) => void\r\n    onKeyPress?: () => void\r\n    onBlur?: () => void\r\n    name?: string\r\n}\r\n\r\nexport function MyInputTest(props: myInputType) {\r\n\r\n    const onPressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (props.onKeyPress && e.charCode === 13) {\r\n            props.onKeyPress();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={props.error ? `${styles.inputBase} ${styles.red}` : styles.inputBase}\r\n                onBlur={props.onBlur}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n                onKeyPress={onPressEnter}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport st from './SingInForm.module.css';\r\nimport {MyInputTest} from '../../common/myComponent/myInput/MyInputTest';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\n\r\ntype PropsType = {\r\n    onChange: (e: string | React.ChangeEvent<any>) => void\r\n    title: string\r\n    emailValue: string\r\n    hasEmailFieldError: boolean\r\n    formikEmailError: string | undefined\r\n    passValue: string\r\n    hasPasswordFieldError: boolean\r\n    formikPassError: string | undefined\r\n    checked: boolean\r\n    onClick: () => void\r\n}\r\n\r\n\r\nexport const SignInForm: React.FC<PropsType> = (props) => {\r\n    return <div>\r\n        <div className={st.title}>{props.title}</div>\r\n        <MyInputTest type='email'\r\n                     onChange={props.onChange}\r\n                     value={props.emailValue}\r\n                     placeholder={'email'}\r\n                     name={'email'}\r\n                     error={props.hasEmailFieldError}/> {props.formikEmailError ?\r\n        <div className={st.has_error}>{props.formikEmailError}</div> : null}\r\n        <MyInputTest type='password'\r\n                     onChange={props.onChange}\r\n                     value={props.passValue}\r\n                     placeholder={'password'}\r\n                     error={props.hasPasswordFieldError} name={'password'}/>{props.formikPassError ?\r\n        <div className={st.has_error}>{props.formikPassError}</div> : null}\r\n\r\n        <div className={st.click}>\r\n            <div>\r\n                <input type='checkbox' checked={props.checked} onChange={props.onChange}/>RememberMe\r\n            </div>\r\n            <MyBtn name={'Login'} type=\"submit\" onClick={props.onClick}/>\r\n        </div>\r\n    </div>;\r\n};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {useFormik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport st from './SingInForm.module.css';\r\nimport {SingInTC} from '../../../m2-bll/signIn-reducer';\r\nimport {SignInForm} from './SignInForm';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const SignIn: React.FC<any> = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.signIn.isLoggedIn);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 7) {\r\n                errors.password = 'Must be more than 7 characters';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            alert('Login operation is successful ');\r\n            dispatch(SingInTC(values));\r\n        },\r\n    });\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n    const hasEmailFieldError = !!formik.errors.email;\r\n    const hasPasswordFieldError = !!formik.errors.password;\r\n\r\n    return <div className={st.wrapper}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <SignInForm\r\n                title={'LOGIN FORM'}\r\n                onChange={formik.handleChange}\r\n                onClick={formik.handleSubmit}\r\n                emailValue={formik.values.email}\r\n                formikEmailError={formik.errors.email}\r\n                formikPassError={formik.errors.password}\r\n                passValue={formik.values.password}\r\n                hasEmailFieldError={hasEmailFieldError}\r\n                hasPasswordFieldError={hasPasswordFieldError}\r\n                checked={formik.values.rememberMe}\r\n            />\r\n        </form>\r\n    </div>;\r\n};","import React from 'react';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {SignIn} from '../signIn/SingIn';\r\n\r\nexport const TestComponent = () => {\r\n\r\n    return (\r\n        <section>\r\n            <MyBtn name={'test'}\r\n                   onClick={() => alert('hello')}/>\r\n            <MyInput type={'input'} value={''}\r\n                     onChange={() => console.log('hello')}/>\r\n            <hr/>\r\n            <SignIn/>\r\n        </section>\r\n    );\r\n};","export default __webpack_public_path__ + \"static/media/loader.37f92040.svg\";","import React from \"react\";\r\nimport preloader from \"../../assets/preloader/loader.svg\";\r\n\r\nconst style = {\r\n    width: '60px',\r\n    height:'60px',\r\n    display:'block',\r\n    margin: '0 auto'\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <img src={preloader} alt=\"preloader\" style={style}/>\r\n    )\r\n}","import React from 'react';\r\nimport {MyInput} from '../../common/myComponent/myInput/MyInput';\r\nimport {MyBtn} from '../../common/myComponent/myBtn/MyBtn';\r\nimport style from './Registration.module.css';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\n\r\ntype RegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPass: string\r\n    error: string\r\n    loading: boolean\r\n    setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    setRepeatPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    formSubmit: () => void\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationType> = (props) => {\r\n    const {email, password, repeatPass, error, loading, setEmail, setPassword, setRepeatPassword, formSubmit} = props;\r\n\r\n    if(loading) return <Preloader/>\r\n\r\n    return <section>\r\n        <main className={style.reg}>\r\n            <div className={style.reg_title}> Registration form</div>\r\n            <form className={style.reg_form}>\r\n                <div>\r\n                    <span>Enter your email:</span>\r\n                    <MyInput error={!!error} type='email'\r\n                             value={email} onChange={setEmail}\r\n                             placeholder='email...'/>\r\n                </div>\r\n                <div>\r\n                    <span>Enter your password:</span>\r\n                    <MyInput error={!!error} type='password'\r\n                             value={password} onChange={setPassword}\r\n                             placeholder='min 8 symbols..'/>\r\n                </div>\r\n                <div>\r\n                    <span>Repeat your password:</span>\r\n                    <MyInput error={!!error} type='password'\r\n                             value={repeatPass} onChange={setRepeatPassword}\r\n                             placeholder='min 8 symbols...'/>\r\n                </div>\r\n                {error ? <p className={style.reg_form__error}> {error} </p> : ''}\r\n                <div>\r\n                    <MyBtn disabled={loading} name={'Login'} onClick={formSubmit}/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    </section>\r\n}","import {instance} from './api';\r\n\r\n\r\nexport const authApi = {\r\n    register(email: string, password: string) {\r\n        return instance.post<ResponseReg>('auth/register', {email, password})\r\n            .then(res => res.data)\r\n    },\r\n\r\n}\r\n\r\ntype newUserType = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\ntype ResponseReg = {\r\n    addedUser: newUserType\r\n    error: string\r\n}","import {BaseThunkType, InferActionsTypes} from './store';\r\nimport {authApi} from '../m3-dal/authAPI';\r\n\r\n//actions\r\nexport const signInActions = {\r\n    setRegisterSuccess: () => ({type: '/REG/SET-REGISTER-SUCCESS'} as const),\r\n    setLoading: (loading: boolean) => ({type: '/REG/SET-LOADING', loading} as const),\r\n    setError: (error: string) => ({type: '/REG/SET-ERROR', error} as const),\r\n}\r\n\r\n//thunk's\r\nexport const registerTC = (email: string, password: string): ThunkType => (dispatch) => {\r\n    dispatch(signInActions.setLoading(true))\r\n    authApi.register(email, password)\r\n        .then(response => {\r\n            if (response.addedUser) dispatch(signInActions.setRegisterSuccess())\r\n        })\r\n        .catch(err => {\r\n            dispatch(signInActions.setError(JSON.stringify(err.response.data.error)))\r\n        })\r\n        .finally(() => dispatch(signInActions.setLoading(false)))\r\n}\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: '',\r\n    registerSuccess: false\r\n}\r\nexport const registrationReducer = (state: initialStateType = initialState, action: RegistrationActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case '/REG/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case '/REG/SET-REGISTER-SUCCESS':\r\n            return {...state, registerSuccess: true}\r\n        case '/REG/SET-LOADING':\r\n            return {...state, loading: action.loading}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<RegistrationActionsType>\r\ntype RegistrationActionsType = InferActionsTypes<typeof signInActions>\r\n\r\n","import React, {useCallback, useState} from 'react';\r\nimport {Registration} from './Registration';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../m2-bll/store';\r\nimport {initialStateType, registerTC, signInActions} from '../../../m2-bll/registration-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../routes/Routes';\r\n\r\nexport type eInput = React.ChangeEvent<HTMLInputElement>\r\n\r\nexport const RegistrationContainer: React.FC = () => {\r\n\r\n    const [email, setEmailVal] = useState<string>('')\r\n    const [password, setPasswordVal] = useState('')\r\n    const [repeatPass, setRepeatPassVal] = useState('')\r\n\r\n    const {loading, error, registerSuccess} = useSelector<AppStateType, initialStateType>(state => state.registration)\r\n    const dispatch = useDispatch()\r\n\r\n    const setEmail = useCallback((e: eInput) => {\r\n        setEmailVal(e.currentTarget.value)\r\n    }, [setEmailVal])\r\n    const setPassword = useCallback((e: eInput) => {\r\n        setPasswordVal(e.currentTarget.value)\r\n    }, [setPasswordVal])\r\n    const setRepeatPassword = useCallback((e: eInput) => {\r\n        setRepeatPassVal(e.currentTarget.value)\r\n    }, [setRepeatPassVal])\r\n\r\n    const formSubmit = useCallback(() => {\r\n        if (!email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)) {\r\n            dispatch(signInActions.setError('Uncorrected email'))\r\n        } else if (password.length < 7) {\r\n            dispatch(signInActions.setError('Password must be more than 8 characters...'))\r\n        } else if (password !== repeatPass) {\r\n            dispatch(signInActions.setError('Invalid second password'))\r\n        } else if (email && password && repeatPass) {\r\n            dispatch(registerTC(email, password))\r\n        }\r\n    }, [password, repeatPass, email,dispatch])\r\n\r\n\r\n    if (registerSuccess) return <Redirect to={SIGN_IN_PATH}/>\r\n    return <section>\r\n        <Registration\r\n            email={email}\r\n            password={password}\r\n            repeatPass={repeatPass}\r\n            error={error}\r\n            loading={loading}\r\n            setEmail={setEmail}\r\n            setPassword={setPassword}\r\n            setRepeatPassword={setRepeatPassword}\r\n            formSubmit={formSubmit}\r\n        />\r\n    </section>\r\n}\r\n\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {Profile} from '../profile/Profile';\r\nimport {PNF} from '../notFound/PNF';\r\nimport {RecoveryPassword} from '../recoveryPassword/RecoveryPassword';\r\nimport {SetNewPassword} from '../setNewPassword/SetNewPassword';\r\nimport {TestComponent} from '../TestComponent/MyComponent';\r\nimport {RegistrationContainer} from '../registration/RegistrationContainer';\r\nimport {SignIn} from '../signIn/SingIn';\r\n\r\nexport const SIGN_IN_PATH = '/signIn';\r\nexport const REGISTRATION_PATH = '/registration';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PAGE_NOT_FOUND_PATH = '/404';\r\nexport const RECOVERY_PASSWORD_PATH = '/recovery-pass';\r\nexport const SET_NEW_PASSWORD_PATH = '/new-pass';\r\nexport const TEST_COMPONENT_PATH = '/test-component';\r\n\r\n\r\nexport const Routes: React.FC = () => {\r\n\r\n    return <>\r\n            <Route path={SIGN_IN_PATH} component={SignIn}/>\r\n            <Route path={REGISTRATION_PATH} component={RegistrationContainer}/>\r\n            <Route path={PROFILE_PATH} component={Profile}/>\r\n            <Route path={PAGE_NOT_FOUND_PATH} component={PNF}/>\r\n            <Route path={RECOVERY_PASSWORD_PATH} component={RecoveryPassword}/>\r\n            <Route path={SET_NEW_PASSWORD_PATH} component={SetNewPassword}/>\r\n            <Route path={TEST_COMPONENT_PATH} component={TestComponent}/>\r\n    </>\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    PAGE_NOT_FOUND_PATH,\r\n    PROFILE_PATH, RECOVERY_PASSWORD_PATH,\r\n    REGISTRATION_PATH, SET_NEW_PASSWORD_PATH,\r\n    SIGN_IN_PATH,\r\n    TEST_COMPONENT_PATH\r\n} from '../routes/Routes';\r\nimport style from './Header.module.css'\r\nexport type HeaderType = {}\r\n\r\nexport const Header = (props: HeaderType) => {\r\n\r\n    return <section className={ style.header}>\r\n        <nav className={style.header_nav}>\r\n            <NavLink to={SIGN_IN_PATH} activeClassName={style.header_nav__link}>Sign In</NavLink>\r\n            <NavLink to={RECOVERY_PASSWORD_PATH} activeClassName={style.header_nav__link}>Recovery password</NavLink>\r\n            <NavLink to={SET_NEW_PASSWORD_PATH} activeClassName={style.header_nav__link}>Set new Password</NavLink>\r\n            <NavLink to={REGISTRATION_PATH} activeClassName={style.header_nav__link}>Registration</NavLink>\r\n            <NavLink to={PROFILE_PATH} activeClassName={style.header_nav__link}>Profile</NavLink>\r\n            <NavLink to={PAGE_NOT_FOUND_PATH} activeClassName={style.header_nav__link}>404</NavLink>\r\n            <NavLink to={TEST_COMPONENT_PATH} activeClassName={style.header_nav__link}>Test Components</NavLink>\r\n        </nav>\r\n    </section>\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from './components/header/Header';\nimport {Routes} from './components/routes/Routes';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {BaseThunkType, InferActionsTypes} from './store';\r\n\r\n//actions\r\nconst signInActions = {\r\n    testAC: (test1:any) => ({type: 'TEST',test1} as const),\r\n}\r\n\r\n//thunk's\r\nexport const testThunk = (test1:any):ThunkType => (dispatch) => {\r\n    dispatch(signInActions.testAC(test1))\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n    test: 'test123'\r\n}\r\nexport const profileReducer = (state: initialStateType = initialState, action: ProfileActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'TEST':\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype initialStateType = typeof initialState\r\ntype ThunkType = BaseThunkType<ProfileActionsType>\r\ntype ProfileActionsType = InferActionsTypes<typeof signInActions>\r\n\r\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {signInReducer} from './signIn-reducer';\r\nimport {registrationReducer} from './registration-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\n\r\n\r\n//actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n//thunk's type\r\nexport type BaseThunkType<A extends Action = Action, R = any> = ThunkAction<R, AppStateType, unknown, A>\r\n//state type\r\nexport type AppStateType = ReturnType<typeof reducers>;\r\n\r\nconst reducers = combineReducers({\r\n    signIn: signInReducer,\r\n    registration: registrationReducer,\r\n    profile:profileReducer,\r\n});\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './main/m2-bll/store';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n      <HashRouter>\n          <App/>\n      </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}